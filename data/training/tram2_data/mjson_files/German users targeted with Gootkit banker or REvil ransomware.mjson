{"signal": "title: German users targeted with Gootkit banker or REvil ransomware\nurl: https://blog.malwarebytes.com/threat-analysis/2020/11/german-users-targeted-with-gootkit-banker-or-revil-ransomware/\n\nThis blog post was authored by Hasherezade and Jérôme Segura\nOn November 23, we received an alert from a partner about a resurgence of Gootkit infections in Germany. Gootkit is a very capable banking Trojan that has been around since 2014 and possesses a number of functionalities such as keystroke or video recording designed to steal financially-related information.\nIn this latest campaign, threat actors are relying on compromised websites to socially engineer users by using a decoy forum template instructing them to download a malicious file.\nWhile analyzing the complex malware loader we made a surprising discovery. Victims receive Gootkit itself or, in some cases, the REvil (Sodinokibi) ransomware. The decision to serve one or the other payload happens after a check with the criminal infrastructure.\nGootkit attacks observed in Germany\nSecurity researcher TheAnalyst was the first to publicly identify an active campaign in November using a sophisticated loader that was eventually attributed to Gootkit, a banking Trojan not observed in the wild for some time. Germany’s Computer Emergency Response Team CERT-Bund later confirmed that German users were being targeted via compromised websites.\nAround the same time, we started receiving reports from some of our partners and their ISPs about Gootkit-related traffic. We were able to confirm Gootkit detections within our telemetry that were all located in Germany.\nFigure 1: Gootkit infections in Germany in the wake of the campaign\nAfter a couple of days, we remediated over 600 unique machines that had been compromised.\nFake forum template on hacked websites\nThe initial loader is spread via hacked websites using an interesting search engine optimization (SEO) technique to customize a fake template that tries to trick users to download a file.\nThe template mimics a forum thread where a user asks in German for help about a specific topic and receives an answer which appears to be exactly what they were looking for. It’s worth noting that the hacked sites hosting this template are not German (only the template is); they simply happen to be vulnerable and are used as part of the threat actor’s infrastructure.\nFigure 2: Compromised site loads decoy template to trick victims\nThis fake forum posting is conditionally and dynamically created if the correct victim browses the compromised website. A script removes the legitimate webpage content from the DOM and adds its own content (the template showing a link to a file to download).\nFigure 3: A view of the HTML code behind the decoy template\nThere is a server-side check prior to each visit to the page to determine if the user has already been served the fake template or not, in which case the webserver will return legitimate content instead.\nFileless execution and module installation\nThe infection process starts once the victim executes a malicious script inside the zip archive they just downloaded.\nFigure 4: Malicious script, heavily obfuscated\nThis script is the first of several stages that leads to the execution of the final payload. The following diagram shows a high level overview:\nFigure 5: Infection flow\nStage 1 – The first JavaScript\nThe first JavaScript is the module that has to be manually executed by the victim, and it has been obfuscated in order to hide its real intentions. The obfuscation consists of three layers where one decodes content for the next. \nThe first stage (a version with cleaned formatting available here) decodes the next element:\nFigure 6: First stage script\nThe decoded output is a comma-separated array of JavaScript blocks:\nFigure 7: Decoded comma-separated array of scripts\nThere are four elements in the array that are referenced by their indexes. For example, the element with the index 0 means “constructor”, 1 is another block of JavaScript code, 2 is empty, 3 is a wrapper that causes a call to a supplied code.\nBlock 1 is responsible for reading/writing registry keys under “HKEY_CURRENT_USER\\SOFTWARE\\<script-specific name>”. It also deobfuscates and runs another block of code:\nFigure 8: Third JavaScript layer\nThis fragment of code is responsible for connecting to the C2. It fetches the domains from the list, and tries them one by one. If it gets a response, it runs it further.\nThe above downloader script is the first stage of the loading process. Functionality-wise it is almost identical in all the dropped files. The differentiation between the variants starts in the next part, which is another JavaScript fetched from the C2 server.\nStage 2 – The second JavaScript (downloaded from the C2)\nThe expected response from the server is a decimal string, containing a pseudorandom marker used for validation. It needs to be removed before further processing. The marker consists of “@[request argument]@”.\nFigure 9: GET request with C2 server\nAfter conversion to ASCII, the next JavaScript is revealed, and the code is executed. This JavaScript comes with an embedded PE payload which may be either a loader for Gootkit, or for the REvil ransomware. There are also some differences in the algorithm used to deobfuscate it. \nExample for the Gootkit variant (commented, full)\nFigure 10: The downloaded JavaScript\nThe downloaded code chunk is responsible for installing the persistent elements. It also runs a Powershell script that reads the storage, decodes it and runs it further.\nStage 3 – The stored payload and the decoding Powershell\nThe authors diversified the method of encoding and storing the payload. During our tests we observed two ways of encoding. In one of them, the PE is stored as a Base64 encoded string, and in the other as a hexadecimal string, obfuscated by having certain numbers substituted by a pattern.\nThe payload is usually stored as a list of registry keys, yet we also observed a variant in which similar content was written into a TXT file.\nExample of the payload stored in a file:\nFigure 11: Payload as a file on disk\nThe content of the file is an obfuscated Powershell script that runs another Base64 obfuscated layer that finally decodes the .NET payload.\nExample of the Powershell script that runs to deobfuscate the file:\n\"C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe\" -ExecutionPolicy Bypass -windowstyle hidden -Command \"IEX (([System.IO.File]::ReadAllText('C:\\Users\\[username]\\bkquwxd.txt')).Replace('~',''));\"\nBelow we will study two examples of the loader: One that leads to execution of the REvil ransomware, and another that leads to the execution of Gootkit.\nExample 1—Loading REvil ransomware\nThe example below shows the variant in which a PE file was encoded as an obfuscated hexadecimal string. In the analyzed case, the whole flow led to execution of REvil ransomware. The sandbox analysis presenting this case is available here.\nExecution of the second stage JavaScript leads to the payload being written to the registry, as a list of keys. The content is encoded as hexadecimal, and mildly obfuscated.\nFigure 12: Fragment of the payload stored in the registry, encoded as a hexadecimal string obfuscated with a pattern\nAfter writing the keys, the JavaScript deploys a PowerShell command that is responsible for decoding and running the stored content.\nFigure 13: The JS component deploys PowerShell with a Base64 encoded script\nDecoded content of the script:\nFigure 14: Decoded content\nIt reads the content from the registry keys and deobfuscates it by substituting patterns. In the given example, the pattern “!@#” in the hexadecimal string was substituted by “1000”, then the PE was decoded and loaded with the help of .NET Reflection.\n The next stage PE file (.NET):\nREvil loader: (0e451125eaebac5760c2f3f24cc8112345013597fb6d1b7b1c167001b17d3f9f) \nThe .NET loader comes with a hardcoded string that is the next stage PE: the final malicious payload. The Setup function called by the PowerShell script is responsible for decoding and running the next PE:\nFigure 15: Hardcoded string (PE)\nFigure 16: Deploying the payload\nThe loader runs to the next stage with the help of Process Hollowing – one of the classic methods of PE injection.\nFigure 17: REvil ransom note\nExample 2 – Loading Gootkit\nIn an other common variant, the payload is saved as Base64. The registry keys compose a PowerShell script in the following format:\n$Command =[System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(\"[content]\")); Invoke-Expression $Command;Start-Sleep -s 22222;\nFigure 18: Registry key storing payload\nAfter decoding the base64-encoded content, we get another PowerShell script:\nFigure 19: More PowerShell\nIt comes with yet another Base64-encoded piece that is further decompressed and loaded with the help of Reflection Assembly. It is the .NET binary, similar to the previous one.\nGootkit loader:(973d0318f9d9aec575db054ac9a99d96ff34121473165b10dfba60552a8beed4)\nThe script calls a function “Install1” from the .NET module. This function loads another PE, that is embedded inside as a base64 encoded buffer:\nFigure 20: Another buffer\nFigure 21: Deploying the payload\nThis time the loader uses another method of PE injection, manual loading into the parent process.\nThe revealed payload is a Gootkit first stage binary: 60aef1b657e6c701f88fc1af6f56f93727a8f4af2d1001ddfa23e016258e333f. This PE is written in Delphi. In its resources we can find another PE (327916a876fa7541f8a1aad3c2270c2aec913bc8898273d545dc37a85ef7307f ), obfuscated by XOR with a single byte. It is further loaded by the first one.\nLoader like matryoshka dolls with a side of REvil\nThe threat actors behind this campaign are using a very clever loader that performs a number of steps to evade detection. Given that the payload is stored within the registry under a randomly-named key, many security products will not be able to detect and remove it.\nHowever, the biggest surprise here is to see this loader serve REvil ransomware in some instances. We were able to reproduce this flow in our lab once, but most of the time we saw Gootkit.\nThe REvil group has very strict rules for new members who must pass the test and verify as Russian. One thing we noticed in the REvil sample we collected is that the ransom note still points to decryptor.top instead of decryptor.cc, indicating that this could be an older sample.\nBanking Trojans represent a vastly different business model than ransomware. The latter has really flourished during the past few years and has earned criminals millions of dollars in part thanks to large ransom payments from high profile victims. We’ve seen banking malware (i.e. Emotet) turn into loaders for ransomware where different threat actors can specialize in what they do best. Time will tell what this return of Gootkit really means and how it might evolve.\nDetection and protection\nMalwarebytes prevents, detects and removes Gootkit and REvil via our different protection layers. As we collect indicators of compromise we are able to block the distribution sites so that users do not download the initial loader.\nOur behavior-based anti-exploit layer also blocks the malicious loader without any signatures when the JavaScript is opened via an archiving app such as WinRar or 7-Zip.\nFigure 22: Blocking on script execution\nIf a system is already infected with Gootkit, Malwarebytes can remediate the infection by cleaning up the registry entries where Gootkit hides:\nFigure 23: Detection of payload hidden in registry\nFinally, we also detect and stop the REvil (Sodinokibi) ransomware:\nFigure 24: REvil ransomware blocked heuristically\nIndicators of Compromise\nCompromised websites downloading JavaScript loader:\ndocs.anscommerce[.]comellsweb[.]netentrepasteles[.]supercurro.netm-uhde[.]degames.usc[.]edudoedlinger-erdbau[.]at\n3rd stage JavaScript C2s:\nbadminton-dillenburg[.]dealona[.]org[.]cyaperosaintmartin[.]com\nVariant 1 (Gootkit):\nNET loader [973d0318f9d9aec575db054ac9a99d96ff34121473165b10dfba60552a8beed4]Delphi PE [60aef1b657e6c701f88fc1af6f56f93727a8f4af2d1001ddfa23e016258e333f]PE stored in resources [327916a876fa7541f8a1aad3c2270c2aec913bc8898273d545dc37a85ef7307f]\nVariant 2 (REvil):\nNET loader [0e451125eaebac5760c2f3f24cc8112345013597fb6d1b7b1c167001b17d3f9f]Delphi PE [d0e075a9346acbeca7095df2fc5e7c28909961184078e251f737f09b8ef892b6] – the ransomwarePE stored in resources [a7e363887e9a7cc7f8de630b12005813cb83d6e3fc3980f735df35dccf5a1341] – a helper component\nThe post German users targeted with Gootkit banker or REvil ransomware appeared first on Malwarebytes Labs.\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 12650, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 13], [14, 19], [20, 28], [29, 33], [34, 41], [42, 48], [49, 51], [52, 57], [58, 68], [69, 72], [72, 73], [74, 79], [79, 82], [82, 86], [86, 87], [87, 99], [99, 100], [100, 103], [103, 104], [104, 119], [119, 120], [120, 124], [124, 125], [125, 127], [127, 128], [128, 189], [189, 190], [192, 196], [197, 201], [202, 206], [207, 210], [211, 219], [220, 222], [223, 234], [235, 238], [239, 245], [246, 252], [253, 255], [256, 264], [265, 267], [267, 268], [269, 271], [272, 280], [281, 283], [284, 289], [290, 294], [295, 296], [297, 304], [305, 310], [311, 312], [313, 323], [324, 326], [327, 334], [335, 345], [346, 348], [349, 356], [356, 357], [358, 365], [366, 368], [369, 370], [371, 375], [376, 383], [384, 391], [392, 398], [399, 403], [404, 407], [408, 412], [413, 419], [420, 425], [426, 430], [431, 434], [435, 444], [445, 446], [447, 453], [454, 456], [457, 472], [473, 477], [478, 480], [481, 490], [491, 493], [494, 499], [500, 509], [510, 518], [519, 521], [522, 527], [528, 547], [548, 559], [559, 560], [561, 563], [564, 568], [569, 575], [576, 584], [584, 585], [586, 592], [593, 599], [600, 603], [604, 611], [612, 614], [615, 626], [627, 635], [636, 638], [639, 647], [648, 656], [657, 662], [663, 665], [666, 671], [672, 673], [674, 679], [680, 685], [686, 694], [695, 706], [707, 711], [712, 714], [715, 723], [724, 725], [726, 735], [736, 740], [740, 741], [742, 747], [748, 757], [758, 761], [762, 769], [770, 777], [778, 784], [785, 787], [788, 792], [793, 794], [795, 805], [806, 815], [815, 816], [817, 824], [825, 832], [833, 840], [841, 847], [848, 850], [850, 851], [852, 854], [855, 859], [860, 865], [865, 866], [867, 870], [871, 876], [877, 878], [878, 888], [888, 889], [890, 900], [900, 901], [902, 905], [906, 914], [915, 917], [918, 923], [924, 927], [928, 930], [931, 934], [935, 940], [941, 948], [949, 956], [957, 962], [963, 964], [965, 970], [971, 975], [976, 979], [980, 988], [989, 1003], [1003, 1004], [1005, 1012], [1013, 1020], [1021, 1029], [1030, 1032], [1033, 1040], [1041, 1049], [1050, 1060], [1061, 1071], [1072, 1075], [1076, 1079], [1080, 1085], [1086, 1088], [1089, 1097], [1098, 1106], [1107, 1109], [1110, 1116], [1117, 1125], [1126, 1128], [1129, 1137], [1138, 1143], [1144, 1145], [1146, 1159], [1160, 1166], [1167, 1171], [1172, 1175], [1176, 1186], [1187, 1197], [1198, 1200], [1201, 1208], [1208, 1209], [1210, 1211], [1212, 1219], [1220, 1226], [1227, 1230], [1231, 1239], [1240, 1242], [1243, 1246], [1247, 1251], [1252, 1255], [1256, 1260], [1261, 1265], [1265, 1266], [1267, 1276], [1277, 1285], [1286, 1295], [1296, 1304], [1305, 1309], [1310, 1319], [1320, 1325], [1326, 1335], [1336, 1340], [1341, 1347], [1348, 1353], [1354, 1358], [1359, 1364], [1365, 1373], [1374, 1377], [1378, 1389], [1390, 1398], [1398, 1399], [1400, 1406], [1407, 1410], [1411, 1415], [1416, 1420], [1420, 1421], [1422, 1424], [1425, 1432], [1433, 1442], [1443, 1450], [1451, 1455], [1456, 1460], [1461, 1463], [1464, 1467], [1468, 1476], [1477, 1480], [1481, 1486], [1487, 1491], [1492, 1497], [1498, 1513], [1514, 1521], [1521, 1522], [1523, 1525], [1526, 1530], [1531, 1535], [1536, 1538], [1539, 1546], [1547, 1554], [1555, 1565], [1566, 1572], [1573, 1576], [1577, 1586], [1587, 1591], [1592, 1596], [1597, 1600], [1601, 1608], [1609, 1611], [1612, 1619], [1619, 1620], [1621, 1627], [1628, 1629], [1629, 1630], [1631, 1638], [1639, 1649], [1650, 1652], [1653, 1660], [1661, 1663], [1664, 1667], [1668, 1672], [1673, 1675], [1676, 1679], [1680, 1688], [1689, 1694], [1695, 1696], [1697, 1703], [1704, 1706], [1707, 1711], [1711, 1712], [1713, 1715], [1716, 1726], [1727, 1731], [1732, 1735], [1736, 1742], [1743, 1751], [1752, 1756], [1757, 1760], [1761, 1765], [1766, 1777], [1777, 1778], [1779, 1783], [1784, 1789], [1790, 1798], [1799, 1801], [1802, 1808], [1809, 1817], [1818, 1821], [1822, 1829], [1830, 1836], [1837, 1839], [1840, 1846], [1847, 1850], [1851, 1857], [1858, 1866], [1867, 1872], [1873, 1875], [1876, 1887], [1888, 1894], [1895, 1901], [1902, 1914], [1915, 1916], [1916, 1919], [1919, 1920], [1921, 1930], [1931, 1933], [1934, 1943], [1944, 1945], [1946, 1950], [1951, 1959], [1960, 1964], [1965, 1970], [1971, 1973], [1974, 1979], [1980, 1985], [1986, 1988], [1989, 1997], [1998, 1999], [2000, 2004], [2004, 2005], [2006, 2009], [2010, 2018], [2019, 2025], [2026, 2027], [2028, 2033], [2034, 2040], [2041, 2046], [2047, 2048], [2049, 2053], [2054, 2058], [2059, 2061], [2062, 2068], [2069, 2072], [2073, 2077], [2078, 2083], [2084, 2085], [2086, 2094], [2095, 2100], [2101, 2104], [2105, 2113], [2114, 2116], [2117, 2123], [2124, 2129], [2130, 2137], [2138, 2140], [2141, 2143], [2144, 2151], [2152, 2156], [2157, 2161], [2162, 2166], [2167, 2174], [2175, 2178], [2178, 2179], [2180, 2184], [2185, 2190], [2191, 2197], [2198, 2202], [2203, 2206], [2207, 2213], [2214, 2219], [2220, 2227], [2228, 2232], [2233, 2241], [2242, 2245], [2246, 2249], [2250, 2256], [2257, 2258], [2258, 2262], [2263, 2266], [2267, 2275], [2276, 2278], [2278, 2280], [2281, 2285], [2286, 2292], [2293, 2299], [2300, 2302], [2303, 2305], [2306, 2316], [2317, 2320], [2321, 2324], [2325, 2329], [2330, 2332], [2333, 2337], [2338, 2340], [2341, 2344], [2345, 2351], [2352, 2359], [2360, 2374], [2374, 2375], [2376, 2382], [2383, 2384], [2384, 2385], [2386, 2397], [2398, 2402], [2403, 2408], [2409, 2414], [2415, 2423], [2424, 2426], [2427, 2432], [2433, 2440], [2441, 2445], [2446, 2450], [2451, 2456], [2457, 2464], [2465, 2467], [2468, 2481], [2482, 2485], [2486, 2497], [2498, 2505], [2506, 2508], [2509, 2512], [2513, 2520], [2521, 2527], [2528, 2535], [2536, 2539], [2540, 2551], [2552, 2559], [2559, 2560], [2561, 2562], [2563, 2569], [2570, 2577], [2578, 2581], [2582, 2592], [2593, 2600], [2601, 2608], [2609, 2613], [2614, 2617], [2618, 2621], [2622, 2625], [2626, 2630], [2631, 2634], [2635, 2638], [2639, 2646], [2647, 2648], [2648, 2651], [2652, 2660], [2661, 2668], [2669, 2670], [2671, 2675], [2676, 2678], [2679, 2680], [2681, 2685], [2686, 2688], [2689, 2697], [2697, 2699], [2700, 2706], [2707, 2708], [2708, 2709], [2710, 2711], [2712, 2716], [2717, 2719], [2720, 2723], [2724, 2728], [2729, 2733], [2734, 2740], [2741, 2744], [2745, 2750], [2751, 2759], [2760, 2765], [2766, 2768], [2769, 2770], [2771, 2782], [2783, 2788], [2789, 2794], [2795, 2797], [2798, 2802], [2803, 2808], [2809, 2811], [2812, 2815], [2816, 2820], [2821, 2823], [2824, 2833], [2834, 2836], [2837, 2840], [2841, 2845], [2846, 2849], [2850, 2857], [2858, 2862], [2863, 2869], [2870, 2873], [2874, 2878], [2879, 2887], [2888, 2890], [2891, 2894], [2894, 2895], [2896, 2898], [2899, 2904], [2905, 2909], [2910, 2913], [2914, 2923], [2924, 2928], [2929, 2935], [2936, 2946], [2947, 2954], [2955, 2962], [2962, 2963], [2964, 2972], [2973, 2982], [2983, 2986], [2987, 2993], [2994, 3006], [3007, 3010], [3011, 3020], [3021, 3028], [3029, 3035], [3036, 3040], [3041, 3044], [3045, 3051], [3052, 3060], [3061, 3062], [3063, 3072], [3073, 3079], [3080, 3086], [3087, 3090], [3091, 3094], [3095, 3102], [3103, 3107], [3108, 3112], [3113, 3123], [3123, 3124], [3125, 3131], [3132, 3133], [3133, 3134], [3135, 3144], [3145, 3151], [3151, 3152], [3153, 3160], [3161, 3171], [3172, 3176], [3177, 3183], [3184, 3186], [3187, 3190], [3191, 3196], [3197, 3199], [3200, 3207], [3208, 3214], [3215, 3219], [3220, 3225], [3226, 3228], [3229, 3232], [3233, 3242], [3243, 3245], [3246, 3249], [3250, 3255], [3256, 3263], [3263, 3264], [3265, 3268], [3269, 3278], [3279, 3286], [3287, 3292], [3293, 3294], [3295, 3299], [3300, 3305], [3306, 3314], [3314, 3315], [3316, 3322], [3323, 3324], [3324, 3325], [3326, 3335], [3336, 3340], [3341, 3346], [3347, 3348], [3349, 3350], [3351, 3354], [3355, 3360], [3361, 3371], [3372, 3375], [3376, 3381], [3382, 3392], [3393, 3395], [3396, 3399], [3400, 3406], [3407, 3411], [3412, 3415], [3416, 3418], [3419, 3421], [3422, 3430], [3431, 3439], [3440, 3442], [3443, 3446], [3447, 3453], [3453, 3454], [3455, 3458], [3459, 3461], [3462, 3465], [3466, 3470], [3471, 3481], [3482, 3484], [3485, 3490], [3491, 3493], [3494, 3498], [3499, 3502], [3503, 3507], [3508, 3518], [3518, 3519], [3520, 3523], [3524, 3535], [3536, 3544], [3545, 3547], [3548, 3553], [3554, 3560], [3561, 3566], [3567, 3570], [3571, 3578], [3579, 3586], [3587, 3590], [3591, 3594], [3595, 3599], [3599, 3600], [3602, 3605], [3606, 3611], [3612, 3617], [3618, 3619], [3619, 3620], [3621, 3628], [3629, 3633], [3634, 3641], [3642, 3652], [3653, 3667], [3667, 3668], [3669, 3676], [3677, 3680], [3681, 3685], [3686, 3693], [3693, 3694], [3695, 3701], [3702, 3703], [3703, 3704], [3705, 3710], [3711, 3716], [3717, 3723], [3724, 3727], [3728, 3735], [3736, 3742], [3743, 3745], [3746, 3747], [3748, 3763], [3764, 3769], [3770, 3772], [3773, 3783], [3784, 3790], [3790, 3791], [3792, 3798], [3799, 3800], [3800, 3801], [3802, 3809], [3810, 3825], [3826, 3831], [3832, 3834], [3835, 3842], [3843, 3848], [3849, 3852], [3853, 3857], [3858, 3866], [3867, 3869], [3870, 3873], [3874, 3879], [3880, 3884], [3885, 3888], [3889, 3899], [3900, 3902], [3903, 3908], [3909, 3916], [3916, 3917], [3918, 3921], [3922, 3929], [3929, 3930], [3931, 3934], [3935, 3942], [3943, 3947], [3948, 3951], [3952, 3957], [3958, 3959], [3960, 3965], [3966, 3979], [3979, 3980], [3981, 3982], [3983, 3985], [3986, 3993], [3994, 3999], [4000, 4002], [4003, 4013], [4014, 4018], [4018, 4019], [4020, 4021], [4022, 4024], [4025, 4030], [4030, 4031], [4032, 4033], [4034, 4036], [4037, 4038], [4039, 4046], [4047, 4051], [4052, 4058], [4059, 4060], [4061, 4065], [4066, 4068], [4069, 4070], [4071, 4079], [4080, 4084], [4084, 4085], [4086, 4091], [4092, 4093], [4094, 4096], [4097, 4108], [4109, 4112], [4113, 4120], [4120, 4121], [4121, 4128], [4129, 4137], [4138, 4142], [4143, 4148], [4149, 4184], [4184, 4193], [4194, 4200], [4200, 4201], [4202, 4204], [4205, 4209], [4210, 4222], [4223, 4226], [4227, 4231], [4232, 4239], [4240, 4245], [4246, 4248], [4249, 4253], [4253, 4254], [4255, 4261], [4262, 4263], [4263, 4264], [4265, 4270], [4271, 4281], [4282, 4287], [4288, 4292], [4293, 4301], [4302, 4304], [4305, 4309], [4310, 4312], [4313, 4324], [4325, 4328], [4329, 4339], [4340, 4342], [4343, 4346], [4347, 4349], [4349, 4350], [4351, 4353], [4354, 4361], [4362, 4365], [4366, 4373], [4374, 4378], [4379, 4382], [4383, 4387], [4387, 4388], [4389, 4392], [4393, 4398], [4399, 4403], [4404, 4407], [4408, 4410], [4411, 4414], [4414, 4415], [4416, 4418], [4419, 4421], [4422, 4426], [4427, 4428], [4429, 4437], [4437, 4438], [4439, 4441], [4442, 4446], [4447, 4449], [4450, 4457], [4457, 4458], [4459, 4462], [4463, 4468], [4469, 4479], [4480, 4486], [4487, 4489], [4490, 4493], [4494, 4499], [4500, 4505], [4506, 4508], [4509, 4512], [4513, 4520], [4521, 4528], [4528, 4529], [4530, 4548], [4549, 4551], [4552, 4554], [4555, 4561], [4562, 4571], [4572, 4574], [4575, 4578], [4579, 4582], [4583, 4590], [4591, 4596], [4596, 4597], [4598, 4601], [4602, 4617], [4618, 4625], [4626, 4629], [4630, 4638], [4639, 4645], [4646, 4648], [4649, 4652], [4653, 4657], [4658, 4662], [4662, 4663], [4664, 4669], [4670, 4672], [4673, 4680], [4681, 4691], [4692, 4699], [4700, 4704], [4705, 4708], [4709, 4711], [4712, 4718], [4718, 4719], [4720, 4725], [4726, 4727], [4728, 4729], [4730, 4733], [4734, 4740], [4741, 4751], [4752, 4753], [4753, 4763], [4764, 4768], [4769, 4772], [4773, 4775], [4775, 4776], [4777, 4780], [4781, 4789], [4790, 4798], [4799, 4803], [4804, 4807], [4808, 4814], [4815, 4817], [4818, 4819], [4820, 4827], [4828, 4834], [4834, 4835], [4836, 4846], [4847, 4848], [4849, 4861], [4862, 4868], [4869, 4873], [4874, 4877], [4878, 4888], [4888, 4889], [4890, 4892], [4893, 4898], [4899, 4901], [4902, 4904], [4905, 4912], [4913, 4919], [4920, 4927], [4928, 4938], [4938, 4939], [4940, 4943], [4944, 4950], [4951, 4959], [4960, 4962], [4963, 4965], [4965, 4973], [4974, 4983], [4983, 4985], [4985, 4986], [4987, 4993], [4994, 4995], [4995, 4996], [4997, 5000], [5001, 5008], [5009, 5013], [5014, 5016], [5017, 5023], [5024, 5029], [5030, 5040], [5041, 5043], [5044, 5049], [5049, 5050], [5051, 5054], [5055, 5059], [5060, 5070], [5071, 5073], [5074, 5082], [5082, 5083], [5084, 5087], [5088, 5091], [5092, 5096], [5097, 5099], [5100, 5108], [5108, 5109], [5110, 5114], [5115, 5125], [5126, 5131], [5132, 5136], [5137, 5139], [5140, 5148], [5149, 5151], [5152, 5159], [5160, 5165], [5166, 5169], [5170, 5172], [5173, 5179], [5180, 5181], [5182, 5188], [5189, 5192], [5193, 5200], [5200, 5201], [5202, 5204], [5205, 5208], [5209, 5212], [5213, 5218], [5219, 5229], [5229, 5230], [5231, 5236], [5237, 5240], [5241, 5245], [5246, 5250], [5251, 5262], [5263, 5265], [5266, 5269], [5270, 5279], [5280, 5284], [5285, 5287], [5288, 5299], [5300, 5302], [5302, 5303], [5305, 5312], [5313, 5316], [5317, 5320], [5321, 5328], [5329, 5336], [5337, 5338], [5338, 5347], [5347, 5348], [5349, 5353], [5353, 5354], [5355, 5361], [5362, 5364], [5364, 5365], [5366, 5369], [5370, 5380], [5381, 5391], [5392, 5395], [5396, 5406], [5407, 5411], [5412, 5417], [5418, 5420], [5421, 5432], [5433, 5436], [5437, 5447], [5448, 5451], [5452, 5462], [5463, 5471], [5471, 5472], [5473, 5475], [5476, 5480], [5481, 5485], [5486, 5487], [5488, 5498], [5499, 5505], [5506, 5510], [5511, 5516], [5517, 5520], [5521, 5528], [5528, 5529], [5530, 5537], [5538, 5540], [5541, 5544], [5545, 5549], [5550, 5552], [5553, 5560], [5560, 5561], [5562, 5567], [5568, 5569], [5570, 5571], [5572, 5575], [5576, 5582], [5583, 5590], [5591, 5594], [5595, 5598], [5599, 5607], [5608, 5618], [5619, 5622], [5623, 5630], [5631, 5642], [5643, 5646], [5647, 5653], [5654, 5656], [5657, 5665], [5666, 5669], [5670, 5677], [5678, 5681], [5682, 5689], [5689, 5690], [5691, 5697], [5698, 5701], [5702, 5707], [5708, 5710], [5711, 5719], [5720, 5723], [5724, 5728], [5729, 5731], [5732, 5740], [5740, 5741], [5742, 5744], [5745, 5748], [5749, 5751], [5752, 5756], [5756, 5757], [5758, 5761], [5762, 5764], [5765, 5767], [5768, 5774], [5775, 5777], [5778, 5779], [5780, 5786], [5787, 5794], [5795, 5801], [5801, 5802], [5803, 5806], [5807, 5809], [5810, 5813], [5814, 5819], [5820, 5822], [5823, 5824], [5825, 5836], [5837, 5843], [5843, 5844], [5845, 5855], [5856, 5858], [5859, 5865], [5866, 5873], [5874, 5881], [5882, 5893], [5894, 5896], [5897, 5898], [5899, 5906], [5906, 5907], [5908, 5911], [5912, 5919], [5920, 5922], [5923, 5930], [5931, 5937], [5938, 5940], [5941, 5942], [5943, 5947], [5948, 5950], [5951, 5959], [5960, 5964], [5964, 5965], [5966, 5969], [5970, 5972], [5973, 5977], [5978, 5986], [5987, 5988], [5989, 5996], [5997, 5999], [6000, 6005], [6006, 6013], [6014, 6021], [6022, 6025], [6026, 6033], [6034, 6038], [6039, 6040], [6041, 6044], [6045, 6049], [6049, 6050], [6051, 6058], [6059, 6061], [6062, 6065], [6066, 6073], [6074, 6080], [6081, 6083], [6084, 6085], [6086, 6090], [6090, 6091], [6092, 6098], [6099, 6101], [6101, 6102], [6103, 6110], [6111, 6113], [6114, 6115], [6116, 6120], [6121, 6123], [6124, 6128], [6129, 6132], [6133, 6140], [6141, 6143], [6144, 6147], [6148, 6152], [6153, 6155], [6156, 6158], [6159, 6169], [6170, 6180], [6181, 6187], [6188, 6192], [6193, 6197], [6198, 6205], [6206, 6212], [6213, 6223], [6224, 6229], [6230, 6234], [6235, 6242], [6243, 6250], [6251, 6254], [6255, 6256], [6256, 6259], [6260, 6267], [6267, 6268], [6269, 6276], [6277, 6279], [6280, 6283], [6284, 6294], [6295, 6301], [6302, 6306], [6307, 6311], [6312, 6314], [6315, 6326], [6327, 6330], [6331, 6335], [6335, 6336], [6337, 6338], [6338, 6339], [6339, 6340], [6340, 6378], [6378, 6380], [6380, 6391], [6391, 6392], [6392, 6395], [6395, 6396], [6397, 6413], [6414, 6420], [6421, 6433], [6434, 6440], [6441, 6449], [6450, 6451], [6451, 6454], [6455, 6458], [6458, 6464], [6464, 6465], [6465, 6467], [6467, 6468], [6468, 6473], [6473, 6475], [6475, 6486], [6486, 6488], [6488, 6489], [6489, 6490], [6490, 6515], [6515, 6516], [6516, 6519], [6519, 6523], [6523, 6530], [6530, 6532], [6532, 6533], [6533, 6541], [6542, 6547], [6548, 6550], [6551, 6555], [6556, 6561], [6562, 6565], [6566, 6574], [6575, 6577], [6578, 6581], [6582, 6588], [6588, 6589], [6590, 6593], [6594, 6598], [6599, 6604], [6605, 6607], [6608, 6617], [6618, 6620], [6621, 6624], [6625, 6630], [6631, 6641], [6641, 6642], [6643, 6646], [6647, 6654], [6655, 6659], [6660, 6665], [6666, 6668], [6669, 6672], [6673, 6682], [6683, 6685], [6686, 6693], [6693, 6694], [6695, 6702], [6703, 6712], [6713, 6718], [6719, 6729], [6730, 6733], [6734, 6741], [6742, 6747], [6748, 6753], [6754, 6757], [6758, 6765], [6766, 6768], [6769, 6774], [6775, 6776], [6777, 6779], [6780, 6784], [6785, 6788], [6789, 6796], [6797, 6799], [6800, 6802], [6803, 6813], [6814, 6825], [6826, 6832], [6832, 6833], [6834, 6836], [6837, 6840], [6841, 6849], [6850, 6854], [6854, 6855], [6856, 6859], [6860, 6865], [6866, 6870], [6871, 6874], [6875, 6877], [6878, 6887], [6888, 6890], [6891, 6896], [6897, 6907], [6907, 6908], [6909, 6912], [6913, 6920], [6921, 6929], [6930, 6940], [6941, 6945], [6946, 6950], [6951, 6953], [6954, 6963], [6964, 6968], [6968, 6969], [6970, 6979], [6980, 6982], [6983, 6986], [6987, 6993], [6994, 6999], [7000, 7010], [7011, 7016], [7017, 7019], [7020, 7023], [7024, 7031], [7032, 7037], [7038, 7045], [7046, 7048], [7049, 7052], [7053, 7061], [7061, 7062], [7063, 7065], [7066, 7067], [7068, 7072], [7073, 7075], [7076, 7080], [7080, 7081], [7082, 7085], [7086, 7093], [7094, 7096], [7097, 7104], [7105, 7107], [7108, 7119], [7119, 7120], [7121, 7124], [7125, 7131], [7132, 7142], [7142, 7143], [7144, 7150], [7151, 7153], [7153, 7154], [7155, 7163], [7164, 7166], [7167, 7170], [7171, 7178], [7179, 7185], [7186, 7188], [7189, 7192], [7193, 7201], [7201, 7202], [7203, 7210], [7211, 7213], [7214, 7215], [7216, 7227], [7228, 7234], [7235, 7245], [7246, 7250], [7251, 7252], [7253, 7260], [7261, 7266], [7267, 7274], [7275, 7278], [7279, 7283], [7283, 7284], [7285, 7288], [7289, 7299], [7300, 7307], [7308, 7309], [7310, 7320], [7321, 7328], [7329, 7333], [7334, 7336], [7337, 7348], [7349, 7352], [7353, 7361], [7362, 7365], [7366, 7373], [7374, 7377], [7378, 7384], [7385, 7392], [7392, 7393], [7394, 7400], [7401, 7403], [7403, 7404], [7405, 7408], [7409, 7411], [7412, 7421], [7422, 7429], [7430, 7440], [7441, 7445], [7446, 7447], [7448, 7454], [7455, 7462], [7463, 7469], [7470, 7477], [7478, 7485], [7486, 7488], [7489, 7492], [7493, 7499], [7499, 7500], [7501, 7507], [7508, 7510], [7510, 7511], [7512, 7519], [7520, 7527], [7528, 7530], [7531, 7536], [7537, 7540], [7541, 7548], [7549, 7553], [7554, 7557], [7558, 7566], [7567, 7571], [7572, 7575], [7576, 7588], [7589, 7591], [7592, 7594], [7595, 7607], [7608, 7616], [7616, 7617], [7618, 7620], [7621, 7624], [7625, 7630], [7631, 7638], [7638, 7639], [7640, 7643], [7644, 7651], [7652, 7653], [7653, 7654], [7654, 7657], [7658, 7660], [7661, 7664], [7665, 7676], [7677, 7683], [7684, 7687], [7688, 7699], [7700, 7702], [7703, 7709], [7709, 7710], [7711, 7715], [7716, 7719], [7720, 7722], [7723, 7726], [7727, 7734], [7735, 7738], [7739, 7745], [7746, 7750], [7751, 7754], [7755, 7759], [7760, 7762], [7763, 7764], [7764, 7767], [7768, 7778], [7778, 7779], [7781, 7784], [7785, 7789], [7790, 7795], [7796, 7798], [7799, 7803], [7804, 7806], [7806, 7809], [7809, 7811], [7812, 7817], [7818, 7824], [7824, 7825], [7826, 7827], [7827, 7891], [7891, 7892], [7894, 7897], [7898, 7899], [7899, 7902], [7903, 7909], [7910, 7915], [7916, 7920], [7921, 7922], [7923, 7932], [7933, 7939], [7940, 7944], [7945, 7947], [7948, 7951], [7952, 7956], [7957, 7962], [7963, 7965], [7965, 7966], [7967, 7970], [7971, 7976], [7977, 7986], [7987, 7994], [7994, 7995], [7996, 7999], [8000, 8005], [8006, 8014], [8015, 8021], [8022, 8024], [8025, 8028], [8029, 8039], [8040, 8046], [8047, 8049], [8050, 8061], [8062, 8065], [8066, 8074], [8075, 8078], [8079, 8086], [8087, 8090], [8091, 8095], [8096, 8098], [8098, 8099], [8100, 8106], [8107, 8109], [8109, 8110], [8111, 8120], [8121, 8127], [8128, 8129], [8129, 8131], [8131, 8132], [8133, 8139], [8140, 8142], [8142, 8143], [8144, 8153], [8154, 8157], [8158, 8165], [8166, 8169], [8170, 8176], [8177, 8181], [8182, 8184], [8185, 8188], [8189, 8193], [8194, 8199], [8200, 8204], [8205, 8208], [8209, 8213], [8214, 8216], [8217, 8224], [8225, 8234], [8235, 8236], [8237, 8240], [8241, 8243], [8244, 8247], [8248, 8255], [8256, 8263], [8264, 8266], [8267, 8269], [8270, 8279], [8279, 8280], [8281, 8287], [8288, 8290], [8290, 8291], [8292, 8297], [8298, 8304], [8305, 8309], [8310, 8317], [8318, 8319], [8320, 8321], [8322, 8329], [8330, 8337], [8338, 8340], [8341, 8343], [8344, 8349], [8350, 8356], [8357, 8364], [8364, 8365], [8366, 8369], [8370, 8377], [8378, 8380], [8381, 8386], [8387, 8389], [8390, 8396], [8396, 8397], [8398, 8401], [8402, 8410], [8411, 8415], [8416, 8423], [8424, 8425], [8426, 8436], [8437, 8443], [8444, 8446], [8447, 8450], [8451, 8460], [8461, 8467], [8467, 8468], [8469, 8477], [8478, 8480], [8480, 8486], [8486, 8487], [8487, 8491], [8491, 8492], [8492, 8501], [8501, 8503], [8503, 8510], [8510, 8511], [8511, 8520], [8520, 8522], [8522, 8528], [8528, 8529], [8529, 8537], [8537, 8539], [8539, 8555], [8555, 8558], [8558, 8566], [8566, 8570], [8571, 8588], [8589, 8597], [8597, 8598], [8598, 8609], [8610, 8612], [8613, 8618], [8618, 8619], [8620, 8626], [8627, 8629], [8629, 8630], [8631, 8639], [8640, 8643], [8644, 8651], [8652, 8659], [8660, 8665], [8666, 8674], [8675, 8678], [8679, 8685], [8685, 8693], [8694, 8701], [8701, 8702], [8703, 8705], [8706, 8709], [8710, 8717], [8718, 8728], [8729, 8735], [8735, 8736], [8737, 8743], [8744, 8746], [8746, 8747], [8748, 8752], [8753, 8763], [8764, 8766], [8767, 8772], [8773, 8777], [8778, 8781], [8782, 8789], [8790, 8796], [8796, 8804], [8805, 8810], [8811, 8815], [8816, 8818], [8819, 8826], [8827, 8839], [8840, 8843], [8844, 8850], [8851, 8855], [8856, 8859], [8860, 8864], [8865, 8867], [8868, 8878], [8879, 8887], [8887, 8888], [8889, 8891], [8892, 8894], [8895, 8898], [8899, 8900], [8900, 8903], [8904, 8910], [8910, 8911], [8912, 8919], [8920, 8922], [8923, 8926], [8927, 8935], [8936, 8939], [8939, 8940], [8941, 8948], [8949, 8955], [8955, 8957], [8957, 9021], [9021, 9022], [9023, 9026], [9027, 9033], [9034, 9039], [9040, 9041], [9042, 9050], [9051, 9061], [9062, 9066], [9067, 9070], [9071, 9072], [9072, 9075], [9076, 9082], [9082, 9083], [9084, 9088], [9089, 9097], [9098, 9103], [9104, 9111], [9112, 9114], [9114, 9115], [9116, 9120], [9121, 9123], [9124, 9132], [9133, 9139], [9140, 9142], [9143, 9144], [9145, 9151], [9152, 9159], [9160, 9166], [9166, 9167], [9168, 9174], [9175, 9177], [9177, 9178], [9179, 9186], [9187, 9193], [9194, 9200], [9201, 9203], [9203, 9204], [9205, 9214], [9215, 9218], [9219, 9226], [9227, 9231], [9232, 9236], [9237, 9240], [9241, 9247], [9248, 9252], [9253, 9260], [9261, 9267], [9268, 9270], [9271, 9273], [9274, 9283], [9283, 9284], [9285, 9291], [9292, 9299], [9300, 9304], [9305, 9308], [9309, 9315], [9316, 9323], [9323, 9324], [9325, 9328], [9329, 9337], [9338, 9345], [9346, 9348], [9349, 9350], [9351, 9358], [9359, 9364], [9365, 9370], [9371, 9377], [9377, 9378], [9379, 9443], [9443, 9444], [9445, 9449], [9450, 9452], [9453, 9455], [9456, 9463], [9464, 9466], [9467, 9473], [9473, 9474], [9475, 9477], [9478, 9481], [9482, 9491], [9492, 9494], [9495, 9498], [9499, 9503], [9504, 9511], [9512, 9514], [9515, 9516], [9516, 9580], [9581, 9583], [9584, 9594], [9595, 9597], [9598, 9601], [9602, 9606], [9607, 9608], [9609, 9615], [9616, 9620], [9620, 9621], [9622, 9624], [9625, 9627], [9628, 9635], [9636, 9642], [9643, 9645], [9646, 9649], [9650, 9655], [9656, 9659], [9659, 9660], [9661, 9667], [9668, 9672], [9673, 9683], [9684, 9689], [9690, 9694], [9695, 9696], [9697, 9701], [9702, 9704], [9705, 9710], [9711, 9714], [9715, 9721], [9722, 9728], [9729, 9735], [9736, 9740], [9741, 9749], [9750, 9753], [9754, 9759], [9760, 9761], [9762, 9766], [9767, 9773], [9774, 9780], [9781, 9785], [9786, 9794], [9795, 9796], [9797, 9803], [9804, 9806], [9807, 9812], [9813, 9815], [9816, 9821], [9822, 9831], [9831, 9832], [9833, 9838], [9839, 9843], [9844, 9847], [9848, 9855], [9856, 9858], [9859, 9865], [9866, 9872], [9873, 9876], [9877, 9885], [9886, 9891], [9892, 9893], [9894, 9908], [9909, 9912], [9912, 9913], [9914, 9918], [9919, 9927], [9928, 9936], [9937, 9941], [9942, 9945], [9946, 9948], [9949, 9953], [9954, 9956], [9957, 9963], [9964, 9967], [9968, 9974], [9975, 9977], [9977, 9978], [9979, 9986], [9986, 9987], [9988, 9991], [9992, 9999], [10000, 10008], [10009, 10013], [10014, 10016], [10017, 10019], [10020, 10023], [10024, 10028], [10029, 10035], [10036, 10041], [10042, 10047], [10048, 10058], [10059, 10061], [10062, 10066], [10067, 10076], [10076, 10077], [10078, 10080], [10081, 10085], [10086, 10090], [10091, 10093], [10094, 10103], [10104, 10108], [10109, 10113], [10114, 10116], [10117, 10120], [10121, 10124], [10125, 10129], [10129, 10130], [10131, 10134], [10135, 10139], [10140, 10142], [10143, 10146], [10147, 10151], [10152, 10154], [10155, 10158], [10159, 10166], [10166, 10167], [10168, 10171], [10172, 10177], [10178, 10183], [10184, 10187], [10188, 10192], [10193, 10199], [10200, 10205], [10206, 10209], [10210, 10213], [10214, 10221], [10222, 10225], [10226, 10230], [10231, 10235], [10236, 10239], [10240, 10244], [10245, 10248], [10249, 10255], [10256, 10258], [10259, 10266], [10266, 10267], [10268, 10271], [10272, 10277], [10278, 10280], [10281, 10288], [10289, 10291], [10292, 10295], [10296, 10301], [10302, 10308], [10309, 10311], [10312, 10321], [10322, 10324], [10325, 10329], [10330, 10333], [10334, 10340], [10341, 10345], [10346, 10351], [10352, 10358], [10359, 10361], [10362, 10371], [10371, 10372], [10372, 10375], [10376, 10383], [10384, 10386], [10387, 10396], [10396, 10397], [10397, 10399], [10399, 10400], [10401, 10411], [10412, 10416], [10417, 10421], [10422, 10427], [10428, 10430], [10431, 10433], [10434, 10439], [10440, 10446], [10446, 10447], [10448, 10455], [10456, 10463], [10464, 10473], [10474, 10475], [10476, 10482], [10483, 10492], [10493, 10501], [10502, 10507], [10508, 10512], [10513, 10523], [10523, 10524], [10525, 10528], [10529, 10535], [10536, 10539], [10540, 10546], [10547, 10557], [10558, 10564], [10565, 10568], [10569, 10573], [10574, 10577], [10578, 10583], [10584, 10587], [10588, 10591], [10592, 10598], [10599, 10608], [10609, 10617], [10618, 10620], [10621, 10628], [10629, 10631], [10632, 10636], [10637, 10643], [10644, 10646], [10647, 10652], [10653, 10659], [10660, 10668], [10669, 10673], [10674, 10678], [10679, 10686], [10687, 10694], [10694, 10695], [10696, 10701], [10702, 10706], [10707, 10714], [10715, 10722], [10723, 10724], [10724, 10726], [10726, 10728], [10729, 10735], [10735, 10736], [10737, 10741], [10742, 10746], [10747, 10754], [10755, 10758], [10759, 10769], [10770, 10775], [10776, 10785], [10786, 10792], [10793, 10799], [10800, 10803], [10804, 10814], [10815, 10817], [10818, 10822], [10823, 10827], [10828, 10830], [10831, 10835], [10835, 10836], [10837, 10841], [10842, 10846], [10847, 10851], [10852, 10856], [10857, 10861], [10862, 10868], [10869, 10871], [10872, 10879], [10880, 10886], [10887, 10892], [10893, 10896], [10897, 10900], [10901, 10903], [10904, 10909], [10910, 10916], [10916, 10917], [10918, 10927], [10928, 10931], [10932, 10942], [10943, 10955], [10956, 10964], [10964, 10965], [10966, 10973], [10974, 10977], [10978, 10985], [10986, 10993], [10994, 10997], [10998, 11003], [11004, 11007], [11008, 11011], [11012, 11021], [11022, 11032], [11033, 11039], [11039, 11040], [11041, 11043], [11044, 11046], [11047, 11054], [11055, 11065], [11066, 11068], [11069, 11079], [11080, 11082], [11083, 11086], [11087, 11091], [11092, 11094], [11095, 11100], [11101, 11104], [11105, 11117], [11118, 11123], [11124, 11126], [11127, 11131], [11132, 11137], [11138, 11140], [11141, 11144], [11145, 11153], [11154, 11157], [11158, 11165], [11166, 11172], [11172, 11173], [11174, 11177], [11178, 11192], [11193, 11205], [11206, 11211], [11212, 11216], [11217, 11223], [11224, 11227], [11228, 11237], [11238, 11244], [11245, 11252], [11253, 11256], [11257, 11267], [11268, 11272], [11273, 11276], [11277, 11287], [11288, 11290], [11291, 11297], [11298, 11301], [11302, 11304], [11305, 11314], [11315, 11318], [11319, 11323], [11324, 11326], [11327, 11333], [11334, 11336], [11337, 11338], [11338, 11342], [11342, 11343], [11344, 11350], [11351, 11353], [11353, 11354], [11355, 11363], [11364, 11366], [11367, 11373], [11374, 11383], [11384, 11386], [11387, 11388], [11389, 11395], [11396, 11398], [11399, 11406], [11407, 11415], [11416, 11420], [11421, 11428], [11428, 11429], [11430, 11442], [11443, 11446], [11447, 11456], [11457, 11460], [11461, 11470], [11471, 11473], [11474, 11482], [11483, 11485], [11486, 11489], [11490, 11498], [11499, 11506], [11507, 11512], [11513, 11520], [11521, 11526], [11526, 11527], [11528, 11534], [11535, 11537], [11537, 11538], [11539, 11548], [11549, 11551], [11552, 11559], [11560, 11566], [11567, 11569], [11570, 11578], [11579, 11586], [11586, 11587], [11588, 11590], [11591, 11595], [11596, 11602], [11603, 11606], [11607, 11611], [11612, 11615], [11616, 11621], [11622, 11623], [11623, 11633], [11633, 11634], [11635, 11645], [11645, 11646], [11647, 11653], [11654, 11656], [11656, 11657], [11658, 11663], [11664, 11674], [11675, 11682], [11683, 11696], [11697, 11707], [11708, 11710], [11711, 11721], [11722, 11733], [11734, 11742], [11743, 11754], [11755, 11765], [11766, 11772], [11772, 11773], [11774, 11778], [11778, 11779], [11779, 11791], [11791, 11793], [11793, 11804], [11804, 11806], [11806, 11823], [11823, 11825], [11825, 11835], [11835, 11836], [11836, 11846], [11846, 11848], [11848, 11855], [11855, 11856], [11856, 11860], [11860, 11862], [11862, 11883], [11883, 11885], [11885, 11887], [11888, 11891], [11892, 11897], [11898, 11908], [11909, 11912], [11912, 11913], [11914, 11935], [11935, 11937], [11937, 11945], [11945, 11947], [11947, 11951], [11951, 11953], [11953, 11972], [11972, 11974], [11974, 11977], [11978, 11985], [11986, 11987], [11988, 11989], [11989, 11996], [11996, 11998], [11999, 12002], [12003, 12009], [12010, 12011], [12011, 12075], [12075, 12082], [12083, 12085], [12086, 12087], [12087, 12151], [12151, 12154], [12155, 12161], [12162, 12164], [12165, 12174], [12175, 12176], [12176, 12240], [12240, 12241], [12242, 12249], [12250, 12251], [12252, 12253], [12253, 12258], [12258, 12260], [12261, 12264], [12265, 12271], [12272, 12273], [12273, 12337], [12337, 12344], [12345, 12347], [12348, 12350], [12350, 12413], [12413, 12414], [12415, 12416], [12417, 12420], [12421, 12433], [12434, 12440], [12441, 12443], [12444, 12453], [12454, 12456], [12456, 12519], [12519, 12520], [12521, 12522], [12523, 12524], [12525, 12531], [12532, 12541], [12542, 12545], [12546, 12550], [12551, 12557], [12558, 12563], [12564, 12572], [12573, 12577], [12578, 12585], [12586, 12592], [12593, 12595], [12596, 12601], [12602, 12612], [12613, 12621], [12622, 12627], [12628, 12630], [12631, 12643], [12644, 12648], [12648, 12649]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 12650, "lparker", "content", "human gold"]]}, {"type": "Keylogging (T1056.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[481, 490]]}, {"type": "Malicious File (T1204.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[715, 740], [3052, 3079], [3382, 3454]]}, {"type": "Embedded Payloads (T1027.009)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3091, 3102], [5126, 5159], [5762, 5801], [5931, 6050], [6159, 6268], [9124, 9166], [9475, 9514]]}, {"type": "Obfuscated Files or Information (T1027)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3466, 3518], [5780, 5843], [6777, 6833], [7448, 7469], [8390, 8396], [9584, 9601]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3548, 3599], [3669, 3694], [4210, 4253], [5288, 5303], [5530, 5540], [6315, 6335], [7353, 7361], [8066, 8074], [7470, 7485], [7512, 7527], [7576, 7588], [7723, 7734], [8666, 8702], [8827, 8839]]}, {"type": "Modify Registry (T1112)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4113, 4142], [7038, 7081]]}, {"type": "Ingress Tool Transfer (T1105)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4681, 4718], [5396, 5417]]}, {"type": "Web Protocols (T1071.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4997, 5023]]}, {"type": "Non-Application Layer Protocol (T1095)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": []}, {"type": "Process Hollowing (T1055.012)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[8217, 8279]]}, {"type": "Portable Executable Injection (T1055.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[9271, 9323]]}], "version": 2}