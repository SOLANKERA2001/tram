{"signal": "title: BazarLoader Mocks Researchers in December 2020 Malspam Campaign\nurl: https://www.gosecure.net/blog/2021/02/01/bazarloader-mocks-researchers-in-december-2020-malspam-campaign/\n\nBazarLoader Mocks Researchers in December 2020 Malspam Campaign\n by Lilly Chalupowski | Feb 1, 2021\n\n\n\n\n\n\n\n\n\nOur Inbox Detection and Response (IDR) team has observed a new BazarLoader campaign targeting the information technology, aeronautic and financial industries. The IDR team has successfully blocked over 550 thousand BazarLoader malspam emails throughout this campaign alone.\nGoSecure researchers received a sample from the IDR team which was suspected of being BazarLoader, named Report Preview15-10.exe, on 2020-10-06. Shortly after, GoSecure researchers received yet another BazarLoader sample on 2020-10-08 named Document2-85.exe, which exhibited similar behavior.\n\n\n\n \n\n\n\nThe initial infection vector, which has been observed by our Inbox Detection and Response Team (IDR), is via malspam containing fake employment termination notices and anonymous surveys. The threat actor(s) primarily use Google Drive and Google Docs to distribute their malicious payloads. The employment termination malspam was observed on October 6, 2020 and the anonymous survey malspam was observed on October 8, 2020. This can be seen in Figure 1 and Figure 2.\n \nFigure 1: BazarLoader Employment Termination Malspam\n \nFigure 2: BazarLoader Fake Anonymous Survey\n \nWe will firstly analyze the employment termination malspam.\nOnce the user clicks the link, they will be redirected tohxxps://docs[.]google[.]com/document/d/e/2PACX-1vR_9tGGWDcS1ZyIuiGpMQg2Sv9nRWempyUKuQ1iyJp_HHt1C87OPirnO7EImnOW6ILbrmHXUpl_OIxQ/pub to download an executable.\nThe executable Review_Report15-10.exe (3c27fca6d9cf1379eee93e6fea339e61) will appear as a PDF document to users who do not have extensions enabled in Windows, as seen in Figure 3.\n \nFigure 3: Stage 1 PDF Icon Lure\n \nTo help obfuscate its purpose, BazarLoader appears to be bound or obfuscated with legitimate resources from YUVPlayer (A Lightweight YUV player which supports various YUV formats). An example of this can be seen in Figure 4.\n \nFigure 4: YUVPlayer Dialog Embedded Resource\n \nOnce executed, the legitimate application or dialogs will not be shown to the user. Instead, it will call advapi32.CryptHashData using the string s_)q03vcOm95^+Rj3dG_Jx@k0GGwYOIddH_14025b520 as the data to create a hash using the PROV_RSA_FULL Windows cryptographic provider. Once the hash is created, it will create a key using advapi32.CryptDeriveKey. It will then obtain a handle to the current process for the purpose of allocating memory with PAGE_EXECUTE_READWRITE permissions. The next function is responsible for copying the shellcode from the .data section to the newly allocated memory location. Once the encrypted shellcode has been copied to executable memory, it will then use advapi32.CryptEncrypt to decrypt the shellcode. Once the shellcode has been successfully decrypted, it will execute the shellcode.\n \nFigure 5: BazarLoader Shellcode Decryption Routine\n \nFigure 6: Executing Stage 1 Decrypted Shellcode\n \nThe shellcode will obtain a handle to kernel32.LoadLibraryA, kernel32.GetProcAddress, kernel32.VirtualAlloc, kernel32.VirtualProtect and ntdll.ZwFlushInstructionCache, by enumerating the Process Environment Block (PEB) using the instruction mov rax,qword ptr gs: [60].  This is common with shellcode as it will need to resolve these APIs dynamically to interact with the Windows operating system.\nOnce completed, it will then call kernel32.VirtualALloc to prepare injecting a PE executable for the next stage. To build the PE header, it will use the routine shown in Figure 7.\n \nFigure 7: Prepare Stage 2 PE\n \nOnce PE header has been partially copied (excluding MZ magic value), it will start to copy the .text section using the routine shown in Figure 8.\n \nFigure 8: Copy .text Section\n \nOnce the .text section is copied, it will start resolving many different Windows APIs using kernel32.GetProcAddress.\nWhen the additional APIs have been resolved, it will then make the .text section it copied earlier executable using kernel32.VirtualProtect, as seen in Figure 9.\n \nFigure 9: Make .text Section Executable\n \nNOTE: On different debugging sessions the virtual addressing changed during analysis. \nInterestingly, the Portable Executable (PE) BazarLoader is copied into memory (without the MZ\nheader) and will start execution at the end of the .text section using a direct call. This can make unpacking the next stage confusing for reverse engineers as this is not where code in a PE file is supposed to begin. This code at the end of the .text section is solely responsible for making a call to the real Original Entrypoint (OEP) of the PE. It is important to note that this is simply used as shellcode and not as a PE in memory. The other benefit of this technique is no calls to thread related APIs are required, making it more challenging for Endpoint Detection and Response (EDR) solutions to detect. This can be seen in Figure 10.\n \nFigure 10: OEP Shellcode/PE Trickery\n \nAfter the previous trickery in the new memory space, it will start creating another PE in memory, but this time the header does start with the MZ magic value. After building the headers, it will copy each PE section one at a time, as seen in Figure 11.\n \nFigure 11: Building .text Section for Stage 2\n \nOnce the PE has been extracted to memory, it will make a direct call instead of using Threading APIs (same trickery as before). This can be seen in Figure 12.\n \nFigure 12: Calling Stage 2 Shellcode\n \nBazarLoader’s stage 2 shellcode will make use of encrypted stack strings for many purposes\nthroughout the rest of its code.\nBefore it continues with its malicious activity, it will check if the locale is Armenian (0x2b). Interestingly, instead of shutting down gracefully when the Armenian locale is detected, it will execute a jmp instruction to an invalid address, causing an access violation exception. We have seen Russian crimeware checking for the Armenian keyboard layout previously in malware such as KPot, we hypothesize this could be similar behavior.\nTo avoid running more than one instance of itself, BazarLoader will create a mutex with a hard-coded UUID, then use kernel32.GetLastError to check for the error ERROR_ALREADY_EXISTS. If the mutex already exists, it will exit the process. The call to kernel32.CreateMutexA can be seen in Figure 13.\n \nFigure 13: Mutex Creation\n \nInterestingly, BazarLoader will check for mutexes twice.\nOnce completed, it will decyrpt its C2 configuration, as seen in Figure 14.\n \nFigure 14: BazarLoader Stage 2 Decrypted Downloader Config\n \nOnce BazarLoader has determined the Armenian language is not being used and another instance of itself is not running, it will make a HTTP HEAD request to hxxps://titlecs[.]com. It will continue to do this until it receives a 200 response from the C2 server. The first request will be sent using wininet.HttpSendRequestA, as seen in Figure 15.\n \nFigure 15: HTTP HEAD Request\n \nIt is important to note that the HTTP header Update  is not a standard header and can be considered anomalous.\nThis HEAD request can be seen in Figure 16.\n \nFigure 16: BazarLoader C2 Download Domain HEAD Request\n \nThe C2 server will respond with a 200 OK message.\nBazarLoader will also check if it is connected to the internet by making a request to microsoft[.]com, as seen in Figure 17.\n \nFigure 17: BazarLoader Internet Connectivity Check\n \nOnce completed, it will make a POST request to the second domain in its configuration, as seen in Figure 18.\n \nFigure 18: BazarLoader C2 Checkin\n \nOnce completed, it will make a HTTP GET request in order to obtain the next stage, as seen in Figure 19.\n \nFigure 19: BazarLoader Downloading Encrypted Payload\n\n\n\n \n\n\n\nDifferences Between Versions\n \nThere are a few notable differences between the first version of BazarLoader sent on 2020-10-06 (Employment Termination Malspam) and the one sent on 2020-10-08 (Survey Malspam). The main difference between the two versions is the malware author(s) now include the string Stupid Defender to mock researchers, the shellcode that was stored in the .data section is now stored in the .rsc section, the functionality to get a pointer to the encrypted shellcode and to decrypt it have been broken out into their own separate functions. This can be seen in Figures 20 and 21.\n \nFigure 20: Updated Main Shellcode Decryption/Execution Routine\n \nFigure 21: Obtain Encrypted Pointer to Encrypted Shellcode from the Resource Section\n \nFigure 22: Encrypted Shellcode in Resource Section\n\n\n\n \n\n\n\nBazarLoader is becoming increasingly popular amongst threat actors. We suspect the reason behind the malware developer(s) success is their use of techniques such as avoiding the use of threading APIs and faking PE injection, when in reality, it is simply shellcode injection. These techniques are likely used to confuse Endpoint Detection and Response (EDR) solutions.\n\n\n\n \n\n\n\nIndicator\nDescription\nhxxps://titlecs[.]com/issues/284\nBazarLoader Encrypted Payload URL\nhxxps://titlecs[.]com/issues/282\nBazarLoader Encrypted Payload URL\nhxxp://ds46x1[.]com/1/run\nBazarLoader Encrypted Payload URL\nlabelcs[.]com\nBazarLoader C2 Domain (Employment Termination Malspam)\nmixcinc[.]com\nBazarLoader C2 Domain (Employment Termination Malspam)\nnicknamec[.]com\nBazarLoader C2 Domain (Employment Termination Malspam)\n3c27fca6d9cf1379eee93e6fea339e61\nBazarLoader Shellcode Injector (Preview15-10.exe)\n3ee60e0efeb5b349a5ba7325ce4a33dc\nBazarLoader Shellcode Injector (Document2-85.exe)\nhxxps://docs[.]google[.]com/document/d/e/2PACX-\n1vR_9tGGWDcS1ZyIuiGpMQg2Sv9nRWempyUKuQ1iyJp_HHt1C87OPirnO7EImnOW6ILbrmHXUpl_OIxQ/p\nEmployment Termination Malspam Payload URL\nhxxps://docs[.]google[.]com/document/d/e/2PACX-\n1vQ7wK9C0fLCwS3voYLhGz3Gmy6g4UMKe_xZ1ds8xv7LonpviJBXefG9rBZuMPkmtytDYe_5rbDztBnK/pub\nSurvey Malspam Payload URL\nds45x1[.]com\nBazarLoader C2 Domain (Survey Malspam)\nds46x1[.]com\nBazarLoader C2 Domain (Survey Malspam)\nds47x1[.]com\nBazarLoader C2 Domain (Survey Malspam)\nmarcene[.]jack[at]peytoneley[.]com\nBazarLoader Malspam Email\nshannon[.]ong35[at]myhunter[.]cuny[.]edu\nBazarLoader Malspam\nBazarLoader Malspam Email\nbessie[.]wilson[at]griply[.]com\nBazarLoader Malspam Email\n\n\n\n\n \n\n\n\nLilly Chalupowski\nPaul Neuman\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 10347, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 18], [19, 24], [25, 36], [37, 39], [40, 48], [49, 53], [54, 61], [62, 70], [71, 74], [74, 75], [76, 81], [81, 84], [84, 87], [87, 88], [88, 96], [96, 97], [97, 100], [100, 101], [101, 105], [105, 106], [106, 110], [110, 111], [111, 113], [113, 114], [114, 116], [116, 117], [117, 159], [159, 163], [163, 180], [180, 181], [183, 194], [195, 200], [201, 212], [213, 215], [216, 224], [225, 229], [230, 237], [238, 246], [248, 250], [251, 256], [257, 268], [269, 270], [271, 274], [275, 276], [276, 277], [278, 282], [292, 295], [296, 301], [302, 311], [312, 315], [316, 324], [325, 326], [326, 329], [329, 330], [331, 335], [336, 339], [340, 348], [349, 350], [351, 354], [355, 366], [367, 375], [376, 385], [386, 389], [390, 401], [402, 412], [412, 413], [414, 424], [425, 428], [429, 438], [439, 449], [449, 450], [451, 454], [455, 458], [459, 463], [464, 467], [468, 480], [481, 488], [489, 493], [494, 497], [498, 506], [507, 518], [519, 526], [527, 533], [534, 544], [545, 549], [550, 558], [559, 564], [564, 565], [566, 574], [575, 586], [587, 595], [596, 597], [598, 604], [605, 609], [610, 613], [614, 617], [618, 622], [623, 628], [629, 632], [633, 642], [643, 645], [646, 651], [652, 663], [663, 664], [665, 670], [671, 677], [678, 687], [687, 690], [690, 691], [691, 694], [694, 695], [696, 698], [699, 709], [709, 710], [711, 718], [719, 724], [724, 725], [726, 734], [735, 746], [747, 755], [756, 759], [760, 767], [768, 779], [780, 786], [787, 789], [790, 800], [801, 806], [807, 816], [816, 819], [819, 820], [820, 823], [823, 824], [825, 830], [831, 840], [841, 848], [849, 857], [857, 858], [867, 870], [871, 878], [879, 888], [889, 895], [895, 896], [897, 902], [903, 906], [907, 911], [912, 920], [921, 923], [924, 927], [928, 933], [934, 943], [944, 947], [948, 956], [957, 961], [962, 963], [963, 966], [966, 968], [969, 971], [972, 975], [976, 983], [984, 994], [995, 999], [1000, 1010], [1011, 1022], [1023, 1030], [1031, 1034], [1035, 1044], [1045, 1052], [1052, 1053], [1054, 1057], [1058, 1064], [1065, 1070], [1070, 1071], [1071, 1072], [1072, 1073], [1074, 1083], [1084, 1087], [1088, 1094], [1095, 1100], [1101, 1104], [1105, 1111], [1112, 1116], [1117, 1119], [1120, 1130], [1131, 1136], [1137, 1146], [1147, 1155], [1155, 1156], [1157, 1160], [1161, 1171], [1172, 1183], [1184, 1191], [1192, 1195], [1196, 1204], [1205, 1207], [1208, 1215], [1216, 1217], [1217, 1218], [1219, 1223], [1224, 1227], [1228, 1231], [1232, 1241], [1242, 1248], [1249, 1256], [1257, 1260], [1261, 1269], [1270, 1272], [1273, 1280], [1281, 1282], [1282, 1283], [1284, 1288], [1288, 1289], [1290, 1294], [1295, 1298], [1299, 1301], [1302, 1306], [1307, 1309], [1310, 1316], [1317, 1318], [1319, 1322], [1323, 1329], [1330, 1331], [1331, 1332], [1335, 1341], [1342, 1343], [1343, 1344], [1345, 1356], [1357, 1367], [1368, 1379], [1380, 1387], [1390, 1396], [1397, 1398], [1398, 1399], [1400, 1411], [1412, 1416], [1417, 1426], [1427, 1433], [1436, 1438], [1439, 1443], [1444, 1451], [1452, 1459], [1460, 1463], [1464, 1474], [1475, 1486], [1487, 1494], [1494, 1495], [1496, 1500], [1501, 1504], [1505, 1509], [1510, 1516], [1517, 1520], [1521, 1525], [1525, 1526], [1527, 1531], [1532, 1536], [1537, 1539], [1540, 1550], [1551, 1558], [1558, 1561], [1561, 1566], [1566, 1568], [1568, 1575], [1575, 1577], [1577, 1580], [1580, 1581], [1581, 1589], [1589, 1590], [1590, 1591], [1591, 1592], [1592, 1593], [1593, 1594], [1594, 1599], [1599, 1601], [1601, 1680], [1680, 1681], [1681, 1684], [1685, 1687], [1688, 1696], [1697, 1699], [1700, 1710], [1710, 1711], [1712, 1715], [1716, 1726], [1727, 1742], [1742, 1745], [1745, 1746], [1746, 1749], [1750, 1751], [1751, 1783], [1783, 1784], [1785, 1789], [1790, 1796], [1797, 1799], [1800, 1801], [1802, 1805], [1806, 1814], [1815, 1817], [1818, 1823], [1824, 1827], [1828, 1830], [1831, 1834], [1835, 1839], [1840, 1850], [1851, 1858], [1859, 1861], [1862, 1869], [1869, 1870], [1871, 1873], [1874, 1878], [1879, 1881], [1882, 1888], [1889, 1890], [1890, 1891], [1894, 1900], [1901, 1902], [1902, 1903], [1904, 1909], [1910, 1911], [1912, 1915], [1916, 1920], [1921, 1925], [1928, 1930], [1931, 1935], [1936, 1945], [1946, 1949], [1950, 1957], [1957, 1958], [1959, 1970], [1971, 1978], [1979, 1981], [1982, 1984], [1985, 1990], [1991, 1993], [1994, 2004], [2005, 2009], [2010, 2020], [2021, 2030], [2031, 2035], [2036, 2045], [2046, 2047], [2047, 2048], [2049, 2060], [2061, 2064], [2065, 2071], [2072, 2077], [2078, 2086], [2087, 2094], [2095, 2098], [2099, 2106], [2106, 2108], [2109, 2111], [2112, 2119], [2120, 2122], [2123, 2127], [2128, 2131], [2132, 2134], [2135, 2139], [2140, 2142], [2143, 2149], [2150, 2151], [2151, 2152], [2155, 2161], [2162, 2163], [2163, 2164], [2165, 2174], [2175, 2181], [2182, 2190], [2191, 2199], [2202, 2206], [2207, 2215], [2215, 2216], [2217, 2220], [2221, 2231], [2232, 2243], [2244, 2246], [2247, 2254], [2255, 2259], [2260, 2263], [2264, 2266], [2267, 2272], [2273, 2275], [2276, 2279], [2280, 2284], [2284, 2285], [2286, 2293], [2293, 2294], [2295, 2297], [2298, 2302], [2303, 2307], [2308, 2316], [2316, 2317], [2317, 2330], [2331, 2336], [2337, 2340], [2341, 2347], [2348, 2350], [2350, 2351], [2351, 2361], [2361, 2362], [2362, 2392], [2393, 2395], [2396, 2399], [2400, 2404], [2405, 2407], [2408, 2414], [2415, 2416], [2417, 2421], [2422, 2427], [2428, 2431], [2432, 2445], [2446, 2453], [2454, 2467], [2468, 2476], [2476, 2477], [2478, 2482], [2483, 2486], [2487, 2491], [2492, 2494], [2495, 2502], [2502, 2503], [2504, 2506], [2507, 2511], [2512, 2518], [2519, 2520], [2521, 2524], [2525, 2530], [2531, 2539], [2539, 2540], [2540, 2554], [2554, 2555], [2555, 2558], [2559, 2563], [2564, 2568], [2569, 2575], [2576, 2577], [2578, 2584], [2585, 2587], [2588, 2591], [2592, 2599], [2600, 2607], [2608, 2611], [2612, 2615], [2616, 2623], [2624, 2626], [2627, 2637], [2638, 2644], [2645, 2649], [2650, 2672], [2673, 2684], [2684, 2685], [2685, 2689], [2690, 2694], [2695, 2703], [2704, 2706], [2707, 2718], [2719, 2722], [2723, 2730], [2731, 2734], [2735, 2744], [2745, 2749], [2750, 2753], [2754, 2755], [2755, 2759], [2760, 2767], [2768, 2770], [2771, 2774], [2775, 2780], [2781, 2790], [2791, 2797], [2798, 2806], [2806, 2807], [2808, 2812], [2813, 2816], [2817, 2826], [2827, 2836], [2837, 2840], [2841, 2845], [2846, 2852], [2853, 2855], [2856, 2866], [2867, 2873], [2873, 2874], [2875, 2877], [2878, 2882], [2883, 2887], [2888, 2891], [2892, 2900], [2900, 2901], [2901, 2913], [2914, 2916], [2917, 2924], [2925, 2928], [2929, 2938], [2938, 2939], [2940, 2944], [2945, 2948], [2949, 2958], [2959, 2962], [2963, 2967], [2968, 2980], [2981, 2990], [2990, 2991], [2992, 2994], [2995, 2999], [3000, 3007], [3008, 3011], [3012, 3021], [3021, 3022], [3025, 3031], [3032, 3033], [3033, 3034], [3035, 3046], [3047, 3056], [3057, 3067], [3068, 3075], [3078, 3084], [3085, 3086], [3086, 3087], [3088, 3097], [3098, 3103], [3104, 3105], [3106, 3115], [3116, 3125], [3128, 3131], [3132, 3141], [3142, 3146], [3147, 3153], [3154, 3155], [3156, 3162], [3163, 3165], [3166, 3174], [3174, 3175], [3175, 3187], [3187, 3188], [3189, 3197], [3197, 3198], [3198, 3212], [3212, 3213], [3214, 3222], [3222, 3223], [3223, 3235], [3235, 3236], [3237, 3245], [3245, 3246], [3246, 3260], [3261, 3264], [3265, 3270], [3270, 3271], [3271, 3294], [3294, 3295], [3296, 3298], [3299, 3310], [3311, 3314], [3315, 3322], [3323, 3334], [3335, 3340], [3341, 3342], [3342, 3345], [3345, 3346], [3347, 3352], [3353, 3356], [3357, 3368], [3369, 3372], [3373, 3376], [3376, 3377], [3377, 3382], [3383, 3386], [3387, 3389], [3389, 3390], [3391, 3392], [3392, 3394], [3394, 3396], [3398, 3402], [3403, 3405], [3406, 3412], [3413, 3417], [3418, 3427], [3428, 3430], [3431, 3433], [3434, 3438], [3439, 3443], [3444, 3446], [3447, 3454], [3455, 3460], [3461, 3465], [3466, 3477], [3478, 3480], [3481, 3489], [3490, 3494], [3495, 3498], [3499, 3506], [3507, 3516], [3517, 3523], [3523, 3524], [3525, 3529], [3530, 3539], [3539, 3540], [3541, 3543], [3544, 3548], [3549, 3553], [3554, 3558], [3559, 3567], [3567, 3568], [3568, 3580], [3581, 3583], [3584, 3591], [3592, 3601], [3602, 3603], [3604, 3606], [3607, 3617], [3618, 3621], [3622, 3625], [3626, 3630], [3631, 3636], [3636, 3637], [3638, 3640], [3641, 3646], [3647, 3650], [3651, 3653], [3654, 3660], [3660, 3661], [3662, 3664], [3665, 3669], [3670, 3673], [3674, 3677], [3678, 3685], [3686, 3691], [3692, 3694], [3695, 3701], [3702, 3703], [3703, 3704], [3707, 3713], [3714, 3715], [3715, 3716], [3717, 3724], [3725, 3730], [3731, 3732], [3733, 3735], [3738, 3742], [3743, 3745], [3746, 3752], [3753, 3756], [3757, 3761], [3762, 3771], [3772, 3778], [3779, 3780], [3780, 3789], [3790, 3792], [3793, 3798], [3799, 3804], [3804, 3806], [3807, 3809], [3810, 3814], [3815, 3820], [3821, 3823], [3824, 3828], [3829, 3832], [3833, 3834], [3834, 3838], [3839, 3846], [3847, 3852], [3853, 3856], [3857, 3864], [3865, 3870], [3871, 3873], [3874, 3880], [3881, 3882], [3882, 3883], [3886, 3892], [3893, 3894], [3894, 3895], [3896, 3900], [3901, 3902], [3902, 3906], [3907, 3914], [3917, 3921], [3922, 3925], [3926, 3927], [3927, 3931], [3932, 3939], [3940, 3942], [3943, 3949], [3949, 3950], [3951, 3953], [3954, 3958], [3959, 3964], [3965, 3974], [3975, 3979], [3980, 3989], [3990, 3997], [3998, 4002], [4003, 4008], [4009, 4017], [4017, 4018], [4018, 4032], [4032, 4033], [4034, 4038], [4039, 4042], [4043, 4053], [4054, 4058], [4059, 4063], [4064, 4068], [4069, 4077], [4077, 4078], [4079, 4081], [4082, 4086], [4087, 4091], [4092, 4096], [4097, 4100], [4101, 4102], [4102, 4106], [4107, 4114], [4115, 4117], [4118, 4124], [4125, 4132], [4133, 4143], [4144, 4149], [4150, 4158], [4158, 4159], [4159, 4173], [4173, 4174], [4175, 4177], [4178, 4182], [4183, 4185], [4186, 4192], [4193, 4194], [4194, 4195], [4198, 4204], [4205, 4206], [4206, 4207], [4208, 4212], [4213, 4214], [4214, 4218], [4219, 4226], [4227, 4237], [4240, 4244], [4244, 4245], [4246, 4248], [4249, 4258], [4259, 4268], [4269, 4277], [4278, 4281], [4282, 4289], [4290, 4300], [4301, 4308], [4309, 4315], [4316, 4324], [4324, 4325], [4327, 4340], [4340, 4341], [4342, 4345], [4346, 4354], [4355, 4365], [4366, 4367], [4367, 4369], [4369, 4370], [4371, 4382], [4383, 4385], [4386, 4392], [4393, 4397], [4398, 4404], [4405, 4406], [4406, 4413], [4414, 4417], [4418, 4420], [4421, 4427], [4427, 4428], [4429, 4432], [4433, 4437], [4438, 4443], [4444, 4453], [4454, 4456], [4457, 4460], [4461, 4464], [4465, 4467], [4468, 4471], [4472, 4473], [4473, 4477], [4478, 4485], [4486, 4491], [4492, 4493], [4494, 4500], [4501, 4505], [4505, 4506], [4507, 4511], [4512, 4515], [4516, 4520], [4521, 4530], [4531, 4534], [4535, 4539], [4540, 4545], [4546, 4555], [4556, 4559], [4560, 4567], [4568, 4577], [4578, 4580], [4581, 4585], [4586, 4588], [4589, 4592], [4593, 4598], [4599, 4603], [4604, 4606], [4607, 4608], [4609, 4611], [4612, 4616], [4617, 4619], [4620, 4628], [4629, 4631], [4632, 4637], [4637, 4638], [4639, 4643], [4644, 4648], [4649, 4651], [4652, 4655], [4656, 4659], [4660, 4662], [4663, 4666], [4667, 4668], [4668, 4672], [4673, 4680], [4681, 4683], [4684, 4690], [4691, 4702], [4703, 4706], [4707, 4713], [4714, 4715], [4716, 4720], [4721, 4723], [4724, 4727], [4728, 4732], [4733, 4741], [4742, 4752], [4753, 4754], [4754, 4757], [4757, 4758], [4759, 4761], [4762, 4765], [4766, 4768], [4768, 4769], [4770, 4772], [4773, 4775], [4776, 4785], [4786, 4788], [4789, 4793], [4794, 4798], [4799, 4803], [4804, 4806], [4807, 4813], [4814, 4818], [4819, 4821], [4822, 4831], [4832, 4835], [4836, 4839], [4840, 4842], [4843, 4844], [4845, 4847], [4848, 4850], [4851, 4857], [4857, 4858], [4859, 4862], [4863, 4868], [4869, 4876], [4877, 4879], [4880, 4884], [4885, 4894], [4895, 4897], [4898, 4900], [4901, 4906], [4907, 4909], [4910, 4916], [4917, 4924], [4925, 4929], [4930, 4933], [4934, 4942], [4942, 4943], [4944, 4950], [4951, 4953], [4954, 4958], [4959, 4970], [4971, 4974], [4975, 4983], [4984, 4993], [4994, 4997], [4998, 5006], [5007, 5008], [5008, 5011], [5011, 5012], [5013, 5022], [5023, 5025], [5026, 5032], [5032, 5033], [5034, 5038], [5039, 5042], [5043, 5045], [5046, 5050], [5051, 5053], [5054, 5060], [5061, 5063], [5063, 5064], [5067, 5073], [5074, 5076], [5076, 5077], [5078, 5081], [5082, 5091], [5091, 5092], [5092, 5094], [5095, 5103], [5106, 5111], [5112, 5115], [5116, 5124], [5125, 5133], [5134, 5136], [5137, 5140], [5141, 5144], [5145, 5151], [5152, 5157], [5157, 5158], [5159, 5161], [5162, 5166], [5167, 5172], [5173, 5181], [5182, 5189], [5190, 5192], [5193, 5195], [5196, 5202], [5202, 5203], [5204, 5207], [5208, 5212], [5213, 5217], [5218, 5221], [5222, 5228], [5229, 5233], [5234, 5239], [5240, 5244], [5245, 5248], [5249, 5251], [5252, 5257], [5258, 5263], [5263, 5264], [5265, 5270], [5271, 5279], [5280, 5283], [5284, 5291], [5291, 5292], [5293, 5295], [5296, 5300], [5301, 5305], [5306, 5310], [5311, 5313], [5314, 5321], [5322, 5325], [5326, 5328], [5329, 5330], [5331, 5335], [5335, 5336], [5337, 5339], [5340, 5344], [5345, 5347], [5348, 5354], [5355, 5357], [5357, 5358], [5361, 5367], [5368, 5370], [5370, 5371], [5372, 5380], [5381, 5382], [5382, 5386], [5387, 5394], [5395, 5398], [5399, 5404], [5405, 5406], [5409, 5413], [5414, 5417], [5418, 5420], [5421, 5424], [5425, 5429], [5430, 5439], [5440, 5442], [5443, 5449], [5449, 5450], [5451, 5453], [5454, 5458], [5459, 5463], [5464, 5465], [5466, 5472], [5473, 5477], [5478, 5485], [5486, 5488], [5489, 5494], [5495, 5504], [5505, 5509], [5510, 5511], [5511, 5515], [5516, 5524], [5525, 5527], [5528, 5534], [5534, 5536], [5537, 5541], [5542, 5545], [5546, 5548], [5549, 5553], [5554, 5556], [5557, 5563], [5564, 5566], [5566, 5567], [5570, 5576], [5577, 5579], [5579, 5580], [5581, 5588], [5589, 5594], [5595, 5596], [5597, 5606], [5609, 5622], [5623, 5628], [5629, 5630], [5631, 5640], [5641, 5645], [5646, 5650], [5651, 5654], [5655, 5657], [5658, 5667], [5668, 5673], [5674, 5681], [5682, 5685], [5686, 5690], [5691, 5699], [5700, 5710], [5711, 5714], [5715, 5719], [5720, 5722], [5723, 5726], [5727, 5731], [5731, 5732], [5733, 5739], [5740, 5742], [5743, 5752], [5753, 5757], [5758, 5761], [5762, 5771], [5772, 5780], [5780, 5781], [5782, 5784], [5785, 5789], [5790, 5795], [5796, 5798], [5799, 5802], [5803, 5809], [5810, 5812], [5813, 5821], [5822, 5823], [5823, 5827], [5827, 5829], [5830, 5843], [5843, 5844], [5845, 5852], [5853, 5855], [5856, 5864], [5865, 5869], [5870, 5880], [5881, 5885], [5886, 5889], [5890, 5898], [5899, 5905], [5906, 5908], [5909, 5917], [5917, 5918], [5919, 5921], [5922, 5926], [5927, 5934], [5935, 5936], [5937, 5940], [5941, 5952], [5953, 5955], [5956, 5958], [5959, 5966], [5967, 5974], [5974, 5975], [5976, 5983], [5984, 5986], [5987, 5993], [5994, 6003], [6004, 6013], [6013, 6014], [6015, 6017], [6018, 6022], [6023, 6027], [6028, 6035], [6036, 6045], [6046, 6054], [6055, 6058], [6059, 6062], [6063, 6071], [6072, 6080], [6081, 6087], [6088, 6098], [6099, 6101], [6102, 6109], [6110, 6114], [6115, 6117], [6118, 6122], [6122, 6123], [6124, 6126], [6127, 6138], [6139, 6143], [6144, 6149], [6150, 6152], [6153, 6160], [6161, 6169], [6169, 6170], [6171, 6173], [6174, 6179], [6180, 6187], [6188, 6192], [6193, 6197], [6198, 6201], [6202, 6210], [6211, 6213], [6214, 6220], [6220, 6221], [6222, 6233], [6234, 6238], [6239, 6245], [6246, 6247], [6248, 6253], [6254, 6258], [6259, 6260], [6261, 6271], [6272, 6276], [6276, 6277], [6278, 6282], [6283, 6286], [6287, 6295], [6295, 6296], [6296, 6308], [6309, 6311], [6312, 6317], [6318, 6321], [6322, 6325], [6326, 6331], [6332, 6352], [6352, 6353], [6354, 6356], [6357, 6360], [6361, 6366], [6367, 6374], [6375, 6381], [6381, 6382], [6383, 6385], [6386, 6390], [6391, 6395], [6396, 6399], [6400, 6407], [6407, 6408], [6409, 6412], [6413, 6417], [6418, 6420], [6421, 6429], [6429, 6430], [6430, 6442], [6443, 6446], [6447, 6449], [6450, 6454], [6455, 6457], [6458, 6464], [6465, 6467], [6467, 6468], [6471, 6477], [6478, 6480], [6480, 6481], [6482, 6487], [6488, 6496], [6499, 6512], [6512, 6513], [6514, 6525], [6526, 6530], [6531, 6536], [6537, 6540], [6541, 6548], [6549, 6554], [6554, 6555], [6556, 6560], [6561, 6570], [6570, 6571], [6572, 6574], [6575, 6579], [6580, 6587], [6588, 6591], [6592, 6594], [6595, 6608], [6608, 6609], [6610, 6612], [6613, 6617], [6618, 6620], [6621, 6627], [6628, 6630], [6630, 6631], [6634, 6640], [6641, 6643], [6643, 6644], [6645, 6656], [6657, 6662], [6663, 6664], [6665, 6674], [6675, 6685], [6686, 6692], [6695, 6699], [6700, 6711], [6712, 6715], [6716, 6726], [6727, 6730], [6731, 6739], [6740, 6748], [6749, 6751], [6752, 6755], [6756, 6761], [6762, 6766], [6767, 6770], [6771, 6778], [6779, 6787], [6788, 6790], [6791, 6797], [6798, 6800], [6801, 6804], [6805, 6812], [6812, 6813], [6814, 6816], [6817, 6821], [6822, 6826], [6827, 6828], [6829, 6833], [6834, 6838], [6839, 6846], [6847, 6849], [6850, 6855], [6855, 6858], [6858, 6866], [6866, 6868], [6868, 6871], [6871, 6872], [6873, 6875], [6876, 6880], [6881, 6889], [6890, 6892], [6893, 6895], [6896, 6900], [6901, 6906], [6907, 6909], [6910, 6918], [6919, 6920], [6921, 6924], [6925, 6933], [6934, 6938], [6939, 6942], [6943, 6945], [6946, 6952], [6952, 6953], [6954, 6957], [6958, 6963], [6964, 6971], [6972, 6976], [6977, 6979], [6980, 6984], [6985, 6990], [6991, 6998], [6998, 6999], [6999, 7015], [7015, 7016], [7017, 7019], [7020, 7024], [7025, 7027], [7028, 7034], [7035, 7037], [7037, 7038], [7041, 7047], [7048, 7050], [7050, 7051], [7052, 7056], [7057, 7061], [7062, 7069], [7072, 7074], [7075, 7077], [7078, 7087], [7088, 7090], [7091, 7095], [7096, 7100], [7101, 7104], [7105, 7109], [7110, 7116], [7117, 7123], [7125, 7127], [7128, 7131], [7132, 7133], [7134, 7142], [7143, 7149], [7150, 7153], [7154, 7157], [7158, 7160], [7161, 7171], [7172, 7181], [7181, 7182], [7183, 7187], [7188, 7192], [7193, 7200], [7201, 7204], [7205, 7207], [7208, 7212], [7213, 7215], [7216, 7222], [7223, 7225], [7225, 7226], [7229, 7235], [7236, 7238], [7238, 7239], [7240, 7251], [7252, 7254], [7255, 7263], [7264, 7270], [7271, 7275], [7276, 7283], [7286, 7289], [7290, 7292], [7293, 7299], [7300, 7304], [7305, 7312], [7313, 7317], [7318, 7319], [7320, 7323], [7324, 7326], [7327, 7334], [7334, 7335], [7336, 7347], [7348, 7352], [7353, 7357], [7358, 7363], [7364, 7366], [7367, 7369], [7370, 7372], [7373, 7382], [7383, 7385], [7386, 7389], [7390, 7398], [7399, 7401], [7402, 7408], [7409, 7410], [7411, 7418], [7419, 7421], [7422, 7432], [7432, 7434], [7434, 7437], [7437, 7438], [7439, 7441], [7442, 7446], [7447, 7449], [7450, 7456], [7457, 7459], [7459, 7460], [7463, 7469], [7470, 7472], [7472, 7473], [7474, 7485], [7486, 7494], [7495, 7507], [7508, 7513], [7516, 7520], [7521, 7530], [7530, 7531], [7532, 7534], [7535, 7539], [7540, 7544], [7545, 7546], [7547, 7551], [7552, 7559], [7560, 7562], [7563, 7566], [7567, 7573], [7574, 7580], [7581, 7583], [7584, 7587], [7588, 7601], [7601, 7602], [7603, 7605], [7606, 7610], [7611, 7613], [7614, 7620], [7621, 7623], [7623, 7624], [7627, 7633], [7634, 7636], [7636, 7637], [7638, 7649], [7650, 7652], [7653, 7660], [7663, 7667], [7668, 7677], [7677, 7678], [7679, 7681], [7682, 7686], [7687, 7691], [7692, 7693], [7694, 7698], [7699, 7702], [7703, 7710], [7711, 7713], [7714, 7719], [7720, 7722], [7723, 7729], [7730, 7733], [7734, 7738], [7739, 7744], [7744, 7745], [7746, 7748], [7749, 7753], [7754, 7756], [7757, 7763], [7764, 7766], [7766, 7767], [7770, 7776], [7777, 7779], [7779, 7780], [7781, 7792], [7793, 7804], [7805, 7814], [7815, 7822], [7831, 7842], [7843, 7850], [7851, 7859], [7862, 7867], [7868, 7871], [7872, 7873], [7874, 7877], [7878, 7885], [7886, 7897], [7898, 7905], [7906, 7909], [7910, 7915], [7916, 7923], [7924, 7926], [7927, 7938], [7939, 7943], [7944, 7946], [7947, 7957], [7958, 7959], [7959, 7969], [7970, 7981], [7982, 7989], [7989, 7990], [7991, 7994], [7995, 7998], [7999, 8002], [8003, 8007], [8008, 8010], [8011, 8021], [8022, 8023], [8023, 8029], [8030, 8037], [8037, 8039], [8040, 8043], [8044, 8048], [8049, 8059], [8060, 8067], [8068, 8071], [8072, 8075], [8076, 8084], [8085, 8087], [8088, 8091], [8092, 8099], [8100, 8106], [8106, 8107], [8107, 8108], [8108, 8109], [8110, 8113], [8114, 8121], [8122, 8125], [8126, 8132], [8133, 8139], [8140, 8148], [8149, 8151], [8152, 8156], [8157, 8168], [8168, 8169], [8170, 8173], [8174, 8183], [8184, 8188], [8189, 8192], [8193, 8199], [8200, 8202], [8203, 8206], [8207, 8208], [8208, 8212], [8213, 8220], [8221, 8223], [8224, 8227], [8228, 8234], [8235, 8237], [8238, 8241], [8242, 8243], [8243, 8246], [8247, 8254], [8254, 8255], [8256, 8259], [8260, 8273], [8274, 8276], [8277, 8280], [8281, 8282], [8283, 8290], [8291, 8293], [8294, 8297], [8298, 8307], [8308, 8317], [8318, 8321], [8322, 8324], [8325, 8332], [8333, 8335], [8336, 8340], [8341, 8345], [8346, 8352], [8353, 8356], [8357, 8361], [8362, 8367], [8368, 8371], [8372, 8380], [8381, 8390], [8390, 8391], [8392, 8396], [8397, 8400], [8401, 8403], [8404, 8408], [8409, 8411], [8412, 8419], [8420, 8422], [8423, 8426], [8427, 8429], [8429, 8430], [8433, 8439], [8440, 8442], [8442, 8443], [8444, 8451], [8452, 8456], [8457, 8466], [8467, 8477], [8477, 8478], [8478, 8487], [8488, 8495], [8498, 8504], [8505, 8507], [8507, 8508], [8509, 8515], [8516, 8525], [8526, 8533], [8534, 8536], [8537, 8546], [8547, 8556], [8557, 8561], [8562, 8565], [8566, 8574], [8575, 8582], [8585, 8591], [8592, 8594], [8594, 8595], [8596, 8605], [8606, 8615], [8616, 8618], [8619, 8627], [8628, 8635], [8644, 8655], [8656, 8658], [8659, 8667], [8668, 8680], [8681, 8688], [8689, 8696], [8697, 8703], [8704, 8710], [8710, 8711], [8712, 8714], [8715, 8722], [8723, 8726], [8727, 8733], [8734, 8740], [8741, 8744], [8745, 8752], [8753, 8762], [8762, 8763], [8763, 8764], [8764, 8765], [8766, 8773], [8774, 8776], [8777, 8782], [8783, 8786], [8787, 8789], [8790, 8800], [8801, 8805], [8806, 8808], [8809, 8817], [8818, 8821], [8822, 8825], [8826, 8828], [8829, 8838], [8839, 8843], [8844, 8847], [8848, 8854], [8855, 8857], [8858, 8867], [8867, 8868], [8869, 8873], [8874, 8876], [8877, 8884], [8884, 8885], [8886, 8888], [8889, 8891], [8892, 8898], [8899, 8908], [8909, 8918], [8918, 8919], [8920, 8925], [8926, 8936], [8937, 8940], [8941, 8947], [8948, 8952], [8953, 8955], [8956, 8963], [8964, 8972], [8973, 8982], [8983, 8986], [8987, 8995], [8996, 8997], [8997, 9000], [9000, 9001], [9002, 9011], [9011, 9012], [9021, 9030], [9031, 9042], [9043, 9048], [9048, 9051], [9051, 9059], [9059, 9061], [9061, 9064], [9064, 9065], [9065, 9071], [9071, 9072], [9072, 9075], [9076, 9087], [9088, 9097], [9098, 9105], [9106, 9109], [9110, 9115], [9115, 9118], [9118, 9126], [9126, 9128], [9128, 9131], [9131, 9132], [9132, 9138], [9138, 9139], [9139, 9142], [9143, 9154], [9155, 9164], [9165, 9172], [9173, 9176], [9177, 9181], [9181, 9184], [9184, 9190], [9190, 9193], [9193, 9196], [9196, 9197], [9197, 9198], [9198, 9199], [9199, 9202], [9203, 9214], [9215, 9224], [9225, 9232], [9233, 9236], [9237, 9245], [9245, 9247], [9247, 9250], [9251, 9262], [9263, 9265], [9266, 9272], [9273, 9274], [9274, 9284], [9285, 9296], [9297, 9304], [9304, 9305], [9306, 9314], [9314, 9316], [9316, 9319], [9320, 9331], [9332, 9334], [9335, 9341], [9342, 9343], [9343, 9353], [9354, 9365], [9366, 9373], [9373, 9374], [9375, 9385], [9385, 9387], [9387, 9390], [9391, 9402], [9403, 9405], [9406, 9412], [9413, 9414], [9414, 9424], [9425, 9436], [9437, 9444], [9444, 9445], [9446, 9478], [9479, 9490], [9491, 9500], [9501, 9509], [9510, 9511], [9511, 9520], [9520, 9523], [9523, 9524], [9524, 9527], [9527, 9528], [9529, 9561], [9562, 9573], [9574, 9583], [9584, 9592], [9593, 9594], [9594, 9603], [9603, 9606], [9606, 9607], [9607, 9610], [9610, 9611], [9612, 9617], [9617, 9620], [9620, 9625], [9625, 9627], [9627, 9634], [9634, 9636], [9636, 9639], [9639, 9640], [9640, 9648], [9648, 9649], [9649, 9650], [9650, 9651], [9651, 9652], [9652, 9653], [9653, 9658], [9658, 9659], [9660, 9740], [9740, 9741], [9741, 9742], [9743, 9753], [9754, 9765], [9766, 9773], [9774, 9781], [9782, 9785], [9786, 9791], [9791, 9794], [9794, 9799], [9799, 9801], [9801, 9808], [9808, 9810], [9810, 9813], [9813, 9814], [9814, 9822], [9822, 9823], [9823, 9824], [9824, 9825], [9825, 9826], [9826, 9827], [9827, 9832], [9832, 9833], [9834, 9914], [9914, 9915], [9915, 9918], [9919, 9925], [9926, 9933], [9934, 9941], [9942, 9945], [9946, 9952], [9952, 9955], [9955, 9958], [9959, 9970], [9971, 9973], [9974, 9980], [9981, 9982], [9982, 9988], [9989, 9996], [9996, 9997], [9998, 10004], [10004, 10007], [10007, 10010], [10011, 10022], [10023, 10025], [10026, 10032], [10033, 10034], [10034, 10040], [10041, 10048], [10048, 10049], [10050, 10056], [10056, 10059], [10059, 10062], [10063, 10074], [10075, 10077], [10078, 10084], [10085, 10086], [10086, 10092], [10093, 10100], [10100, 10101], [10102, 10110], [10110, 10112], [10112, 10131], [10131, 10133], [10133, 10136], [10137, 10148], [10149, 10156], [10157, 10162], [10163, 10171], [10171, 10173], [10173, 10178], [10178, 10191], [10191, 10193], [10193, 10198], [10198, 10200], [10200, 10203], [10204, 10215], [10216, 10223], [10224, 10235], [10236, 10243], [10244, 10249], [10250, 10257], [10257, 10259], [10259, 10276], [10276, 10278], [10278, 10281], [10282, 10293], [10294, 10301], [10302, 10307], [10317, 10322], [10323, 10334], [10335, 10339], [10340, 10346]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 10347, "lparker", "content", "human gold"]]}, {"type": "Match Legitimate Name or Location (T1036.005)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": []}, {"type": "Obfuscated Files or Information (T1027)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1994, 2030], [5658, 5681]]}, {"type": "Embedded Payloads (T1027.009)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2182, 2199], [2735, 2767], [8174, 8254]]}, {"type": "Native API (T1106)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2308, 2330], [2507, 2554], [2892, 2913], [3166, 3294], [3559, 3580], [4150, 4174], [6287, 6308], [6421, 6442], [6991, 7016]]}, {"type": "Process Injection (T1055)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[8899, 8918], [5301, 5335], [5173, 5203], [3592, 3617], [2578, 2684]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2917, 2938], [6580, 6608], [8277, 8390]]}, {"type": "Dynamic API Resolution (T1027.007)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3434, 3523], [3965, 4032]]}, {"type": "Process Discovery (T1057)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3299, 3346]]}, {"type": "Portable Executable Injection (T1055.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": []}, {"type": "Web Protocols (T1071.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6829, 6846], [7358, 7418], [7682, 7710]]}, {"type": "Valid Accounts (T1078)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[7535, 7559]]}, {"type": "Process Hollowing (T1055.012)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": []}], "version": 2}