{"signal": "title: Malware Reverse Engineering for Beginners – Part 2\nurl: https://www.intezer.com/blog/incident-response/malware-reverse-engineering-for-beginners-part-2/\n\nIn part 1 of this series, we warmed up and aligned with basic computing terminologies. We learned the basics of assembly and how to use disassemblers. All of these tools and techniques are very important for reversing malware samples. Different sorts of malware have different capabilities and implementations. As reverse engineers, we need to be familiar with them and be able to identify and understand them.\nOften, malware targeting Windows will be packed and delivered as a second stage. There are different ways to “deliver” malware to the endpoint. This blog will cover key concepts and examples regarding how malware is packed, obfuscated, delivered, and executed on the endpoint. \nHere’s what we’ll cover: \n\nBasic terms that explain how malware is delivered to endpoints. \nA deep dive on packers – what they are, how they work and how to identify packed samples. \nFollowing the technical information, we will demonstrate two hands-on analyses of packed malware.\n\nBasic Terminology for Reverse Engineers to Know\nAn executable file can conceal its true code through either encryption or compression. When the file is executed, some initial code usually called a stub, decrypts or decompresses the real code so it can be executed. These tools, that we will describe in this section, can be used by legitimate vendors that want to protect their software from piracy and copyright violations but threat actors also use these tools to evade detection and make the reversing engineering and analysis process harder.\nNow, let’s look at these four tools: a packer, crypter, protector, and a loader.\nWhat’s a Packer?\nPackers are often used to compress the payload so it will take less space on disk. While packers can be used for legitimate purposes, malware developers utilize packers to make the malicious payload smaller and avoid detection based on static malware analysis techniques.\nExamples: \n\nUPX is an open-source packing algorithm. \nMPRESS is a free packer.\nAndromeda is a custom packer that makes reverse-engineering more difficult.\n\nWhat’s a Crypter?  \nSome security tools use signatures or keywords to detect malware. To avoid detection by these tools, malware developers can use crypters. A crypter encrypts the payload, so it will be harder for signature-based and standard anti-viruses to detect the malicious payload. \nExamples: \n\nPEUNION \nEXECryptor \n\nWhat’s a Protector?\nFor most threat actors, one of the goals they want to achieve is to evade detection, and if the malware is detected then make the analysis process harder for researchers. That’s where protectors come into the picture – they offer many features that can make static and dynamic analysis tedious and time-consuming. Having said that, legitimate organizations can use protectors to protect their software from being cracked and manipulated. \nUsually, protectors will encrypt the payload, remove and obfuscate imports, implement anti-debugging and anti-reversing techniques, and much more.\nExamples:\n\nThemida \nEnigma Protector\nVMProtect\n\nWhat’s a Loader?\nPacked malware samples are compressed and stored inside the final executable, which will extract and execute the malware. On the other hand, there are loaders that serve as the first stage of the attack, the payload of the malware can be part of the loader’s file or it can be downloaded from a remote location (by the loader, also known as a Downloader). In addition, loaders can be used to set persistence and additional components needed for the execution of the malware. For example, Bazarloader is a sophisticated loader with multiple techniques that is used in attacks against high-profile organizations. Bazarloader delivers all sorts of threats, from spam to ransomware like Conti or Ryuk.\nIn many cases, malware is delivered by tools that implement some (or all) of the functionalities of packers, crypters, protects, and loaders –- all to make the analysis harder. For example, Morphine has its loader and can encrypt the original file.\nDeep Dive Into How Packers Work and Detection\nNow let’s focus on packers, how they work, how to identify packed files, and how to extract the packed payload that can contain malicious code. \nHow do packers work?\nThe packed file contains three main components: packed content, a new PE header, and a stub, as seen in the image below:\nPacked sample view.\nThe packers compress (and if it has the functionality of a crypter also encrypts) the original executable, which is saved in one of the sections of the final packed file. The entry point of the original file is relocated, and so is the Import Address Table (IAT). The stub is a small part of code that implements the decompression (and decryption) of the originally packed file. A new PE header is prepended to the packed file or modifies the existing header so it will be a valid executable. \nHow to detect packed files\n1. Static detection\nWhen data is being compressed or encrypted, the output is not structured and resembles more random data, resulting in high entropy. In information theory, entropy is a measure of disorder/randomness. The calculation is done using logarithm with base 2, also known as Shannon entropy, the result is in units of bits, hence the range of entropy level for binary files is 0 to 8. \nWe can check the entropy of the file sections, and if one of them has a value of 7 or higher, there is a high probability that the file is packed. \nPackers may change the final payload’s section names, as seen in the screenshot below. But in most cases, malware authors will rename the sections to more commonly used names that will not give away the fact that the file is packed. \nMultiple tools can be used to detect indicators of a sample being packed:\nPEstudio, DiE (Detect it Easy), CFF explorer, and more. There are many examples and tutorials that use these tools, so we will show another free tool that can be handy in this and later stages: radare2. \nViewing the section of a file (see technical analysis on this packer here).\nPacked samples usually have very few imports as they don’t rely on external libraries like other programs. When a file has a low number of imports, it strongly indicates that it contains another component that is dropped/loaded. However, malware developers can add “dummy” imports to mislead researchers.\nViewing the imports for a packed file; full analysis results here.\nReverse Engineering Example: Static Unpacking of UPX Packed Samples\nStandard UPX packed samples can be identified by the section names, as long as they were not modified by the attackers. Let’s take a look at a sample with MD5 5598febfbf00839c9f7047d9fe3205e3.\nThe section names of the files contain the UPX string, as seen in the screenshot below:\n\nWe can use the UPX command line utility to extract the packed payload. The command to decompress a packed file is as follows:\nupx -d <packed> -o <extracted payload>\nYou can run the command on the sample and verify that the extracted file has MD5 6d13f5d287fd735a9bbc261aafb49006.\n\n2. Dynamic detection\nWhen we dynamically analyze a packed file, we aim to extract the payload. Several functions can be a good place for putting a breakpoint and attempting to fetch the extraction process. Let’s look at API calls and debuggers.\nAPI Calls\nEssentially, all packers need to perform the following operations: allocate memory, change permissions, read the encrypted/packed chunk of code, decrypt it, load it to the allocated memory space and execute it. To make all of these actions, the program must use system calls because these actions require interaction with the kernel. \n\n\n\nThe relevant system calls are\n\nVirtualAlloc used for allocating memory in the current process. The memory is automatically initialized to zero. One of the arguments is dwSize – that’s the size in bytes. Knowing the size can help identify when a program allocates big memory space, possibly for the unpacked payload.  \n\n\nVirtualProtect changes the permissions of the given virtual address. When malware wants to grant write or execute permissions flNewProtect argument will be set to PAGE_EXECUTE_READWRITE (0x40) or PAGE_EXECUTE_READ (0x20).\n\n\nRtlDecompressBuffer decompresses the provided buffer. \n\n\nCreateProcessInternalW creates a new process. In the context of malware execution, it can create a new threat with the malicious unpacked payload. \n\nWe can look for these system calls in the list of imported functions. However, malware authors usually try to hide these system calls. For instance, we will not see them in the imported function list, and they not even be part of the strings in the sample. In this case, the function and the corresponding library are dynamically loaded at runtime – also known as explicit linking.\nIn this case, dynamic debugging can be very helpful – debuggers like x64dbg let you put a breakpoint on function calls, even if the function is not imported. The breakpoint will be triggered if the system call is executed. \nDebugger\nA debugger is a powerful tool that allows developers and researchers to follow and control the execution of a program. When debugging an executable, you can view the registers, stack, and memory and see how each instruction affects the stored data. \nDebugging malware can reveal code executed only in runtime (meaning that you will not see it in standard static analysis). Debuggers also allow you to see how strings and payloads are deobfuscated and constructed – making it easier to find the interesting patterns of the malware.\nDifferent debuggers can be used to debug Windows executables and DLLs:\n\nOllyDbg – not maintained anymore\nWindbg – powerful kernel-mode and user-mode debugger created by Microsoft.\nx64dbg  – reliable and user-friendly. For 32-bit executables, it’s x32dbg.\n\nThe main difference between these debuggers is the implementation, which may result in certain behaviors, but for the most part, it’s up to you to choose which debugger you prefer.\nThere are more tools for debugging (and analyzing) .NET executables and other Windows executables, but that’s not covered in this blog.\nReverse Engineering Example: Extracting Packed Locky Payload\nIn this section, we will present a guide on extracting packed malware from 2 popular malware: CobaltStrike and Locky. Make sure to run (and debug) the following examples in an isolated Windows virtual machine.\nYou can watch the video of the hands-on unpacking process of Cobalt Strike. The video shows generation of a Cobalt Strike payload, analysis of the assembly, dynamic execution of the stager to fetch payload, scanning the endpoint for in memory genetic analysis, and parsing the Beacon configuration.\n\n\n\nThe analysis of the Locky ransomware is covered in the section below.\nReverse engineering tools that will be used in these analyses:\n\nWindows virtual machine\nx32 debugger\nRadare2\nCommand line commands: file, strings, shasum\n\nIn this example, we will inspect a packed sample of Locky ransomware. While Intezer automatically identifies that the file is packed and extracts the payload for us, we will show how you can manually extract the payload here.\nStatic analysis\nFirst, we will check the entropy of the section (as we did in the previous example). We will use radare2. As seen in the screenshot below, the .rdata section has an entropy level higher than 7, and it’s very unusual for this section to have randomized data. We can run the strings command on the sample. The output contains lots of strings that look like a random collection of characters. At this point, we can assume that the sample is packed, so we will move to dynamic analysis using the x32dbg debugger.\n\nDynamic analysis\nWe will use the API calls we covered in the previous section. Put breakpoints on VirtualAlloc and VirtualProtect.\nbp VirtualAlloc\nbp VirtualProtect\n\nNow, let’s run the file. It will first stop at the entrypoint, we will hit F9 (continue until next breakpoint – BP), and we will get to the first call to VirtualAlloc. As seen in the screenshot below, the BP stopped on the call to VirtualAlloc, which is in the Kernel32.dll, and in the stack view (right low corner) we can see the arguments passed to the function. We can see that the required allocated space is relatively small, so it’s probably not called by the unpacking routine. So we will continue running the program – hit F9 again. \n\nIt might take a few more hits on the call to VirtualAlloc before we get to a call with the size 0xF41D. At this point, we want to see where VirtualAlloc was called and what will be stored in the allocated spaces. So, as shown below, we will ask x32dbg to run to user mode. We will get to the instruction “ret 10” at this point. We need to grab the value stored in EAX, which stores the return value of VirtualAlloc. \nIn my case, EAX is 0x240000. We will hit right-click and follow in the dump. The memory is zeroed out but if we follow the execution of the code (hitting F8 several times), we will see that the memory contains some values, but they look random. We can continue running the program until the next hit on the VirtualAlloc call.\n\n\nContinue running the program until VirtualAlloc is called with the size: 0x17400 – which is even bigger than the previously allocated buffer. Then again, hit “run to user code,” or “execute till return” and follow EAX in the dump and step through the use code until you see the allocated memory filled with data that looks like this:\n\n\nThe dump contains the unpacked executable – we can identify it by the 0x4D5A (MZ) magic. In the memory map, right-click the section and hit “Dump memory to file.”\n\n\nThe MD5 of the extracted payload is e96dad009437ca774035ffd73708bd3e. We can see in Intezer that, indeed, it’s Locky ransomware malware.  Mazal tov! You have successfully extracted the Locky payload. \nAutomating Unpacking for Every File\nLearning the foundations of reverse engineering is important if it is a skill that you are trying to develop in your career. But for many security teams, even at large companies, you may not have the time to manually unpack and reverse engineer files on a regular basis. If you have automated tools that can unpack files and conduct reverse engineering-level analysis, those can ensure that you’re using your time efficiently to focus on threats that require your attention. Since reverse engineering can be time intensive, you’ll want to only use manual methods for tasks like unpacking after you’ve exhausted your other tools and options. \nDon’t have the time or skills for reverse engineering the volume of packed and obfuscated files your SOC team handles?\nIntezer’s automated alert triage and response process collects files from your endpoint security solution (like CrowdStrike, Microsoft Defender, or SentinelOne) to identify packed files, extract the payload, and then respond autonomously or with the results Intezer provides for remediation.\nTo see how Intezer handles reverse engineering tasks for every alert, book a demo here.\nThe post Malware Reverse Engineering for Beginners – Part 2 appeared first on Intezer.\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 15190, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 14], [15, 22], [23, 34], [35, 38], [39, 48], [49, 50], [51, 55], [56, 57], [58, 61], [61, 62], [63, 68], [68, 71], [71, 74], [74, 75], [75, 82], [82, 83], [83, 86], [86, 87], [87, 91], [91, 92], [92, 109], [109, 110], [110, 157], [157, 158], [158, 159], [161, 163], [164, 168], [169, 170], [171, 173], [174, 178], [179, 185], [185, 186], [187, 189], [190, 196], [197, 199], [200, 203], [204, 211], [212, 216], [217, 222], [223, 232], [233, 246], [246, 247], [248, 250], [251, 258], [259, 262], [263, 269], [270, 272], [273, 281], [282, 285], [286, 289], [290, 292], [293, 296], [297, 310], [310, 311], [312, 315], [316, 318], [319, 324], [325, 330], [331, 334], [335, 345], [346, 349], [350, 354], [355, 364], [365, 368], [369, 378], [379, 386], [387, 394], [394, 395], [396, 405], [406, 411], [412, 414], [415, 422], [423, 427], [428, 437], [438, 450], [451, 454], [455, 470], [470, 471], [472, 474], [475, 482], [483, 492], [492, 493], [494, 496], [497, 501], [502, 504], [505, 507], [508, 516], [517, 521], [522, 526], [527, 530], [531, 533], [534, 538], [539, 541], [542, 550], [551, 554], [555, 565], [566, 570], [570, 571], [572, 577], [577, 578], [579, 586], [587, 596], [597, 604], [605, 609], [610, 612], [613, 619], [620, 623], [624, 633], [634, 636], [637, 638], [639, 645], [646, 651], [651, 652], [653, 658], [659, 662], [663, 672], [673, 677], [678, 680], [681, 690], [691, 698], [699, 701], [702, 705], [706, 714], [714, 715], [716, 720], [721, 725], [726, 730], [731, 736], [737, 740], [741, 749], [750, 753], [754, 762], [763, 772], [773, 776], [777, 784], [785, 787], [788, 794], [794, 795], [796, 806], [806, 807], [808, 817], [817, 818], [819, 822], [823, 831], [832, 834], [835, 838], [839, 847], [847, 848], [850, 856], [857, 861], [862, 867], [868, 873], [873, 874], [877, 882], [883, 888], [889, 893], [894, 901], [902, 905], [906, 913], [914, 916], [917, 926], [927, 929], [930, 939], [939, 940], [942, 943], [944, 948], [949, 953], [954, 956], [957, 964], [965, 966], [967, 971], [972, 976], [977, 980], [980, 981], [982, 985], [986, 990], [991, 995], [996, 999], [1000, 1003], [1004, 1006], [1007, 1015], [1016, 1022], [1023, 1030], [1030, 1031], [1033, 1042], [1043, 1046], [1047, 1056], [1057, 1068], [1068, 1069], [1070, 1072], [1073, 1077], [1078, 1089], [1090, 1093], [1094, 1102], [1103, 1111], [1112, 1114], [1115, 1121], [1122, 1129], [1129, 1130], [1132, 1137], [1138, 1149], [1150, 1153], [1154, 1161], [1162, 1171], [1172, 1174], [1175, 1179], [1180, 1182], [1183, 1193], [1194, 1198], [1199, 1202], [1203, 1210], [1211, 1214], [1215, 1219], [1220, 1224], [1225, 1232], [1233, 1239], [1240, 1250], [1251, 1253], [1254, 1265], [1265, 1266], [1267, 1271], [1272, 1275], [1276, 1280], [1281, 1283], [1284, 1292], [1292, 1293], [1294, 1298], [1299, 1306], [1307, 1311], [1312, 1319], [1320, 1326], [1327, 1328], [1329, 1333], [1333, 1334], [1335, 1343], [1344, 1346], [1347, 1359], [1360, 1363], [1364, 1368], [1369, 1373], [1374, 1376], [1377, 1379], [1380, 1383], [1384, 1386], [1387, 1395], [1395, 1396], [1397, 1402], [1403, 1408], [1408, 1409], [1410, 1414], [1415, 1417], [1418, 1422], [1423, 1431], [1432, 1434], [1435, 1439], [1440, 1447], [1447, 1448], [1449, 1452], [1453, 1455], [1456, 1460], [1461, 1463], [1464, 1474], [1475, 1482], [1483, 1487], [1488, 1492], [1493, 1495], [1496, 1503], [1504, 1509], [1510, 1518], [1519, 1523], [1524, 1530], [1531, 1534], [1535, 1544], [1545, 1555], [1556, 1559], [1560, 1566], [1567, 1573], [1574, 1578], [1579, 1582], [1583, 1588], [1589, 1594], [1595, 1597], [1598, 1603], [1604, 1613], [1614, 1617], [1618, 1622], [1623, 1626], [1627, 1636], [1637, 1648], [1649, 1652], [1653, 1661], [1662, 1669], [1670, 1676], [1676, 1677], [1678, 1681], [1681, 1682], [1683, 1688], [1689, 1693], [1694, 1696], [1697, 1702], [1703, 1707], [1708, 1713], [1713, 1714], [1715, 1716], [1717, 1723], [1723, 1724], [1725, 1732], [1732, 1733], [1734, 1743], [1743, 1744], [1745, 1748], [1749, 1750], [1751, 1757], [1757, 1758], [1759, 1765], [1766, 1767], [1768, 1774], [1774, 1775], [1776, 1783], [1784, 1787], [1788, 1793], [1794, 1798], [1799, 1801], [1802, 1810], [1811, 1814], [1815, 1822], [1823, 1825], [1826, 1828], [1829, 1833], [1834, 1838], [1839, 1843], [1844, 1849], [1850, 1852], [1853, 1857], [1857, 1858], [1859, 1864], [1865, 1872], [1873, 1876], [1877, 1879], [1880, 1884], [1885, 1888], [1889, 1899], [1900, 1908], [1908, 1909], [1910, 1917], [1918, 1928], [1929, 1936], [1937, 1944], [1945, 1947], [1948, 1952], [1953, 1956], [1957, 1966], [1967, 1974], [1975, 1982], [1983, 1986], [1987, 1992], [1993, 2002], [2003, 2008], [2009, 2011], [2012, 2018], [2019, 2026], [2027, 2035], [2036, 2046], [2046, 2047], [2048, 2056], [2056, 2057], [2060, 2063], [2064, 2066], [2067, 2069], [2070, 2081], [2082, 2089], [2090, 2099], [2099, 2100], [2102, 2108], [2109, 2111], [2112, 2113], [2114, 2118], [2119, 2125], [2125, 2126], [2127, 2136], [2137, 2139], [2140, 2141], [2142, 2148], [2149, 2155], [2156, 2160], [2161, 2166], [2167, 2186], [2187, 2191], [2192, 2201], [2201, 2202], [2204, 2210], [2211, 2212], [2213, 2220], [2220, 2221], [2224, 2228], [2229, 2237], [2238, 2243], [2244, 2247], [2248, 2258], [2259, 2261], [2262, 2270], [2271, 2273], [2274, 2280], [2281, 2288], [2288, 2289], [2290, 2292], [2293, 2298], [2299, 2308], [2309, 2311], [2312, 2317], [2318, 2323], [2323, 2324], [2325, 2332], [2333, 2343], [2344, 2347], [2348, 2351], [2352, 2360], [2360, 2361], [2362, 2363], [2364, 2371], [2372, 2380], [2381, 2384], [2385, 2392], [2392, 2393], [2394, 2396], [2397, 2399], [2400, 2404], [2405, 2407], [2408, 2414], [2415, 2418], [2419, 2434], [2435, 2438], [2439, 2447], [2448, 2460], [2461, 2463], [2464, 2470], [2471, 2474], [2475, 2484], [2485, 2492], [2492, 2493], [2495, 2503], [2503, 2504], [2507, 2515], [2516, 2527], [2529, 2535], [2536, 2537], [2538, 2547], [2547, 2548], [2549, 2552], [2553, 2557], [2558, 2564], [2565, 2571], [2571, 2572], [2573, 2576], [2577, 2579], [2580, 2583], [2584, 2589], [2590, 2594], [2595, 2599], [2600, 2602], [2603, 2610], [2611, 2613], [2614, 2616], [2617, 2622], [2623, 2632], [2632, 2633], [2634, 2637], [2638, 2640], [2641, 2644], [2645, 2652], [2653, 2655], [2656, 2664], [2665, 2669], [2670, 2674], [2675, 2678], [2679, 2687], [2688, 2695], [2696, 2702], [2703, 2706], [2707, 2718], [2718, 2719], [2720, 2726], [2727, 2732], [2733, 2743], [2744, 2748], [2749, 2753], [2754, 2757], [2758, 2765], [2766, 2767], [2768, 2772], [2773, 2778], [2779, 2783], [2784, 2792], [2793, 2797], [2798, 2801], [2802, 2806], [2807, 2813], [2814, 2817], [2818, 2825], [2826, 2834], [2835, 2842], [2843, 2846], [2847, 2861], [2861, 2862], [2863, 2869], [2870, 2874], [2875, 2879], [2879, 2880], [2881, 2891], [2892, 2905], [2906, 2909], [2910, 2913], [2914, 2924], [2925, 2927], [2928, 2935], [2936, 2941], [2942, 2950], [2951, 2955], [2956, 2961], [2962, 2969], [2970, 2973], [2974, 2985], [2985, 2986], [2988, 2995], [2995, 2996], [2997, 3007], [3008, 3012], [3013, 3020], [3021, 3024], [3025, 3032], [3032, 3033], [3034, 3040], [3041, 3044], [3045, 3054], [3055, 3062], [3062, 3063], [3064, 3073], [3074, 3088], [3089, 3092], [3093, 3107], [3108, 3118], [3118, 3119], [3120, 3123], [3124, 3128], [3129, 3133], [3133, 3134], [3135, 3143], [3143, 3144], [3146, 3154], [3155, 3161], [3162, 3171], [3172, 3181], [3183, 3189], [3190, 3191], [3192, 3198], [3198, 3199], [3200, 3206], [3207, 3214], [3215, 3222], [3223, 3226], [3227, 3237], [3238, 3241], [3242, 3248], [3249, 3255], [3256, 3259], [3260, 3265], [3266, 3276], [3276, 3277], [3278, 3283], [3284, 3288], [3289, 3296], [3297, 3300], [3301, 3308], [3309, 3312], [3313, 3320], [3320, 3321], [3322, 3324], [3325, 3328], [3329, 3334], [3335, 3339], [3339, 3340], [3341, 3346], [3347, 3350], [3351, 3358], [3359, 3363], [3364, 3369], [3370, 3372], [3373, 3376], [3377, 3382], [3383, 3388], [3389, 3391], [3392, 3395], [3396, 3402], [3402, 3403], [3404, 3407], [3408, 3415], [3416, 3418], [3419, 3422], [3423, 3430], [3431, 3434], [3435, 3437], [3438, 3442], [3443, 3445], [3446, 3449], [3450, 3458], [3459, 3463], [3464, 3466], [3467, 3469], [3470, 3473], [3474, 3476], [3477, 3487], [3488, 3492], [3493, 3494], [3495, 3501], [3502, 3510], [3511, 3512], [3512, 3514], [3515, 3518], [3519, 3525], [3525, 3526], [3527, 3531], [3532, 3537], [3538, 3540], [3541, 3542], [3543, 3553], [3553, 3555], [3556, 3558], [3559, 3567], [3567, 3568], [3569, 3576], [3577, 3580], [3581, 3583], [3584, 3588], [3589, 3591], [3592, 3595], [3596, 3607], [3608, 3611], [3612, 3622], [3623, 3633], [3634, 3640], [3641, 3644], [3645, 3648], [3649, 3658], [3659, 3661], [3662, 3665], [3666, 3673], [3673, 3674], [3675, 3678], [3679, 3686], [3686, 3687], [3688, 3699], [3700, 3702], [3703, 3704], [3705, 3718], [3719, 3725], [3726, 3730], [3731, 3739], [3740, 3750], [3751, 3755], [3756, 3758], [3759, 3763], [3764, 3766], [3767, 3774], [3775, 3782], [3783, 3795], [3796, 3809], [3809, 3810], [3811, 3822], [3823, 3831], [3832, 3835], [3836, 3841], [3842, 3844], [3845, 3852], [3852, 3853], [3854, 3858], [3859, 3863], [3864, 3866], [3867, 3877], [3878, 3882], [3883, 3888], [3889, 3891], [3892, 3896], [3896, 3897], [3898, 3900], [3901, 3905], [3906, 3911], [3911, 3912], [3913, 3920], [3921, 3923], [3924, 3933], [3934, 3936], [3937, 3942], [3943, 3947], [3948, 3957], [3958, 3962], [3963, 3964], [3964, 3966], [3967, 3970], [3970, 3971], [3972, 3974], [3975, 3978], [3979, 3994], [3995, 3997], [3998, 4005], [4005, 4006], [4007, 4015], [4015, 4016], [4017, 4025], [4025, 4026], [4027, 4030], [4031, 4038], [4039, 4040], [4040, 4041], [4042, 4045], [4046, 4048], [4049, 4053], [4054, 4057], [4058, 4066], [4067, 4073], [4073, 4074], [4075, 4078], [4079, 4086], [4086, 4087], [4088, 4096], [4097, 4100], [4101, 4104], [4105, 4111], [4112, 4115], [4116, 4119], [4120, 4127], [4128, 4131], [4132, 4140], [4141, 4145], [4145, 4146], [4147, 4151], [4152, 4156], [4157, 4161], [4162, 4165], [4166, 4178], [4179, 4182], [4183, 4192], [4193, 4196], [4197, 4202], [4203, 4208], [4209, 4211], [4212, 4219], [4219, 4220], [4221, 4224], [4225, 4229], [4230, 4234], [4234, 4235], [4236, 4239], [4240, 4242], [4243, 4251], [4252, 4258], [4259, 4264], [4264, 4265], [4266, 4269], [4270, 4273], [4274, 4276], [4277, 4284], [4285, 4288], [4289, 4295], [4296, 4303], [4304, 4308], [4309, 4312], [4313, 4320], [4321, 4330], [4331, 4335], [4335, 4336], [4338, 4341], [4342, 4344], [4345, 4352], [4353, 4357], [4357, 4358], [4359, 4362], [4363, 4369], [4370, 4374], [4375, 4383], [4384, 4389], [4390, 4394], [4395, 4405], [4405, 4406], [4407, 4413], [4414, 4421], [4421, 4422], [4423, 4424], [4425, 4428], [4429, 4431], [4432, 4438], [4438, 4439], [4440, 4443], [4444, 4445], [4446, 4450], [4450, 4451], [4452, 4454], [4455, 4459], [4460, 4462], [4463, 4466], [4467, 4472], [4473, 4478], [4478, 4479], [4480, 4486], [4487, 4493], [4494, 4498], [4498, 4499], [4500, 4503], [4504, 4511], [4512, 4520], [4521, 4522], [4522, 4525], [4526, 4528], [4529, 4531], [4532, 4535], [4536, 4539], [4540, 4553], [4554, 4556], [4557, 4558], [4559, 4566], [4567, 4571], [4572, 4580], [4580, 4581], [4582, 4585], [4586, 4594], [4595, 4605], [4605, 4606], [4607, 4612], [4613, 4615], [4616, 4621], [4622, 4624], [4625, 4628], [4629, 4631], [4632, 4635], [4636, 4644], [4645, 4647], [4648, 4651], [4652, 4657], [4658, 4664], [4665, 4669], [4669, 4670], [4671, 4674], [4675, 4680], [4681, 4686], [4687, 4689], [4690, 4693], [4694, 4702], [4703, 4707], [4708, 4710], [4711, 4720], [4720, 4721], [4722, 4725], [4726, 4728], [4729, 4731], [4732, 4735], [4736, 4742], [4743, 4750], [4751, 4756], [4757, 4758], [4758, 4761], [4761, 4763], [4764, 4767], [4768, 4772], [4773, 4775], [4776, 4777], [4778, 4783], [4784, 4788], [4789, 4791], [4792, 4796], [4797, 4801], [4802, 4812], [4813, 4816], [4817, 4830], [4831, 4832], [4832, 4835], [4836, 4846], [4846, 4847], [4848, 4850], [4851, 4854], [4855, 4865], [4866, 4872], [4873, 4877], [4877, 4878], [4879, 4880], [4881, 4884], [4885, 4887], [4888, 4894], [4895, 4897], [4898, 4907], [4908, 4910], [4911, 4914], [4915, 4921], [4922, 4926], [4927, 4929], [4930, 4938], [4939, 4942], [4943, 4951], [4952, 4958], [4959, 4961], [4962, 4964], [4965, 4969], [4970, 4972], [4973, 4974], [4975, 4980], [4981, 4991], [4991, 4992], [4994, 4997], [4998, 5000], [5001, 5007], [5008, 5014], [5015, 5020], [5021, 5022], [5022, 5023], [5024, 5030], [5031, 5040], [5041, 5045], [5046, 5050], [5051, 5053], [5054, 5059], [5060, 5070], [5071, 5073], [5074, 5083], [5083, 5084], [5085, 5088], [5089, 5095], [5096, 5098], [5099, 5102], [5103, 5113], [5114, 5117], [5118, 5127], [5128, 5132], [5133, 5139], [5140, 5144], [5144, 5145], [5146, 5155], [5156, 5158], [5159, 5163], [5164, 5171], [5171, 5172], [5173, 5175], [5176, 5187], [5188, 5194], [5194, 5195], [5196, 5203], [5204, 5206], [5207, 5208], [5209, 5216], [5217, 5219], [5220, 5228], [5228, 5229], [5229, 5239], [5239, 5240], [5241, 5244], [5245, 5256], [5257, 5259], [5260, 5264], [5265, 5270], [5271, 5280], [5281, 5285], [5286, 5290], [5291, 5292], [5292, 5293], [5294, 5298], [5299, 5304], [5305, 5307], [5308, 5315], [5316, 5323], [5323, 5324], [5325, 5328], [5329, 5335], [5336, 5338], [5339, 5341], [5342, 5347], [5348, 5350], [5351, 5355], [5355, 5356], [5357, 5362], [5363, 5366], [5367, 5372], [5373, 5375], [5376, 5383], [5384, 5389], [5390, 5393], [5394, 5400], [5401, 5406], [5407, 5409], [5410, 5411], [5412, 5414], [5415, 5416], [5416, 5417], [5419, 5421], [5422, 5425], [5426, 5431], [5432, 5435], [5436, 5443], [5444, 5446], [5447, 5450], [5451, 5455], [5456, 5464], [5464, 5465], [5466, 5469], [5470, 5472], [5473, 5476], [5477, 5479], [5480, 5484], [5485, 5488], [5489, 5490], [5491, 5496], [5497, 5499], [5500, 5501], [5502, 5504], [5505, 5511], [5511, 5512], [5513, 5518], [5519, 5521], [5522, 5523], [5524, 5528], [5529, 5540], [5541, 5545], [5546, 5549], [5550, 5554], [5555, 5557], [5558, 5564], [5564, 5565], [5567, 5574], [5575, 5578], [5579, 5585], [5586, 5589], [5590, 5595], [5596, 5605], [5606, 5613], [5614, 5619], [5619, 5620], [5621, 5623], [5624, 5628], [5629, 5631], [5632, 5635], [5636, 5646], [5647, 5652], [5652, 5653], [5654, 5657], [5658, 5660], [5661, 5665], [5666, 5671], [5671, 5672], [5673, 5680], [5681, 5688], [5689, 5693], [5694, 5700], [5701, 5704], [5705, 5713], [5714, 5716], [5717, 5721], [5722, 5730], [5731, 5735], [5736, 5741], [5742, 5746], [5747, 5751], [5752, 5755], [5756, 5760], [5761, 5765], [5766, 5769], [5770, 5774], [5775, 5779], [5780, 5783], [5784, 5788], [5789, 5791], [5792, 5798], [5798, 5799], [5801, 5809], [5810, 5815], [5816, 5819], [5820, 5822], [5823, 5827], [5828, 5830], [5831, 5837], [5838, 5848], [5849, 5851], [5852, 5853], [5854, 5860], [5861, 5866], [5867, 5873], [5873, 5874], [5875, 5883], [5883, 5884], [5885, 5888], [5889, 5890], [5890, 5896], [5897, 5899], [5900, 5904], [5904, 5906], [5907, 5910], [5911, 5919], [5919, 5920], [5921, 5924], [5925, 5929], [5929, 5930], [5931, 5936], [5937, 5940], [5941, 5945], [5946, 5954], [5955, 5958], [5959, 5968], [5969, 5973], [5974, 5977], [5978, 5983], [5984, 5989], [5989, 5990], [5991, 5993], [5994, 5996], [5997, 6001], [6002, 6006], [6007, 6014], [6015, 6019], [6020, 6024], [6025, 6029], [6030, 6033], [6034, 6036], [6037, 6042], [6043, 6045], [6046, 6050], [6051, 6054], [6055, 6060], [6061, 6067], [6067, 6068], [6069, 6076], [6076, 6077], [6079, 6086], [6087, 6090], [6091, 6098], [6099, 6101], [6102, 6103], [6104, 6108], [6109, 6110], [6110, 6113], [6114, 6123], [6124, 6132], [6133, 6135], [6136, 6140], [6141, 6147], [6148, 6152], [6152, 6154], [6155, 6161], [6162, 6169], [6170, 6177], [6178, 6182], [6183, 6187], [6188, 6191], [6192, 6199], [6200, 6202], [6203, 6207], [6208, 6213], [6214, 6218], [6219, 6221], [6222, 6230], [6231, 6240], [6241, 6245], [6246, 6251], [6252, 6260], [6260, 6261], [6262, 6266], [6267, 6268], [6269, 6273], [6274, 6277], [6278, 6279], [6280, 6283], [6284, 6290], [6291, 6293], [6294, 6301], [6301, 6302], [6303, 6305], [6306, 6314], [6315, 6324], [6325, 6329], [6330, 6332], [6333, 6341], [6342, 6349], [6350, 6359], [6360, 6364], [6365, 6367], [6368, 6375], [6375, 6376], [6376, 6382], [6382, 6383], [6384, 6391], [6391, 6392], [6393, 6400], [6401, 6411], [6412, 6415], [6416, 6419], [6420, 6427], [6428, 6435], [6436, 6438], [6439, 6446], [6447, 6458], [6458, 6459], [6460, 6467], [6468, 6471], [6472, 6479], [6480, 6483], [6484, 6485], [6486, 6492], [6493, 6497], [6497, 6498], [6499, 6503], [6504, 6512], [6513, 6520], [6521, 6525], [6525, 6526], [6527, 6534], [6535, 6546], [6547, 6554], [6554, 6555], [6556, 6562], [6563, 6572], [6573, 6575], [6576, 6579], [6580, 6586], [6587, 6594], [6595, 6603], [6604, 6607], [6608, 6614], [6615, 6622], [6623, 6626], [6627, 6629], [6630, 6640], [6641, 6643], [6644, 6647], [6648, 6655], [6656, 6661], [6661, 6662], [6663, 6665], [6666, 6670], [6671, 6673], [6674, 6678], [6679, 6683], [6684, 6687], [6688, 6696], [6697, 6699], [6700, 6703], [6704, 6713], [6713, 6714], [6715, 6720], [6721, 6725], [6726, 6727], [6728, 6732], [6733, 6735], [6736, 6737], [6738, 6744], [6745, 6749], [6750, 6753], [6754, 6786], [6786, 6787], [6788, 6791], [6792, 6799], [6800, 6805], [6806, 6808], [6809, 6812], [6813, 6818], [6819, 6826], [6827, 6830], [6831, 6834], [6835, 6841], [6841, 6842], [6843, 6845], [6846, 6850], [6851, 6853], [6854, 6857], [6858, 6868], [6869, 6874], [6874, 6875], [6877, 6879], [6880, 6883], [6884, 6887], [6888, 6891], [6892, 6895], [6896, 6903], [6904, 6908], [6909, 6916], [6917, 6919], [6920, 6927], [6928, 6931], [6932, 6938], [6939, 6946], [6946, 6947], [6948, 6951], [6952, 6959], [6960, 6962], [6963, 6973], [6974, 6975], [6976, 6982], [6983, 6987], [6988, 6990], [6991, 6993], [6994, 7001], [7001, 7002], [7003, 7006], [7007, 7009], [7010, 7018], [7019, 7021], [7022, 7032], [7033, 7041], [7042, 7045], [7046, 7049], [7050, 7053], [7054, 7057], [7058, 7065], [7066, 7068], [7069, 7072], [7073, 7079], [7080, 7083], [7084, 7090], [7091, 7095], [7096, 7099], [7100, 7109], [7110, 7114], [7115, 7118], [7119, 7122], [7123, 7155], [7155, 7156], [7158, 7159], [7159, 7160], [7161, 7168], [7169, 7178], [7179, 7183], [7184, 7186], [7187, 7198], [7199, 7206], [7207, 7208], [7209, 7215], [7216, 7220], [7220, 7221], [7222, 7224], [7225, 7228], [7229, 7231], [7232, 7239], [7240, 7243], [7244, 7251], [7251, 7252], [7253, 7260], [7261, 7270], [7271, 7274], [7275, 7277], [7278, 7279], [7280, 7284], [7285, 7290], [7291, 7294], [7295, 7302], [7303, 7304], [7305, 7315], [7316, 7319], [7320, 7330], [7331, 7333], [7334, 7339], [7340, 7343], [7344, 7354], [7355, 7362], [7362, 7363], [7364, 7369], [7370, 7374], [7375, 7377], [7378, 7381], [7382, 7387], [7388, 7391], [7392, 7401], [7401, 7402], [7403, 7406], [7407, 7412], [7413, 7424], [7424, 7425], [7426, 7429], [7430, 7437], [7438, 7442], [7443, 7445], [7446, 7453], [7454, 7457], [7458, 7467], [7468, 7478], [7478, 7479], [7480, 7488], [7489, 7495], [7495, 7496], [7497, 7503], [7504, 7515], [7515, 7516], [7517, 7521], [7522, 7525], [7526, 7535], [7535, 7536], [7536, 7542], [7543, 7548], [7549, 7551], [7552, 7556], [7556, 7557], [7558, 7565], [7566, 7568], [7568, 7569], [7570, 7574], [7575, 7577], [7578, 7580], [7581, 7584], [7585, 7594], [7595, 7601], [7602, 7607], [7608, 7611], [7612, 7619], [7620, 7622], [7622, 7623], [7624, 7626], [7627, 7631], [7632, 7635], [7636, 7638], [7639, 7644], [7645, 7652], [7652, 7653], [7654, 7657], [7658, 7665], [7666, 7670], [7671, 7674], [7675, 7681], [7682, 7687], [7688, 7695], [7696, 7701], [7702, 7709], [7710, 7717], [7718, 7729], [7730, 7734], [7735, 7738], [7739, 7745], [7745, 7746], [7751, 7754], [7755, 7763], [7764, 7770], [7771, 7776], [7777, 7780], [7782, 7794], [7795, 7799], [7800, 7803], [7804, 7814], [7815, 7821], [7822, 7824], [7825, 7828], [7829, 7836], [7837, 7844], [7844, 7845], [7846, 7849], [7850, 7856], [7857, 7859], [7860, 7873], [7874, 7885], [7886, 7888], [7889, 7893], [7893, 7894], [7895, 7898], [7899, 7901], [7902, 7905], [7906, 7915], [7916, 7918], [7919, 7925], [7926, 7927], [7928, 7934], [7935, 7938], [7939, 7943], [7944, 7946], [7947, 7952], [7952, 7953], [7954, 7961], [7962, 7965], [7966, 7970], [7971, 7974], [7975, 7979], [7980, 7988], [7989, 7993], [7994, 7995], [7996, 8003], [8004, 8013], [8014, 8017], [8018, 8024], [8025, 8030], [8030, 8031], [8032, 8040], [8041, 8044], [8045, 8048], [8049, 8057], [8058, 8065], [8065, 8066], [8071, 8085], [8086, 8093], [8094, 8097], [8098, 8109], [8110, 8112], [8113, 8116], [8117, 8122], [8123, 8130], [8131, 8138], [8138, 8139], [8140, 8144], [8145, 8152], [8153, 8158], [8159, 8161], [8162, 8167], [8168, 8173], [8174, 8176], [8177, 8184], [8185, 8196], [8197, 8209], [8210, 8218], [8219, 8223], [8224, 8226], [8227, 8230], [8231, 8233], [8234, 8256], [8257, 8258], [8258, 8262], [8262, 8263], [8264, 8266], [8267, 8284], [8285, 8286], [8286, 8290], [8290, 8292], [8295, 8314], [8315, 8327], [8328, 8331], [8332, 8340], [8341, 8347], [8347, 8348], [8352, 8374], [8375, 8382], [8383, 8384], [8385, 8388], [8389, 8396], [8396, 8397], [8398, 8400], [8401, 8404], [8405, 8412], [8413, 8415], [8416, 8423], [8424, 8433], [8433, 8434], [8435, 8437], [8438, 8441], [8442, 8448], [8449, 8450], [8451, 8454], [8455, 8461], [8462, 8466], [8467, 8470], [8471, 8480], [8481, 8489], [8490, 8497], [8497, 8498], [8501, 8503], [8504, 8507], [8508, 8512], [8513, 8516], [8517, 8522], [8523, 8529], [8530, 8535], [8536, 8538], [8539, 8542], [8543, 8547], [8548, 8550], [8551, 8559], [8560, 8569], [8569, 8570], [8571, 8578], [8578, 8579], [8580, 8587], [8588, 8595], [8596, 8603], [8604, 8607], [8608, 8610], [8611, 8615], [8616, 8621], [8622, 8628], [8629, 8634], [8634, 8635], [8636, 8639], [8640, 8648], [8648, 8649], [8650, 8652], [8653, 8657], [8658, 8661], [8662, 8665], [8666, 8670], [8671, 8673], [8674, 8677], [8678, 8686], [8687, 8695], [8696, 8700], [8700, 8701], [8702, 8705], [8706, 8710], [8711, 8714], [8715, 8719], [8720, 8722], [8723, 8727], [8728, 8730], [8731, 8734], [8735, 8742], [8743, 8745], [8746, 8749], [8750, 8756], [8756, 8757], [8758, 8760], [8761, 8765], [8766, 8770], [8770, 8771], [8772, 8775], [8776, 8784], [8785, 8788], [8789, 8792], [8793, 8806], [8807, 8814], [8815, 8818], [8819, 8830], [8831, 8837], [8838, 8840], [8841, 8848], [8849, 8850], [8851, 8855], [8856, 8861], [8862, 8864], [8865, 8873], [8874, 8881], [8881, 8882], [8883, 8885], [8886, 8890], [8891, 8895], [8895, 8896], [8897, 8904], [8905, 8914], [8915, 8918], [8919, 8921], [8922, 8926], [8927, 8934], [8935, 8936], [8937, 8946], [8947, 8951], [8952, 8958], [8959, 8962], [8963, 8966], [8967, 8970], [8971, 8972], [8973, 8983], [8984, 8986], [8987, 8995], [8996, 9001], [9001, 9002], [9003, 9007], [9008, 9010], [9011, 9014], [9015, 9023], [9024, 9026], [9027, 9030], [9031, 9039], [9039, 9040], [9041, 9044], [9045, 9055], [9056, 9060], [9061, 9063], [9064, 9073], [9074, 9076], [9077, 9080], [9081, 9087], [9088, 9092], [9093, 9095], [9096, 9104], [9104, 9105], [9107, 9115], [9116, 9117], [9118, 9126], [9127, 9129], [9130, 9131], [9132, 9140], [9141, 9145], [9146, 9150], [9151, 9157], [9158, 9168], [9169, 9172], [9173, 9184], [9185, 9187], [9188, 9194], [9195, 9198], [9199, 9206], [9207, 9210], [9211, 9220], [9221, 9223], [9224, 9225], [9226, 9233], [9233, 9234], [9235, 9239], [9240, 9249], [9250, 9252], [9253, 9263], [9263, 9264], [9265, 9268], [9269, 9272], [9273, 9277], [9278, 9281], [9282, 9291], [9291, 9292], [9293, 9298], [9298, 9299], [9300, 9303], [9304, 9310], [9311, 9314], [9315, 9318], [9319, 9322], [9323, 9327], [9328, 9339], [9340, 9347], [9348, 9351], [9352, 9358], [9359, 9363], [9363, 9364], [9366, 9375], [9376, 9383], [9384, 9387], [9388, 9394], [9395, 9399], [9400, 9408], [9409, 9413], [9414, 9416], [9417, 9424], [9425, 9426], [9426, 9433], [9434, 9438], [9439, 9442], [9443, 9447], [9448, 9451], [9452, 9455], [9456, 9458], [9459, 9461], [9462, 9470], [9471, 9477], [9478, 9486], [9486, 9488], [9489, 9498], [9499, 9503], [9504, 9509], [9510, 9513], [9514, 9516], [9517, 9520], [9521, 9524], [9525, 9532], [9533, 9536], [9537, 9545], [9546, 9549], [9550, 9562], [9563, 9566], [9567, 9578], [9579, 9580], [9581, 9587], [9588, 9590], [9591, 9597], [9598, 9600], [9601, 9605], [9606, 9609], [9610, 9621], [9622, 9630], [9631, 9633], [9634, 9637], [9638, 9645], [9645, 9646], [9647, 9656], [9657, 9666], [9667, 9670], [9671, 9673], [9674, 9678], [9679, 9681], [9682, 9687], [9688, 9695], [9696, 9707], [9708, 9711], [9712, 9716], [9716, 9717], [9719, 9726], [9727, 9728], [9729, 9732], [9733, 9743], [9744, 9751], [9752, 9758], [9759, 9760], [9761, 9769], [9770, 9781], [9782, 9785], [9786, 9795], [9796, 9804], [9805, 9812], [9813, 9815], [9816, 9825], [9825, 9826], [9827, 9834], [9835, 9836], [9837, 9845], [9846, 9849], [9850, 9863], [9863, 9864], [9865, 9868], [9869, 9871], [9871, 9875], [9876, 9887], [9887, 9888], [9889, 9893], [9894, 9900], [9900, 9901], [9903, 9906], [9907, 9911], [9912, 9922], [9923, 9930], [9931, 9936], [9937, 9946], [9947, 9949], [9950, 9953], [9954, 9968], [9968, 9969], [9970, 9975], [9976, 9979], [9980, 9986], [9987, 9989], [9990, 9997], [9998, 10007], [10007, 10008], [10009, 10012], [10013, 10016], [10017, 10020], [10021, 10025], [10026, 10030], [10030, 10031], [10032, 10036], [10037, 10039], [10040, 10042], [10043, 10046], [10047, 10049], [10050, 10056], [10057, 10062], [10063, 10071], [10072, 10075], [10076, 10082], [10082, 10083], [10084, 10089], [10090, 10093], [10094, 10098], [10099, 10104], [10105, 10108], [10109, 10118], [10119, 10120], [10120, 10123], [10124, 10133], [10133, 10134], [10135, 10136], [10136, 10139], [10140, 10151], [10152, 10155], [10156, 10161], [10162, 10169], [10170, 10181], [10181, 10182], [10183, 10186], [10187, 10193], [10194, 10197], [10198, 10205], [10206, 10208], [10209, 10213], [10214, 10218], [10218, 10219], [10220, 10227], [10228, 10239], [10240, 10247], [10247, 10248], [10249, 10259], [10260, 10266], [10267, 10272], [10273, 10280], [10281, 10283], [10284, 10288], [10289, 10296], [10296, 10297], [10298, 10300], [10301, 10305], [10306, 10313], [10314, 10315], [10316, 10321], [10322, 10324], [10325, 10335], [10336, 10342], [10343, 10350], [10351, 10355], [10356, 10357], [10358, 10365], [10366, 10373], [10373, 10374], [10375, 10387], [10388, 10391], [10392, 10397], [10397, 10398], [10399, 10403], [10404, 10408], [10409, 10411], [10412, 10415], [10416, 10417], [10417, 10420], [10421, 10426], [10426, 10427], [10428, 10431], [10432, 10441], [10442, 10450], [10451, 10453], [10454, 10456], [10457, 10465], [10466, 10473], [10474, 10481], [10482, 10489], [10489, 10490], [10491, 10494], [10495, 10498], [10499, 10504], [10505, 10508], [10509, 10514], [10515, 10517], [10518, 10521], [10522, 10530], [10531, 10540], [10541, 10548], [10549, 10551], [10552, 10558], [10559, 10565], [10565, 10566], [10567, 10570], [10571, 10576], [10577, 10582], [10583, 10593], [10594, 10596], [10597, 10598], [10599, 10605], [10606, 10612], [10613, 10620], [10620, 10621], [10622, 10630], [10631, 10633], [10634, 10637], [10638, 10646], [10646, 10647], [10648, 10655], [10656, 10665], [10666, 10668], [10669, 10672], [10673, 10679], [10680, 10682], [10683, 10688], [10689, 10696], [10696, 10697], [10698, 10706], [10707, 10710], [10711, 10719], [10720, 10723], [10724, 10726], [10727, 10733], [10734, 10741], [10742, 10750], [10750, 10751], [10752, 10755], [10756, 10763], [10764, 10767], [10768, 10774], [10775, 10788], [10788, 10789], [10793, 10796], [10797, 10805], [10806, 10808], [10809, 10812], [10813, 10818], [10819, 10829], [10830, 10832], [10833, 10840], [10841, 10843], [10844, 10847], [10848, 10855], [10856, 10861], [10861, 10862], [10863, 10870], [10871, 10882], [10883, 10888], [10889, 10893], [10894, 10898], [10899, 10901], [10902, 10906], [10907, 10909], [10910, 10915], [10916, 10924], [10924, 10925], [10927, 10934], [10935, 10942], [10943, 10950], [10951, 10954], [10955, 10963], [10964, 10971], [10972, 10979], [10980, 10984], [10985, 10993], [10993, 10994], [10995, 10999], [10999, 11000], [11001, 11008], [11008, 11009], [11010, 11016], [11018, 11020], [11021, 11025], [11026, 11033], [11033, 11034], [11035, 11037], [11038, 11042], [11043, 11050], [11051, 11052], [11053, 11059], [11060, 11066], [11067, 11069], [11070, 11075], [11076, 11086], [11086, 11087], [11088, 11093], [11094, 11101], [11102, 11115], [11116, 11126], [11127, 11131], [11132, 11135], [11136, 11140], [11141, 11143], [11144, 11150], [11151, 11154], [11155, 11163], [11164, 11167], [11168, 11175], [11176, 11179], [11180, 11182], [11182, 11183], [11184, 11186], [11187, 11191], [11192, 11196], [11197, 11200], [11201, 11204], [11205, 11208], [11209, 11217], [11218, 11225], [11226, 11229], [11230, 11237], [11238, 11242], [11242, 11243], [11244, 11250], [11251, 11259], [11260, 11265], [11265, 11266], [11267, 11269], [11270, 11274], [11275, 11280], [11281, 11284], [11285, 11292], [11293, 11295], [11296, 11299], [11300, 11307], [11308, 11309], [11309, 11311], [11312, 11314], [11315, 11318], [11319, 11321], [11322, 11325], [11326, 11334], [11335, 11342], [11342, 11344], [11345, 11347], [11348, 11352], [11353, 11356], [11357, 11364], [11364, 11365], [11366, 11368], [11369, 11373], [11374, 11376], [11377, 11380], [11381, 11391], [11392, 11397], [11397, 11398], [11399, 11402], [11403, 11404], [11404, 11409], [11410, 11417], [11418, 11421], [11422, 11424], [11425, 11432], [11433, 11438], [11439, 11445], [11446, 11450], [11451, 11452], [11452, 11453], [11454, 11457], [11458, 11462], [11463, 11467], [11468, 11475], [11476, 11479], [11480, 11484], [11485, 11492], [11493, 11495], [11496, 11500], [11501, 11511], [11512, 11516], [11516, 11517], [11518, 11520], [11521, 11524], [11525, 11528], [11529, 11532], [11533, 11540], [11541, 11548], [11549, 11551], [11552, 11555], [11556, 11562], [11562, 11563], [11564, 11567], [11568, 11574], [11575, 11583], [11584, 11588], [11589, 11591], [11592, 11599], [11600, 11604], [11605, 11609], [11610, 11614], [11615, 11616], [11617, 11623], [11624, 11634], [11635, 11637], [11638, 11648], [11648, 11649], [11650, 11652], [11653, 11657], [11658, 11663], [11663, 11664], [11665, 11667], [11668, 11671], [11672, 11678], [11679, 11683], [11684, 11687], [11688, 11694], [11695, 11697], [11698, 11704], [11704, 11705], [11706, 11708], [11709, 11711], [11712, 11716], [11717, 11721], [11722, 11724], [11725, 11732], [11733, 11741], [11742, 11747], [11748, 11751], [11752, 11758], [11759, 11767], [11767, 11768], [11770, 11777], [11778, 11786], [11787, 11789], [11790, 11794], [11795, 11798], [11799, 11802], [11803, 11806], [11807, 11812], [11813, 11815], [11816, 11823], [11824, 11826], [11827, 11830], [11831, 11839], [11840, 11847], [11847, 11848], [11849, 11852], [11853, 11864], [11865, 11867], [11868, 11880], [11881, 11884], [11885, 11899], [11899, 11900], [11901, 11903], [11904, 11916], [11917, 11919], [11920, 11934], [11936, 11939], [11939, 11940], [11941, 11946], [11947, 11950], [11951, 11954], [11955, 11959], [11959, 11960], [11961, 11963], [11964, 11968], [11969, 11974], [11975, 11979], [11980, 11982], [11983, 11986], [11987, 11997], [11997, 11998], [11999, 12001], [12002, 12006], [12007, 12010], [12011, 12013], [12014, 12015], [12015, 12023], [12024, 12029], [12030, 12034], [12035, 12045], [12046, 12047], [12048, 12050], [12050, 12052], [12053, 12056], [12057, 12059], [12060, 12064], [12065, 12068], [12069, 12071], [12072, 12075], [12076, 12081], [12082, 12086], [12087, 12089], [12090, 12102], [12102, 12103], [12104, 12106], [12107, 12111], [12112, 12114], [12115, 12118], [12119, 12129], [12130, 12135], [12135, 12136], [12137, 12140], [12141, 12143], [12144, 12151], [12152, 12154], [12155, 12158], [12159, 12163], [12164, 12166], [12167, 12179], [12179, 12180], [12181, 12186], [12187, 12189], [12190, 12192], [12193, 12196], [12197, 12205], [12205, 12206], [12206, 12209], [12209, 12210], [12211, 12214], [12215, 12217], [12218, 12221], [12222, 12227], [12228, 12232], [12233, 12234], [12234, 12239], [12240, 12243], [12244, 12250], [12250, 12251], [12252, 12254], [12255, 12258], [12259, 12262], [12263, 12266], [12267, 12276], [12277, 12283], [12284, 12286], [12287, 12290], [12291, 12299], [12299, 12300], [12301, 12303], [12304, 12307], [12308, 12311], [12312, 12316], [12317, 12320], [12321, 12329], [12330, 12339], [12340, 12345], [12346, 12348], [12349, 12359], [12360, 12365], [12365, 12366], [12367, 12369], [12370, 12374], [12375, 12383], [12384, 12387], [12388, 12394], [12395, 12397], [12398, 12401], [12402, 12411], [12412, 12419], [12419, 12420], [12421, 12423], [12424, 12426], [12427, 12431], [12432, 12440], [12441, 12448], [12449, 12452], [12453, 12460], [12461, 12462], [12463, 12466], [12467, 12469], [12470, 12475], [12475, 12476], [12479, 12481], [12482, 12487], [12488, 12492], [12493, 12494], [12495, 12498], [12499, 12503], [12504, 12508], [12509, 12511], [12512, 12515], [12516, 12520], [12521, 12523], [12524, 12536], [12537, 12543], [12544, 12546], [12547, 12550], [12551, 12553], [12554, 12555], [12556, 12560], [12561, 12565], [12566, 12569], [12570, 12574], [12575, 12581], [12581, 12582], [12583, 12585], [12586, 12590], [12591, 12596], [12596, 12597], [12598, 12600], [12601, 12605], [12606, 12608], [12609, 12612], [12613, 12618], [12619, 12631], [12632, 12635], [12636, 12642], [12643, 12646], [12647, 12651], [12652, 12656], [12657, 12659], [12660, 12666], [12667, 12669], [12670, 12673], [12674, 12683], [12684, 12690], [12690, 12691], [12692, 12694], [12694, 12695], [12696, 12698], [12699, 12704], [12705, 12710], [12710, 12711], [12712, 12714], [12715, 12719], [12720, 12723], [12724, 12730], [12731, 12733], [12734, 12737], [12738, 12740], [12741, 12745], [12746, 12750], [12750, 12751], [12752, 12754], [12755, 12759], [12760, 12763], [12764, 12766], [12767, 12770], [12771, 12782], [12783, 12787], [12788, 12791], [12792, 12794], [12795, 12799], [12800, 12805], [12805, 12806], [12807, 12809], [12810, 12814], [12815, 12817], [12818, 12822], [12823, 12826], [12827, 12832], [12833, 12839], [12840, 12842], [12843, 12846], [12846, 12847], [12848, 12853], [12854, 12860], [12861, 12864], [12865, 12871], [12872, 12877], [12878, 12880], [12881, 12893], [12893, 12894], [12896, 12898], [12899, 12901], [12902, 12906], [12906, 12907], [12908, 12911], [12912, 12914], [12915, 12923], [12923, 12924], [12925, 12927], [12928, 12932], [12933, 12936], [12937, 12948], [12949, 12952], [12953, 12959], [12960, 12962], [12963, 12966], [12967, 12971], [12971, 12972], [12973, 12976], [12977, 12983], [12984, 12986], [12987, 12993], [12994, 12997], [12998, 13001], [13002, 13004], [13005, 13007], [13008, 13014], [13015, 13018], [13019, 13028], [13029, 13031], [13032, 13035], [13036, 13040], [13041, 13042], [13042, 13049], [13050, 13052], [13053, 13060], [13061, 13066], [13066, 13068], [13069, 13071], [13072, 13076], [13077, 13080], [13081, 13085], [13086, 13089], [13090, 13096], [13097, 13105], [13106, 13110], [13111, 13117], [13117, 13118], [13119, 13122], [13123, 13127], [13128, 13132], [13133, 13139], [13139, 13140], [13141, 13143], [13144, 13147], [13148, 13156], [13157, 13164], [13165, 13168], [13169, 13176], [13177, 13182], [13183, 13186], [13187, 13191], [13192, 13195], [13196, 13198], [13199, 13202], [13203, 13215], [13216, 13220], [13220, 13221], [13224, 13232], [13233, 13240], [13241, 13244], [13245, 13252], [13253, 13258], [13259, 13271], [13272, 13274], [13275, 13281], [13282, 13286], [13287, 13290], [13291, 13295], [13295, 13296], [13297, 13304], [13305, 13306], [13307, 13312], [13313, 13315], [13316, 13320], [13321, 13327], [13328, 13332], [13333, 13336], [13337, 13347], [13348, 13357], [13358, 13364], [13364, 13365], [13366, 13370], [13371, 13376], [13376, 13377], [13378, 13381], [13382, 13386], [13387, 13389], [13390, 13394], [13395, 13399], [13399, 13400], [13400, 13401], [13402, 13404], [13405, 13413], [13414, 13418], [13419, 13426], [13427, 13430], [13431, 13437], [13438, 13441], [13442, 13444], [13445, 13448], [13449, 13453], [13454, 13457], [13458, 13462], [13463, 13470], [13471, 13474], [13475, 13478], [13479, 13483], [13484, 13489], [13490, 13493], [13494, 13497], [13498, 13501], [13502, 13511], [13512, 13518], [13519, 13525], [13526, 13530], [13531, 13535], [13536, 13540], [13541, 13546], [13547, 13551], [13552, 13556], [13556, 13557], [13560, 13563], [13564, 13568], [13569, 13577], [13578, 13581], [13582, 13590], [13591, 13601], [13602, 13603], [13604, 13606], [13607, 13610], [13611, 13619], [13620, 13622], [13623, 13625], [13626, 13629], [13630, 13636], [13637, 13638], [13638, 13640], [13640, 13641], [13642, 13647], [13647, 13648], [13649, 13651], [13652, 13655], [13656, 13662], [13663, 13666], [13666, 13667], [13668, 13679], [13680, 13683], [13684, 13691], [13692, 13695], [13696, 13699], [13700, 13705], [13706, 13712], [13713, 13715], [13716, 13720], [13720, 13721], [13721, 13722], [13725, 13728], [13729, 13732], [13733, 13735], [13736, 13739], [13740, 13749], [13750, 13757], [13758, 13760], [13761, 13793], [13793, 13794], [13795, 13797], [13798, 13801], [13802, 13805], [13806, 13808], [13809, 13816], [13817, 13821], [13821, 13822], [13823, 13829], [13829, 13830], [13831, 13835], [13836, 13841], [13842, 13852], [13853, 13860], [13860, 13861], [13863, 13868], [13869, 13872], [13872, 13873], [13874, 13877], [13878, 13882], [13883, 13895], [13896, 13905], [13906, 13909], [13910, 13915], [13916, 13923], [13923, 13924], [13926, 13936], [13937, 13946], [13947, 13950], [13951, 13956], [13957, 13961], [13962, 13970], [13971, 13974], [13975, 13986], [13987, 13989], [13990, 13997], [13998, 14009], [14010, 14012], [14013, 14022], [14023, 14025], [14026, 14028], [14029, 14031], [14032, 14033], [14034, 14039], [14040, 14044], [14045, 14048], [14049, 14052], [14053, 14059], [14060, 14062], [14063, 14070], [14071, 14073], [14074, 14078], [14079, 14085], [14085, 14086], [14087, 14090], [14091, 14094], [14095, 14099], [14100, 14108], [14109, 14114], [14114, 14115], [14116, 14120], [14121, 14123], [14124, 14129], [14130, 14139], [14139, 14140], [14141, 14144], [14145, 14148], [14149, 14152], [14153, 14157], [14158, 14161], [14162, 14166], [14167, 14169], [14170, 14178], [14179, 14185], [14186, 14189], [14190, 14197], [14198, 14206], [14207, 14212], [14213, 14215], [14216, 14217], [14218, 14225], [14226, 14231], [14231, 14232], [14233, 14235], [14236, 14239], [14240, 14244], [14245, 14254], [14255, 14260], [14261, 14265], [14266, 14269], [14270, 14276], [14277, 14282], [14283, 14286], [14287, 14294], [14295, 14302], [14303, 14320], [14321, 14329], [14329, 14330], [14331, 14336], [14337, 14340], [14341, 14347], [14348, 14352], [14353, 14359], [14360, 14365], [14366, 14370], [14371, 14375], [14376, 14387], [14388, 14390], [14391, 14396], [14397, 14399], [14400, 14407], [14408, 14412], [14413, 14420], [14421, 14425], [14426, 14435], [14435, 14436], [14437, 14442], [14443, 14450], [14451, 14462], [14463, 14466], [14467, 14469], [14470, 14474], [14475, 14484], [14484, 14485], [14486, 14492], [14493, 14497], [14498, 14500], [14501, 14505], [14506, 14509], [14510, 14516], [14517, 14524], [14525, 14528], [14529, 14534], [14535, 14539], [14540, 14549], [14550, 14555], [14556, 14562], [14563, 14572], [14573, 14577], [14578, 14583], [14584, 14589], [14590, 14593], [14594, 14601], [14601, 14602], [14604, 14609], [14610, 14614], [14615, 14618], [14619, 14623], [14624, 14626], [14627, 14633], [14634, 14637], [14638, 14645], [14646, 14657], [14658, 14661], [14662, 14668], [14669, 14671], [14672, 14678], [14679, 14682], [14683, 14693], [14694, 14699], [14700, 14704], [14705, 14708], [14709, 14713], [14714, 14721], [14721, 14722], [14723, 14732], [14733, 14742], [14743, 14748], [14749, 14755], [14756, 14759], [14760, 14768], [14769, 14776], [14777, 14785], [14786, 14791], [14792, 14796], [14797, 14801], [14802, 14810], [14811, 14819], [14820, 14828], [14829, 14830], [14830, 14834], [14835, 14846], [14846, 14847], [14848, 14857], [14858, 14866], [14866, 14867], [14868, 14870], [14871, 14882], [14882, 14883], [14884, 14886], [14887, 14895], [14896, 14902], [14903, 14908], [14908, 14909], [14910, 14917], [14918, 14921], [14922, 14929], [14929, 14930], [14931, 14934], [14935, 14939], [14940, 14947], [14948, 14960], [14961, 14963], [14964, 14968], [14969, 14972], [14973, 14980], [14981, 14988], [14989, 14997], [14998, 15001], [15002, 15013], [15013, 15014], [15015, 15017], [15018, 15021], [15022, 15025], [15026, 15033], [15034, 15041], [15042, 15049], [15050, 15061], [15062, 15067], [15068, 15071], [15072, 15077], [15078, 15083], [15083, 15084], [15085, 15089], [15090, 15091], [15092, 15096], [15097, 15101], [15101, 15102], [15103, 15106], [15107, 15111], [15112, 15119], [15120, 15127], [15128, 15139], [15140, 15143], [15144, 15153], [15154, 15155], [15156, 15160], [15161, 15162], [15163, 15171], [15172, 15177], [15178, 15180], [15181, 15188], [15188, 15189]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 15190, "lparker", "content", "human gold"]]}, {"type": "Software Packing (T1027.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1203, 1265], [1948, 2046], [2060, 2099], [2102, 2126], [2127, 2155], [4512, 4670], [4675, 4763], [5579, 5620], [6178, 6240], [7480, 7622], [7671, 7687], [7782, 7844], [8071, 8139], [8295, 8348], [8352, 8397], [8438, 8498]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1299, 1373], [4768, 4877]]}, {"type": "Embedded Payloads (T1027.009)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3404, 3463], [6306, 6383]]}, {"type": "Ingress Tool Transfer (T1105)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3467, 3555]]}, {"type": "Native API (T1106)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[7671, 7687], [7782, 7844], [8071, 8138], [8295, 8348], [8352, 8396]]}, {"type": "Stripped Payloads (T1027.008)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": []}, {"type": "Dynamic API Resolution (T1027.007)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[8658, 8757], [8604, 8634], [8776, 8881]]}], "version": 2}