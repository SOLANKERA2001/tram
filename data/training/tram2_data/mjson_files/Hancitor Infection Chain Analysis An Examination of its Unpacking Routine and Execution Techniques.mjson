{"signal": "title: Hancitor Infection Chain Analysis: An Examination of its Unpacking Routine and Execution Techniques\nurl: https://threatresearch.ext.hp.com/hancitors-return-analyzing-its-latest-infection-chain/\n\nIn this article, we describe how Hancitor compromises systems based on its infection chain observed in January and February 2021. We cover its unpacking routine, information gathering and command and control (C2) functions, and payload execution techniques.\nThe malware Hancitor\nHancitor (aka Chanitor) is a downloader which is used to gain initial access to a victim’s computer. Its main purpose is to download and execute a second stage malware payload from one of multiple encrypted URLs contained in the malware itself. This downloader was first seen in 2014 commonly deploying Pony and Vawtrak malware. Like many other malware families we saw Hancitor become active again in early 2021 following the festive period. The first Hancitor malicious spam wave of 2021 started on 12 January, where the malware was distributed as email Word document attachments. Since then, almost every workday we have seen Hancitor activity.\nWord Dropper used by Hancitor\nOn Tuesday 12 January, phishing emails with hyperlinks leading to Word documents reached users’ inboxes. The Word documents were droppers that install and execute the Hancitor downloader. When opened, the user sees a social engineering image telling them that they must click the “Enable editing” button to see the document’s contents.\n\nFigure 1 – Word document lure requesting the user to run the VBA macro.\nAnalyzing the attachment using oledump shows that not only VBA macros but also an Object Linking and Embedding (OLE) object are embedded in the document. To find out how the OLE object is used and how the malware infection happens, we analyzed the VBA macros using Word’s developer tools.\n\nFigure 2 – Output from oledump showing the VBA macro in the Word document.\nThe VBA code is distributed over several different modules inside the document and is executed by the Document.Open event. The OLE object is then saved with a “.tmp” file extension into one of the local temp folders under “C:\\Users\\[username]\\AppData\\Local\\Temp”. As the VBA code does not know where the file was stored, it then recursively searches through all local temp folders.\n\nFigure 3 – VBA macro which moves the tmp file to the templates folder as a DLL.\nOnce the “.tmp” file is found, it is moved and renamed to the Office templates folder (C:\\Users\\username\\AppData\\Roaming\\Microsoft\\Templates) as “W0rd.dll” and loaded using rundll32.exe. As a second argument, the macro passes the entry function “DllUnregisterServer” to rundll32.exe so that the execution starts correctly.\n\nFigure 4 – VBA macro which runs rundll32.exe to load the malware.\nPacked DLL analysis\nBriefly looking at the DLL characteristics shows that there are two unknown sections, which could be an indicator of packing being used to obfuscate the malware. Opening the DLL in a debugger and running through the program, focusing on what is happening with the suspicious sections confirms that there is indeed some sort of unpacking happening.\n\nFigure 5 – Sections of the PE file (“W0rd.dll”).\nAlthough the unpacking procedure happens in multiple steps, it can be described in two broad stages:\nDecryption Stage 1\nFirst, the malware allocates new memory which is used to copy the data from section “.rdata4” into it. The data, however, is not copied identically from the section to the new memory region because the bytes containing 0x21 are omitted. As soon as the copy operation is finished, the decryption process starts. The first four bytes at the beginning of the newly allocated memory indicate the length of the data that will be decrypted. The algorithm to decrypt the data is simple. It uses an XOR operation with the key and plaintext being incremented after each four-byte operation. To start, the key is initialized with 0xD508. A replication of this algorithm, written in Python, can be found in our GitHub repository.\n\nFigure 6 – Data view of the section containing the encrypted malware.\nLooking at the decrypted data and the behavior of the program, we can see that there are multiple areas containing different types of information. The names of Windows API functions are stored in the first 150 bytes. The area after this contains encrypted data. Finally, the executable code used to decrypt the encrypted data is located at the end of the section. Figure 7 shows the structure of the memory section.\n\nFigure 7 – Structure of the encrypted section.\nThe API function located at the beginning of the memory section are resolved using GetProcAddress. However, instead of being resolved within kernel32.dll, they are resolved in kernelbase.dll. This is important to note because when debugging Hancitor samples, breakpoints are most commonly set on functions from kernel32.dll and thus would not be triggered during execution. After resolving the functions, the second decryption stage occurs.\nDecryption Stage 2\nAs indicated, the decrypted memory structure contains executable code. As expected, the instruction pointer jumps directly to this section, which also contains the decryption algorithm for the second stage. Before the decryption starts, new memory is allocated and the encrypted data from stage 1 is copied to it. The decryption algorithm of stage 2 is generally the same, but uses 0x3E9 as the initialization key. The output of this decryption leads us to a PE file.\n\nFigure 8 – Overview of Hancitor’s decryption procedure.\nThe copy procedure is done section by section to bring the executable into the loaded form. This technique is called self-injection or PE overwrite. To make the new image runnable, several Windows API functions are resolved using GetProcAddress and directly patched into the memory of the loaded executable. These function addresses vary from installation to installation, so this patching cannot be done by a static unpacker. For all the other decryption procedures described, you can find a static unpacker script in our GitHub repository. To effectively run the new payload, a return to the correct DLL entry point is made. It is important to note that the AddressOfEntryPoint in the optional header does not match the exported functions DllRegisterServer or DllUnregisterServer and it is necessary to run one of the exported functions to start the malware. When using x32dbg to analyze the sample, simply patching the AddressOfEntryPoint to one of the exported functions makes the DLL runnable.\nRunning Hancitor Malware\nAs soon as the unpacked executable is running, the malware gathers information about the infected system. The following disassembly shows calls to multiple functions used to collect the information.\n\nFigure 9 – x86 disassembly of Hancitor’s information gathering function.\nFirst, the malware calls a function we named “getComputerInfo”. This function obtains the username, the computer name and the domain of infected system. The subsequent functions collect additional information such as the machine’s public IP address, domain trust information and the computer architecture. The malware identifies the computer’s public IP address by making a HTTP GET request to “hxxp://api.ipify[.]org”, a free public IP address API. All the collected information is then put together into a query string which is generated based on the computer architecture.\n\nFigure 10 – Query string containing system information before being sent to the C2.\nTo determine the command and control (C2) servers waiting for the data to be sent to, the malware calls a decryption function that uses the RC4 algorithm to get a list of potential C2 URLs.\n\nFigure 11 – URL and build decryption function.\nAfter successfully decrypting the C2 URLs, the data is sent there using a HTTP POST request adding the constructed query string as data. To increase the probability of reaching an active server, the malware iterates over all the decrypted C2 URLs and tries to reach all of them until one of them sends a response.\n\nFigure 12 – C2 communication function.\nWe assume that based on the received data the C2 server responds with either a simple string which can be decrypted to an active malware download server or with garbage data in the form of a simple string. Although the decoding algorithm of the C2 response looks quite complex, it is actually Base64 decoding, followed by an XOR operation using the key 0x7A. If the decryption leads to a valid URL, the malware initiates a download, which delivers an executable. To execute the binary, Hancitor uses one of the following techniques:\n\nCreate Process\nCreate Thread\nProcess Hollowing\nThread Execution Hijacking\n\nCreate Process\nIf the method “Create Process” is chosen, then the malware writes the retrieved executable to disk into the temp folder and executes it using rundll32.exe with “start” as the argument for the entry function.\nCreate Thread\nThe Create Thread method is as straightforward as Create Process. The malware simply allocates some memory, writes the malware into it and creates a new thread from it.\nProcess Hollowing\nIf the Process Hollowing method is used, a new svchost.exe process is created in a suspended state. The malware then allocates new memory in the newly-created process, writes the executable to it and executes it in a new thread.\n\nFigure 13 – Process creation function.\nThread Execution Hijacking\nThe final execution method Hancitor supports is Thread Execution Hijacking. This method is mostly the same as the above described Process Injection method. The only difference is that the malware replaces the thread context with the downloaded executable and resumes it afterwards.\nConclusion\nThis article should give a good overview of Hancitor’s capabilities and behavior as of February 2021.\nIndicators of Compromise (IOCs)\nA list of IOCs is also available in the HP Threat Research GitHub repository.\nHancitor Word documents:\n111a2dc96e082b86a79dd90ec307c977a21c7aee0ddb141d688a17bd65f3661d\n40c3eb22a02601cf70a4ae08eeaa5805144386bc13882e5f110c133b1d0ede8e\n678da85cecff2cdda8559281dfc8a89f87c44c6371cbda4de4bc9ea5cd2f5cf9\n772c897ffdfb824b31d70ea360224714ab9bb83659bd431897cc74dd2defc2f3\n080bade36015dd79925bab0975ac0f30f18424bdd1e7836d63c2dee350bdbd69\n22043734ed3f774db7a88297286f6ecd56336d755cc19f1bd54f2a2ac58982cd\n2ac3b573d70c40c5c0fafe4e5914c723f2322a1c9cd76d232447654604ff8b76\n385425e94ed8ac21d7888550743b7a2b89afbeb51341713adb6da89cd63b5aff\n3ffe9ef810d01e9f242558ba59e8c7483adb72e087132cb0fd1e55171c45690f\n51dd023b55be138ac7cfe7379a55c0a2a46c01cd3b3f96a151b0a27ed9e12485\n56f1795abf78f798a51b9224a5deb17aedd924629136832b526c93339f525e56\n6cd76e8f33a945b51d20b909495bbc613f78151dbea6c3a7a3a235bfd2167cdf\n7b013a271432cc9dea449ea9fcf727ed3caf7ce4cc6a9ba014b3dd880b5668dd\n8bcf45c2de07f322b8efb959e3cef38fb9983fdb8b932c527321fd3db5e444c8\n99b98b8c7033456ba7840ad99c65347a8026aee62bccbbac6d22ca4b0f5dfa1e\na1ec1a483f549af7e6f26ffe8b2c2ef6ac8c8f0d99349350c1df5eaa327f1ed3\nb1502cdbb5aeee57d0a5d38945c64855ba35c25d43a71bd72c3cf31665e5aa62\ncab2a47456a2c51504a79ff24116a4db3800b099ec50d0ebea20c2c77739276d\nd6755718c70e20345c85d18c5411b67c99da5b2f8740d63221038c1d35ccc0b8\ned3fa9e193f75e97c02c48f5c7377ff7a76b827082fdbfb9d6803e1f7bd633ca\nExtracted OLE Object (DLLs):\nCe2449b7f600b0317614419159e9364e1a76613ac0cb112c88be171638573049\n0941090d3eb785dbf88fbfafffad34c4ab42877b279129616a455347883e5738\n6caccc64a9db7cfce75076ad273d85d108f5b764fcbbb865fd27c91f86cccfad\nc5385df4db1e69b06cf36f4481365d1101679a5764d721e369ea1d5d4c4b6b2c\n288fdf9c64da0251107df7f1c3283f328279ad581710a9cf71f67e53b0b1684d\nc3e06473c4c3d801c962e6c90ccbcab3d532fb5a6649077ea09cd989edf45eaf\ncdcd5ee8b80d3a3863e0c55d4af5384522144011b071d00c9c71ae009305f130\n43690eaf47245d69f4bda877c562852e4a9715955c2160345cb6cc84b18ca907\n00b2312dd63960434d09962ad3e3e7203374421b687658bd3c02f194b172bfe3\n372da9447db4ca966a6a9fd45f12519637a562953a88b6d92fb26d3699c14799\n878319795a84ebfe5122d6fc21d27b4b94b3c28ad66679f841dec28ccc05e801\n82c9bc479ea92c1900422666792877e00256996ce2f931984115598ed2c26f23\nedabef17fce2aaca61dbd17a57baf780cd82a2b0189b0cf3c5a7a3ca07e94a44\nUnpacked Hancitor (without patched function addresses):\n1c55c9e30e3e2a4837afd80e6fc75518494af379835f4b2a7f0eaf815d697951\n419fda1fec9e44d7988ceeb9c5742a09198e6fa7f213c23b7c064e56cbd50b40\nC2 URLs:\nhxxp://requirend[.]com/8/forum.php\nhxxp://spabyasiande[.]ru/8/forum.php\nhxxp://conlymorect[.]ru/8/forum.php\nhxxp://fruciand[.]com/8/forum.php\nhxxp://forticheire[.]ru/8/forum.php\nhxxp://nentrivend[.]ru/8/forum.php\nhxxp://cloolyepervir[.]com/8/forum.php\nhxxp://areentthrices[.]ru/8/forum.php\nhxxp://syleclisizame[.]ru/8/forum.php\nBuild IDs:\n1301_dsf7823\n1101_jh372\n2001_6tc3ers\nMalware download URLs:\nhxxp://anabolicsteroidsbuy[.]info/nedfr.exe\nThe post Hancitor Infection Chain Analysis: An Examination of its Unpacking Routine and Execution Techniques appeared first on HP Wolf Security.\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 12928, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 15], [16, 25], [26, 31], [32, 40], [40, 41], [42, 44], [45, 56], [57, 59], [60, 63], [64, 73], [74, 81], [82, 85], [86, 95], [96, 106], [107, 110], [110, 111], [112, 117], [117, 120], [120, 134], [134, 135], [135, 138], [138, 139], [139, 141], [141, 142], [142, 145], [145, 146], [146, 199], [199, 200], [202, 204], [205, 209], [210, 217], [217, 218], [219, 221], [222, 230], [231, 234], [235, 243], [244, 255], [256, 263], [264, 269], [270, 272], [273, 276], [277, 286], [287, 292], [293, 301], [302, 304], [305, 312], [313, 316], [317, 325], [326, 330], [330, 331], [332, 334], [335, 340], [341, 344], [345, 354], [355, 362], [362, 363], [364, 375], [376, 385], [386, 389], [390, 397], [398, 401], [402, 409], [410, 411], [411, 413], [413, 414], [415, 424], [424, 425], [426, 429], [430, 437], [438, 447], [448, 458], [458, 459], [460, 463], [464, 471], [472, 480], [481, 489], [490, 491], [491, 494], [495, 503], [503, 504], [505, 507], [508, 509], [510, 520], [521, 526], [527, 529], [530, 534], [535, 537], [538, 542], [543, 550], [551, 557], [558, 560], [561, 562], [563, 571], [572, 580], [580, 581], [582, 585], [586, 590], [591, 598], [599, 601], [602, 604], [605, 613], [614, 617], [618, 625], [626, 627], [628, 634], [635, 640], [641, 648], [649, 656], [657, 661], [662, 665], [666, 668], [669, 677], [678, 687], [688, 692], [693, 702], [703, 705], [706, 709], [710, 717], [718, 724], [724, 725], [726, 730], [731, 741], [742, 745], [746, 751], [752, 756], [757, 759], [760, 764], [765, 773], [774, 783], [784, 788], [789, 792], [793, 800], [801, 808], [808, 809], [810, 814], [815, 819], [820, 825], [826, 833], [834, 842], [843, 845], [846, 849], [850, 858], [859, 865], [866, 872], [873, 878], [879, 881], [882, 887], [888, 892], [893, 902], [903, 906], [907, 914], [915, 921], [921, 922], [923, 926], [927, 932], [933, 941], [942, 951], [952, 956], [957, 961], [962, 964], [965, 969], [970, 977], [978, 980], [981, 983], [984, 991], [991, 992], [993, 998], [999, 1002], [1003, 1010], [1011, 1014], [1015, 1026], [1027, 1029], [1030, 1035], [1036, 1040], [1041, 1049], [1050, 1061], [1061, 1062], [1063, 1068], [1069, 1073], [1073, 1074], [1075, 1081], [1082, 1087], [1088, 1095], [1096, 1098], [1099, 1103], [1104, 1108], [1109, 1117], [1118, 1126], [1126, 1127], [1128, 1132], [1133, 1140], [1141, 1145], [1146, 1148], [1149, 1157], [1158, 1160], [1161, 1168], [1169, 1171], [1172, 1179], [1179, 1180], [1181, 1189], [1190, 1196], [1197, 1201], [1202, 1212], [1213, 1220], [1221, 1223], [1224, 1228], [1229, 1238], [1239, 1246], [1247, 1253], [1254, 1261], [1261, 1262], [1263, 1266], [1267, 1271], [1272, 1281], [1282, 1286], [1287, 1295], [1296, 1300], [1301, 1308], [1309, 1312], [1313, 1320], [1321, 1324], [1325, 1333], [1334, 1344], [1344, 1345], [1346, 1350], [1351, 1357], [1357, 1358], [1359, 1362], [1363, 1367], [1368, 1372], [1373, 1374], [1375, 1381], [1382, 1393], [1394, 1399], [1400, 1407], [1408, 1412], [1413, 1417], [1418, 1422], [1423, 1427], [1428, 1433], [1434, 1437], [1438, 1445], [1446, 1454], [1455, 1461], [1462, 1464], [1465, 1468], [1469, 1472], [1473, 1483], [1484, 1492], [1492, 1493], [1495, 1501], [1502, 1503], [1504, 1505], [1506, 1510], [1511, 1519], [1520, 1524], [1525, 1535], [1536, 1539], [1540, 1544], [1545, 1547], [1548, 1551], [1552, 1555], [1556, 1559], [1560, 1565], [1565, 1566], [1567, 1576], [1577, 1580], [1581, 1591], [1592, 1597], [1598, 1605], [1606, 1611], [1612, 1616], [1617, 1620], [1621, 1625], [1626, 1629], [1630, 1636], [1637, 1640], [1641, 1645], [1646, 1648], [1649, 1655], [1656, 1663], [1664, 1667], [1668, 1677], [1678, 1679], [1679, 1682], [1682, 1683], [1684, 1690], [1691, 1694], [1695, 1703], [1704, 1706], [1707, 1710], [1711, 1719], [1719, 1720], [1721, 1723], [1724, 1728], [1729, 1732], [1733, 1736], [1737, 1740], [1741, 1744], [1745, 1751], [1752, 1754], [1755, 1759], [1760, 1763], [1764, 1767], [1768, 1771], [1772, 1779], [1780, 1789], [1790, 1797], [1797, 1798], [1799, 1801], [1802, 1810], [1811, 1814], [1815, 1818], [1819, 1825], [1826, 1831], [1832, 1838], [1839, 1848], [1849, 1854], [1854, 1855], [1857, 1863], [1864, 1865], [1866, 1867], [1868, 1874], [1875, 1879], [1880, 1887], [1888, 1895], [1896, 1899], [1900, 1903], [1904, 1909], [1910, 1912], [1913, 1916], [1917, 1921], [1922, 1930], [1930, 1931], [1932, 1935], [1936, 1939], [1940, 1944], [1945, 1947], [1948, 1959], [1960, 1964], [1965, 1972], [1973, 1982], [1983, 1990], [1991, 1997], [1998, 2001], [2002, 2010], [2011, 2014], [2015, 2017], [2018, 2026], [2027, 2029], [2030, 2033], [2034, 2042], [2042, 2043], [2043, 2047], [2048, 2053], [2053, 2054], [2055, 2058], [2059, 2062], [2063, 2069], [2070, 2072], [2073, 2077], [2078, 2083], [2084, 2088], [2089, 2090], [2091, 2092], [2092, 2093], [2093, 2097], [2098, 2102], [2103, 2112], [2113, 2117], [2118, 2121], [2122, 2124], [2125, 2128], [2129, 2134], [2135, 2139], [2140, 2147], [2148, 2153], [2154, 2156], [2156, 2157], [2157, 2193], [2193, 2194], [2194, 2195], [2196, 2198], [2199, 2202], [2203, 2206], [2207, 2211], [2212, 2216], [2217, 2220], [2221, 2225], [2226, 2231], [2232, 2235], [2236, 2240], [2241, 2244], [2245, 2251], [2251, 2252], [2253, 2255], [2256, 2260], [2261, 2272], [2273, 2281], [2282, 2289], [2290, 2293], [2294, 2299], [2300, 2304], [2305, 2312], [2312, 2313], [2315, 2321], [2322, 2323], [2324, 2325], [2326, 2329], [2330, 2335], [2336, 2341], [2342, 2347], [2348, 2351], [2352, 2355], [2356, 2360], [2361, 2363], [2364, 2367], [2368, 2377], [2378, 2384], [2385, 2387], [2388, 2389], [2390, 2393], [2393, 2394], [2395, 2399], [2400, 2403], [2404, 2405], [2405, 2406], [2406, 2410], [2411, 2415], [2416, 2418], [2419, 2424], [2424, 2425], [2426, 2428], [2429, 2431], [2432, 2437], [2438, 2441], [2442, 2449], [2450, 2452], [2453, 2456], [2457, 2463], [2464, 2473], [2474, 2480], [2481, 2482], [2482, 2483], [2483, 2484], [2484, 2535], [2535, 2536], [2537, 2539], [2540, 2545], [2545, 2546], [2546, 2550], [2551, 2554], [2555, 2561], [2562, 2567], [2568, 2576], [2576, 2577], [2577, 2580], [2580, 2581], [2582, 2584], [2585, 2586], [2587, 2593], [2594, 2602], [2602, 2603], [2604, 2607], [2608, 2613], [2614, 2620], [2621, 2624], [2625, 2630], [2631, 2639], [2640, 2661], [2662, 2664], [2665, 2673], [2673, 2674], [2674, 2677], [2678, 2680], [2681, 2685], [2686, 2689], [2690, 2699], [2700, 2706], [2707, 2716], [2716, 2717], [2719, 2725], [2726, 2727], [2728, 2729], [2730, 2733], [2734, 2739], [2740, 2745], [2746, 2750], [2751, 2759], [2759, 2760], [2760, 2763], [2764, 2766], [2767, 2771], [2772, 2775], [2776, 2783], [2783, 2784], [2785, 2791], [2792, 2795], [2796, 2804], [2805, 2812], [2813, 2820], [2821, 2823], [2824, 2827], [2828, 2831], [2832, 2847], [2848, 2853], [2854, 2858], [2859, 2864], [2865, 2868], [2869, 2872], [2873, 2880], [2881, 2889], [2889, 2890], [2891, 2896], [2897, 2902], [2903, 2905], [2906, 2908], [2909, 2918], [2919, 2921], [2922, 2929], [2930, 2935], [2936, 2940], [2941, 2943], [2944, 2953], [2954, 2957], [2958, 2965], [2965, 2966], [2967, 2974], [2975, 2978], [2979, 2982], [2983, 2985], [2986, 2987], [2988, 2996], [2997, 3000], [3001, 3008], [3009, 3016], [3017, 3020], [3021, 3028], [3028, 3029], [3030, 3038], [3039, 3041], [3042, 3046], [3047, 3049], [3050, 3059], [3060, 3064], [3065, 3068], [3069, 3079], [3080, 3088], [3089, 3097], [3098, 3102], [3103, 3108], [3109, 3111], [3112, 3118], [3119, 3123], [3124, 3128], [3129, 3131], [3132, 3141], [3142, 3151], [3151, 3152], [3154, 3160], [3161, 3162], [3163, 3164], [3165, 3173], [3174, 3176], [3177, 3180], [3181, 3183], [3184, 3188], [3189, 3190], [3190, 3195], [3195, 3196], [3196, 3200], [3200, 3202], [3203, 3211], [3212, 3215], [3216, 3225], [3226, 3235], [3236, 3243], [3244, 3246], [3247, 3255], [3256, 3261], [3261, 3262], [3263, 3265], [3266, 3269], [3270, 3272], [3273, 3282], [3283, 3285], [3286, 3289], [3290, 3295], [3296, 3302], [3302, 3303], [3304, 3314], [3315, 3320], [3321, 3322], [3323, 3328], [3328, 3329], [3330, 3333], [3334, 3341], [3342, 3351], [3352, 3355], [3356, 3362], [3363, 3368], [3369, 3371], [3372, 3376], [3377, 3379], [3380, 3384], [3385, 3388], [3389, 3393], [3394, 3398], [3399, 3406], [3407, 3408], [3408, 3409], [3409, 3416], [3417, 3421], [3422, 3424], [3424, 3425], [3426, 3429], [3430, 3434], [3434, 3435], [3436, 3443], [3443, 3444], [3445, 3447], [3448, 3451], [3452, 3458], [3459, 3470], [3471, 3475], [3476, 3479], [3480, 3487], [3488, 3490], [3491, 3494], [3495, 3498], [3499, 3505], [3506, 3512], [3513, 3520], [3521, 3524], [3525, 3530], [3531, 3541], [3542, 3546], [3547, 3550], [3551, 3558], [3558, 3559], [3560, 3562], [3563, 3567], [3568, 3570], [3571, 3574], [3575, 3579], [3580, 3589], [3590, 3592], [3593, 3601], [3601, 3602], [3603, 3606], [3607, 3617], [3618, 3625], [3626, 3632], [3632, 3633], [3634, 3637], [3638, 3643], [3644, 3648], [3649, 3654], [3655, 3657], [3658, 3661], [3662, 3671], [3672, 3674], [3675, 3678], [3679, 3684], [3685, 3694], [3695, 3701], [3702, 3710], [3711, 3714], [3715, 3721], [3722, 3724], [3725, 3728], [3729, 3733], [3734, 3738], [3739, 3743], [3744, 3746], [3747, 3756], [3756, 3757], [3758, 3761], [3762, 3771], [3772, 3774], [3775, 3782], [3783, 3786], [3787, 3791], [3792, 3794], [3795, 3801], [3801, 3802], [3803, 3805], [3806, 3810], [3811, 3813], [3814, 3817], [3818, 3827], [3828, 3832], [3833, 3836], [3837, 3840], [3841, 3844], [3845, 3854], [3855, 3860], [3861, 3872], [3873, 3878], [3879, 3883], [3884, 3893], [3894, 3903], [3903, 3904], [3905, 3907], [3908, 3913], [3913, 3914], [3915, 3918], [3919, 3922], [3923, 3925], [3926, 3937], [3938, 3942], [3943, 3949], [3949, 3950], [3951, 3952], [3953, 3964], [3965, 3967], [3968, 3972], [3973, 3982], [3982, 3983], [3984, 3991], [3992, 3994], [3995, 4001], [4001, 4002], [4003, 4006], [4007, 4009], [4010, 4015], [4016, 4018], [4019, 4022], [4023, 4029], [4030, 4040], [4040, 4041], [4043, 4049], [4050, 4051], [4052, 4053], [4054, 4058], [4059, 4063], [4064, 4066], [4067, 4070], [4071, 4078], [4079, 4089], [4090, 4093], [4094, 4103], [4104, 4111], [4111, 4112], [4113, 4120], [4121, 4123], [4124, 4127], [4128, 4137], [4138, 4142], [4143, 4146], [4147, 4150], [4151, 4159], [4160, 4162], [4163, 4166], [4167, 4174], [4174, 4175], [4176, 4178], [4179, 4182], [4183, 4186], [4187, 4191], [4192, 4197], [4198, 4201], [4202, 4210], [4211, 4216], [4217, 4227], [4228, 4237], [4238, 4243], [4244, 4246], [4247, 4258], [4258, 4259], [4260, 4263], [4264, 4269], [4270, 4272], [4273, 4280], [4281, 4284], [4285, 4294], [4295, 4298], [4299, 4305], [4306, 4308], [4309, 4312], [4313, 4318], [4319, 4322], [4323, 4328], [4328, 4329], [4330, 4333], [4334, 4338], [4339, 4344], [4345, 4349], [4350, 4358], [4359, 4368], [4369, 4373], [4373, 4374], [4375, 4382], [4382, 4383], [4384, 4387], [4388, 4398], [4399, 4403], [4404, 4408], [4409, 4411], [4412, 4419], [4420, 4423], [4424, 4433], [4434, 4438], [4439, 4441], [4442, 4449], [4450, 4452], [4453, 4456], [4457, 4460], [4461, 4463], [4464, 4467], [4468, 4475], [4475, 4476], [4477, 4483], [4484, 4485], [4486, 4491], [4492, 4495], [4496, 4505], [4506, 4508], [4509, 4512], [4513, 4519], [4520, 4527], [4527, 4528], [4530, 4536], [4537, 4538], [4539, 4540], [4541, 4550], [4551, 4553], [4554, 4557], [4558, 4567], [4568, 4575], [4575, 4576], [4577, 4580], [4581, 4584], [4585, 4593], [4594, 4601], [4602, 4604], [4605, 4608], [4609, 4618], [4619, 4621], [4622, 4625], [4626, 4632], [4633, 4640], [4641, 4644], [4645, 4653], [4654, 4659], [4660, 4674], [4674, 4675], [4676, 4683], [4683, 4684], [4685, 4692], [4693, 4695], [4696, 4701], [4702, 4710], [4711, 4717], [4718, 4726], [4726, 4727], [4727, 4730], [4730, 4731], [4732, 4736], [4737, 4740], [4741, 4749], [4750, 4752], [4753, 4763], [4763, 4764], [4764, 4767], [4767, 4768], [4769, 4773], [4774, 4776], [4777, 4786], [4787, 4789], [4790, 4794], [4795, 4802], [4803, 4807], [4808, 4817], [4818, 4826], [4827, 4834], [4834, 4835], [4836, 4847], [4848, 4851], [4852, 4856], [4857, 4865], [4866, 4869], [4870, 4872], [4873, 4882], [4883, 4887], [4888, 4896], [4896, 4897], [4897, 4900], [4901, 4904], [4905, 4909], [4910, 4915], [4916, 4919], [4920, 4922], [4923, 4932], [4933, 4939], [4940, 4949], [4949, 4950], [4951, 4956], [4957, 4966], [4967, 4970], [4971, 4980], [4980, 4981], [4982, 4985], [4986, 4992], [4993, 5003], [5004, 5009], [5010, 5016], [5016, 5017], [5018, 5028], [5029, 5034], [5035, 5036], [5037, 5039], [5040, 5049], [5049, 5050], [5051, 5054], [5055, 5064], [5065, 5071], [5072, 5081], [5082, 5090], [5091, 5101], [5102, 5106], [5106, 5107], [5108, 5110], [5111, 5119], [5119, 5120], [5121, 5124], [5125, 5136], [5137, 5144], [5145, 5150], [5151, 5159], [5160, 5162], [5163, 5167], [5168, 5175], [5175, 5176], [5177, 5182], [5183, 5187], [5188, 5196], [5197, 5200], [5201, 5211], [5212, 5221], [5222, 5225], [5226, 5229], [5230, 5236], [5237, 5242], [5242, 5243], [5244, 5250], [5251, 5254], [5255, 5265], [5266, 5272], [5272, 5273], [5274, 5277], [5278, 5284], [5285, 5287], [5288, 5297], [5298, 5301], [5302, 5305], [5306, 5315], [5316, 5320], [5321, 5325], [5326, 5331], [5332, 5333], [5334, 5336], [5337, 5343], [5344, 5346], [5347, 5349], [5349, 5350], [5351, 5354], [5355, 5365], [5366, 5375], [5376, 5378], [5379, 5384], [5385, 5386], [5387, 5389], [5390, 5399], [5400, 5403], [5404, 5408], [5408, 5409], [5410, 5413], [5414, 5418], [5419, 5424], [5425, 5427], [5428, 5431], [5432, 5446], [5447, 5450], [5450, 5451], [5452, 5455], [5456, 5462], [5463, 5465], [5466, 5470], [5471, 5481], [5482, 5487], [5488, 5490], [5491, 5493], [5494, 5495], [5496, 5498], [5499, 5503], [5503, 5504], [5506, 5512], [5513, 5514], [5515, 5516], [5517, 5525], [5526, 5528], [5529, 5539], [5540, 5550], [5551, 5560], [5560, 5561], [5562, 5565], [5566, 5570], [5571, 5580], [5581, 5583], [5584, 5588], [5589, 5596], [5597, 5599], [5600, 5607], [5608, 5610], [5611, 5616], [5617, 5620], [5621, 5631], [5632, 5636], [5637, 5640], [5641, 5647], [5648, 5652], [5652, 5653], [5654, 5658], [5659, 5668], [5669, 5671], [5672, 5678], [5679, 5693], [5694, 5696], [5697, 5699], [5700, 5709], [5709, 5710], [5711, 5713], [5714, 5718], [5719, 5722], [5723, 5726], [5727, 5732], [5733, 5741], [5741, 5742], [5743, 5750], [5751, 5758], [5759, 5762], [5763, 5772], [5773, 5776], [5777, 5785], [5786, 5791], [5792, 5806], [5807, 5810], [5811, 5819], [5820, 5827], [5828, 5832], [5833, 5836], [5837, 5843], [5844, 5846], [5847, 5850], [5851, 5857], [5858, 5868], [5868, 5869], [5870, 5875], [5876, 5884], [5885, 5894], [5895, 5899], [5900, 5904], [5905, 5917], [5918, 5920], [5921, 5933], [5933, 5934], [5935, 5937], [5938, 5942], [5943, 5951], [5952, 5958], [5959, 5961], [5962, 5966], [5967, 5969], [5970, 5971], [5972, 5978], [5979, 5987], [5987, 5988], [5989, 5992], [5993, 5996], [5997, 6000], [6001, 6006], [6007, 6017], [6018, 6028], [6029, 6038], [6038, 6039], [6040, 6043], [6044, 6047], [6048, 6052], [6053, 6054], [6055, 6061], [6062, 6070], [6071, 6077], [6078, 6080], [6081, 6084], [6085, 6091], [6092, 6102], [6102, 6103], [6104, 6106], [6107, 6118], [6119, 6122], [6123, 6126], [6127, 6130], [6131, 6138], [6138, 6139], [6140, 6141], [6142, 6148], [6149, 6151], [6152, 6155], [6156, 6163], [6164, 6167], [6168, 6173], [6174, 6179], [6180, 6182], [6183, 6187], [6187, 6188], [6189, 6191], [6192, 6194], [6195, 6204], [6205, 6207], [6208, 6212], [6213, 6217], [6218, 6221], [6222, 6241], [6242, 6244], [6245, 6248], [6249, 6257], [6258, 6264], [6265, 6269], [6270, 6273], [6274, 6279], [6280, 6283], [6284, 6292], [6293, 6302], [6303, 6320], [6321, 6323], [6324, 6343], [6344, 6347], [6348, 6350], [6351, 6353], [6354, 6363], [6364, 6366], [6367, 6370], [6371, 6374], [6375, 6377], [6378, 6381], [6382, 6390], [6391, 6400], [6401, 6403], [6404, 6409], [6410, 6413], [6414, 6421], [6421, 6422], [6423, 6427], [6428, 6433], [6434, 6440], [6441, 6443], [6444, 6451], [6452, 6455], [6456, 6462], [6462, 6463], [6464, 6470], [6471, 6479], [6480, 6483], [6484, 6503], [6504, 6506], [6507, 6510], [6511, 6513], [6514, 6517], [6518, 6526], [6527, 6536], [6537, 6542], [6543, 6546], [6547, 6550], [6551, 6559], [6559, 6560], [6561, 6568], [6569, 6577], [6578, 6585], [6586, 6588], [6589, 6593], [6594, 6596], [6597, 6600], [6601, 6609], [6610, 6620], [6621, 6623], [6624, 6631], [6631, 6632], [6633, 6636], [6637, 6644], [6645, 6652], [6653, 6664], [6665, 6670], [6671, 6674], [6675, 6683], [6684, 6690], [6690, 6691], [6692, 6695], [6696, 6705], [6706, 6717], [6718, 6723], [6724, 6729], [6730, 6732], [6733, 6741], [6742, 6751], [6752, 6756], [6757, 6759], [6760, 6767], [6768, 6771], [6772, 6783], [6783, 6784], [6786, 6792], [6793, 6794], [6795, 6796], [6797, 6800], [6801, 6812], [6813, 6815], [6816, 6826], [6827, 6838], [6839, 6848], [6849, 6857], [6857, 6858], [6859, 6864], [6864, 6865], [6866, 6869], [6870, 6877], [6878, 6883], [6884, 6885], [6886, 6894], [6895, 6897], [6898, 6903], [6904, 6921], [6921, 6922], [6923, 6927], [6928, 6936], [6937, 6944], [6945, 6948], [6949, 6957], [6957, 6958], [6959, 6962], [6963, 6971], [6972, 6976], [6977, 6980], [6981, 6984], [6985, 6991], [6992, 6994], [6995, 7003], [7004, 7010], [7010, 7011], [7012, 7015], [7016, 7026], [7027, 7036], [7037, 7044], [7045, 7055], [7056, 7067], [7068, 7072], [7073, 7075], [7076, 7079], [7080, 7089], [7090, 7096], [7097, 7099], [7100, 7107], [7107, 7108], [7109, 7115], [7116, 7121], [7122, 7133], [7134, 7137], [7138, 7141], [7142, 7150], [7151, 7163], [7163, 7164], [7165, 7168], [7169, 7176], [7177, 7187], [7188, 7191], [7192, 7202], [7203, 7209], [7210, 7212], [7213, 7220], [7221, 7223], [7224, 7230], [7231, 7232], [7233, 7237], [7238, 7241], [7242, 7249], [7250, 7252], [7253, 7258], [7258, 7261], [7261, 7264], [7264, 7265], [7265, 7271], [7271, 7273], [7273, 7277], [7277, 7278], [7279, 7280], [7281, 7285], [7286, 7292], [7293, 7295], [7296, 7303], [7304, 7307], [7307, 7308], [7309, 7312], [7313, 7316], [7317, 7326], [7327, 7338], [7339, 7341], [7342, 7346], [7347, 7350], [7351, 7359], [7360, 7364], [7365, 7366], [7367, 7372], [7373, 7379], [7380, 7385], [7386, 7388], [7389, 7398], [7399, 7404], [7405, 7407], [7408, 7411], [7412, 7420], [7421, 7433], [7433, 7434], [7436, 7442], [7443, 7445], [7446, 7447], [7448, 7453], [7454, 7460], [7461, 7471], [7472, 7478], [7479, 7490], [7491, 7497], [7498, 7503], [7504, 7508], [7509, 7511], [7512, 7515], [7516, 7518], [7518, 7519], [7520, 7522], [7523, 7532], [7533, 7536], [7537, 7544], [7545, 7548], [7549, 7556], [7557, 7558], [7558, 7560], [7560, 7561], [7562, 7569], [7570, 7577], [7578, 7581], [7582, 7585], [7586, 7590], [7591, 7593], [7594, 7596], [7597, 7601], [7602, 7604], [7604, 7605], [7606, 7609], [7610, 7617], [7618, 7623], [7624, 7625], [7626, 7636], [7637, 7645], [7646, 7650], [7651, 7655], [7656, 7659], [7660, 7663], [7664, 7673], [7674, 7676], [7677, 7680], [7681, 7682], [7683, 7687], [7688, 7690], [7691, 7700], [7701, 7703], [7704, 7708], [7708, 7709], [7711, 7717], [7718, 7720], [7721, 7722], [7723, 7726], [7727, 7730], [7731, 7736], [7737, 7747], [7748, 7756], [7756, 7757], [7758, 7763], [7764, 7776], [7777, 7787], [7788, 7791], [7792, 7794], [7795, 7799], [7799, 7800], [7801, 7804], [7805, 7809], [7810, 7812], [7813, 7817], [7818, 7823], [7824, 7829], [7830, 7831], [7832, 7836], [7837, 7841], [7842, 7849], [7850, 7856], [7857, 7860], [7861, 7872], [7873, 7878], [7879, 7885], [7886, 7888], [7889, 7893], [7893, 7894], [7895, 7897], [7898, 7906], [7907, 7910], [7911, 7922], [7923, 7925], [7926, 7934], [7935, 7937], [7938, 7944], [7945, 7951], [7951, 7952], [7953, 7956], [7957, 7964], [7965, 7973], [7974, 7978], [7979, 7982], [7983, 7986], [7987, 7996], [7997, 7999], [8000, 8004], [8005, 8008], [8009, 8014], [8015, 8017], [8018, 8023], [8024, 8027], [8028, 8030], [8031, 8035], [8036, 8041], [8042, 8045], [8046, 8048], [8049, 8053], [8054, 8059], [8060, 8061], [8062, 8070], [8070, 8071], [8073, 8079], [8080, 8082], [8083, 8084], [8085, 8087], [8088, 8101], [8102, 8110], [8110, 8111], [8112, 8114], [8115, 8121], [8122, 8126], [8127, 8132], [8133, 8135], [8136, 8139], [8140, 8148], [8149, 8153], [8154, 8157], [8158, 8160], [8161, 8167], [8168, 8176], [8177, 8181], [8182, 8188], [8189, 8190], [8191, 8197], [8198, 8204], [8205, 8210], [8211, 8214], [8215, 8217], [8218, 8227], [8228, 8230], [8231, 8233], [8234, 8240], [8241, 8248], [8249, 8257], [8258, 8264], [8265, 8267], [8268, 8272], [8273, 8280], [8281, 8285], [8286, 8288], [8289, 8292], [8293, 8297], [8298, 8300], [8301, 8302], [8303, 8309], [8310, 8316], [8316, 8317], [8318, 8326], [8327, 8330], [8331, 8339], [8340, 8349], [8350, 8352], [8353, 8356], [8357, 8359], [8360, 8368], [8369, 8374], [8375, 8380], [8381, 8388], [8388, 8389], [8390, 8392], [8393, 8395], [8396, 8404], [8405, 8411], [8412, 8420], [8420, 8421], [8422, 8430], [8431, 8433], [8434, 8436], [8437, 8440], [8441, 8450], [8451, 8456], [8457, 8460], [8461, 8464], [8465, 8469], [8469, 8470], [8471, 8473], [8474, 8477], [8478, 8488], [8489, 8494], [8495, 8497], [8498, 8499], [8500, 8505], [8506, 8509], [8509, 8510], [8511, 8514], [8515, 8522], [8523, 8532], [8533, 8534], [8535, 8543], [8543, 8544], [8545, 8550], [8551, 8559], [8560, 8562], [8563, 8573], [8573, 8574], [8575, 8577], [8578, 8585], [8586, 8589], [8590, 8596], [8596, 8597], [8598, 8606], [8607, 8611], [8612, 8615], [8616, 8618], [8619, 8622], [8623, 8632], [8633, 8643], [8643, 8644], [8646, 8652], [8653, 8660], [8661, 8667], [8668, 8674], [8675, 8682], [8683, 8692], [8693, 8699], [8700, 8709], [8710, 8719], [8721, 8727], [8728, 8735], [8736, 8738], [8739, 8742], [8743, 8749], [8750, 8757], [8758, 8766], [8767, 8769], [8770, 8776], [8776, 8777], [8778, 8782], [8783, 8786], [8787, 8794], [8795, 8801], [8802, 8805], [8806, 8815], [8816, 8826], [8827, 8829], [8830, 8834], [8835, 8839], [8840, 8843], [8844, 8848], [8849, 8855], [8856, 8859], [8860, 8868], [8869, 8871], [8872, 8877], [8878, 8886], [8886, 8887], [8887, 8890], [8891, 8895], [8896, 8903], [8904, 8906], [8907, 8910], [8911, 8919], [8920, 8923], [8924, 8927], [8928, 8933], [8934, 8942], [8942, 8943], [8944, 8950], [8951, 8957], [8958, 8961], [8962, 8968], [8969, 8975], [8976, 8982], [8983, 8985], [8986, 8988], [8989, 9004], [9005, 9007], [9008, 9014], [9015, 9022], [9022, 9023], [9024, 9027], [9028, 9035], [9036, 9042], [9043, 9052], [9053, 9057], [9058, 9064], [9064, 9065], [9066, 9072], [9073, 9076], [9077, 9084], [9085, 9089], [9090, 9092], [9093, 9096], [9097, 9104], [9105, 9106], [9107, 9110], [9111, 9117], [9118, 9122], [9123, 9125], [9125, 9126], [9127, 9134], [9135, 9144], [9145, 9147], [9148, 9151], [9152, 9159], [9160, 9169], [9170, 9176], [9177, 9179], [9180, 9184], [9184, 9185], [9186, 9187], [9188, 9191], [9192, 9199], [9199, 9200], [9200, 9203], [9204, 9211], [9212, 9214], [9215, 9222], [9223, 9225], [9226, 9227], [9228, 9237], [9238, 9243], [9243, 9244], [9245, 9248], [9249, 9256], [9257, 9261], [9262, 9271], [9272, 9275], [9276, 9282], [9283, 9285], [9286, 9289], [9290, 9303], [9304, 9311], [9311, 9312], [9313, 9319], [9320, 9323], [9324, 9334], [9335, 9337], [9338, 9340], [9341, 9344], [9345, 9353], [9354, 9356], [9357, 9359], [9360, 9361], [9362, 9365], [9366, 9372], [9372, 9373], [9375, 9381], [9382, 9384], [9385, 9386], [9387, 9394], [9395, 9403], [9404, 9412], [9412, 9413], [9414, 9420], [9421, 9430], [9431, 9440], [9441, 9444], [9445, 9450], [9451, 9460], [9461, 9467], [9468, 9476], [9477, 9485], [9486, 9488], [9489, 9495], [9496, 9505], [9506, 9515], [9515, 9516], [9517, 9521], [9522, 9528], [9529, 9531], [9532, 9538], [9539, 9542], [9543, 9547], [9548, 9550], [9551, 9554], [9555, 9560], [9561, 9570], [9571, 9578], [9579, 9588], [9589, 9595], [9595, 9596], [9597, 9600], [9601, 9605], [9606, 9616], [9617, 9619], [9620, 9624], [9625, 9628], [9629, 9636], [9637, 9645], [9646, 9649], [9650, 9656], [9657, 9664], [9665, 9669], [9670, 9673], [9674, 9684], [9685, 9695], [9696, 9699], [9700, 9707], [9708, 9710], [9711, 9721], [9721, 9722], [9723, 9733], [9734, 9738], [9739, 9746], [9747, 9753], [9754, 9758], [9759, 9760], [9761, 9765], [9766, 9774], [9775, 9777], [9778, 9788], [9789, 9801], [9802, 9805], [9806, 9814], [9815, 9817], [9818, 9820], [9821, 9829], [9830, 9834], [9834, 9835], [9836, 9846], [9847, 9849], [9850, 9860], [9861, 9862], [9862, 9866], [9866, 9867], [9868, 9869], [9870, 9874], [9875, 9877], [9878, 9882], [9883, 9885], [9886, 9890], [9891, 9900], [9901, 9903], [9904, 9907], [9908, 9910], [9911, 9917], [9918, 9926], [9927, 9933], [9934, 9944], [9944, 9945], [9946, 9954], [9955, 9959], [9960, 9969], [9969, 9970], [9971, 10035], [10036, 10100], [10101, 10165], [10166, 10230], [10231, 10295], [10296, 10360], [10361, 10425], [10426, 10490], [10491, 10555], [10556, 10620], [10621, 10685], [10686, 10750], [10751, 10815], [10816, 10880], [10881, 10945], [10946, 11010], [11011, 11075], [11076, 11140], [11141, 11205], [11206, 11270], [11271, 11280], [11281, 11284], [11285, 11291], [11292, 11293], [11293, 11297], [11297, 11299], [11300, 11364], [11365, 11429], [11430, 11494], [11495, 11559], [11560, 11624], [11625, 11689], [11690, 11754], [11755, 11819], [11820, 11884], [11885, 11949], [11950, 12014], [12015, 12079], [12080, 12144], [12145, 12153], [12154, 12162], [12163, 12164], [12164, 12171], [12172, 12179], [12180, 12188], [12189, 12198], [12198, 12200], [12201, 12265], [12266, 12330], [12331, 12333], [12334, 12338], [12338, 12339], [12340, 12344], [12344, 12347], [12347, 12357], [12357, 12359], [12359, 12362], [12362, 12363], [12363, 12364], [12364, 12365], [12365, 12370], [12370, 12371], [12371, 12374], [12375, 12379], [12379, 12382], [12382, 12395], [12395, 12397], [12397, 12399], [12399, 12400], [12400, 12401], [12401, 12402], [12402, 12407], [12407, 12408], [12408, 12411], [12412, 12416], [12416, 12419], [12419, 12431], [12431, 12433], [12433, 12435], [12435, 12436], [12436, 12437], [12437, 12438], [12438, 12443], [12443, 12444], [12444, 12447], [12448, 12452], [12452, 12455], [12455, 12464], [12464, 12466], [12466, 12469], [12469, 12470], [12470, 12471], [12471, 12472], [12472, 12477], [12477, 12478], [12478, 12481], [12482, 12486], [12486, 12489], [12489, 12501], [12501, 12503], [12503, 12505], [12505, 12506], [12506, 12507], [12507, 12508], [12508, 12513], [12513, 12514], [12514, 12517], [12518, 12522], [12522, 12525], [12525, 12536], [12536, 12538], [12538, 12540], [12540, 12541], [12541, 12542], [12542, 12543], [12543, 12548], [12548, 12549], [12549, 12552], [12553, 12557], [12557, 12560], [12560, 12574], [12574, 12576], [12576, 12579], [12579, 12580], [12580, 12581], [12581, 12582], [12582, 12587], [12587, 12588], [12588, 12591], [12592, 12596], [12596, 12599], [12599, 12613], [12613, 12615], [12615, 12617], [12617, 12618], [12618, 12619], [12619, 12620], [12620, 12625], [12625, 12626], [12626, 12629], [12630, 12634], [12634, 12637], [12637, 12651], [12651, 12653], [12653, 12655], [12655, 12656], [12656, 12657], [12657, 12658], [12658, 12663], [12663, 12664], [12664, 12667], [12668, 12673], [12674, 12677], [12677, 12678], [12679, 12691], [12692, 12702], [12703, 12715], [12716, 12723], [12724, 12732], [12733, 12737], [12737, 12738], [12739, 12743], [12743, 12746], [12746, 12766], [12766, 12768], [12768, 12772], [12772, 12773], [12773, 12778], [12778, 12779], [12779, 12782], [12783, 12786], [12787, 12791], [12792, 12800], [12801, 12810], [12811, 12816], [12817, 12825], [12825, 12826], [12827, 12829], [12830, 12841], [12842, 12844], [12845, 12848], [12849, 12858], [12859, 12866], [12867, 12870], [12871, 12880], [12881, 12891], [12892, 12900], [12901, 12906], [12907, 12909], [12910, 12912], [12913, 12917], [12918, 12926], [12926, 12927]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 12928, "jlasky", "content", "human gold"]]}, {"type": "Malicious File (T1204.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1506, 1566], [1346, 1493]]}, {"type": "Software Packing (T1027.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2785, 2804], [2922, 2966], [3103, 3152], [3203, 3261], [6586, 6631], [42, 81], [341, 362]]}, {"type": "Match Legitimate Name or Location (T1036.005)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2395, 2480]]}, {"type": "Rundll32 (T1218.011)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2555, 2581], [2582, 2717], [2746, 2784], [8860, 8890]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4113, 4142], [3603, 3632], [3729, 3756], [3758, 3802], [4982, 5016], [5051, 5081], [5244, 5272], [5188, 5242], [5452, 5481], [5351, 5375], [4384, 4438], [7758, 7799], [7979, 8004], [7606, 7645], [8318, 8470], [7737, 7757], [8211, 8264]]}, {"type": "Native API (T1106)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4577, 4674], [4273, 4294], [5751, 5772]]}, {"type": "Dynamic API Resolution (T1027.007)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4951, 4980], [4260, 4328], [5743, 5806]]}, {"type": "Embedded Payloads (T1027.009)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[5065, 5107], [4054, 4112]]}, {"type": "Obfuscated Files or Information (T1027)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4330, 4374], [4541, 4576], [678, 725], [5302, 5320]]}, {"type": "Portable Executable Injection (T1055.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[5654, 5709]]}, {"type": "System Owner/User Discovery (T1033)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6923, 6958]]}, {"type": "System Information Discovery (T1082)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6959, 7011], [7138, 7163], [7389, 7434]]}, {"type": "System Network Configuration Discovery (T1016)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[7012, 7107]]}, {"type": "Symmetric Cryptography (T1573.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[7520, 7673]]}, {"type": "Web Protocols (T1071.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[7758, 7893], [7224, 7249]]}, {"type": "Ingress Tool Transfer (T1105)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[8511, 8573], [582, 656]]}, {"type": "Thread Execution Hijacking (T1055.003)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[8693, 8719], [9414, 9440], [9441, 9516], [9597, 9722]]}, {"type": "Process Hollowing (T1055.012)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[8675, 8692], [9127, 9144], [9145, 9244], [9245, 9373]]}, {"type": "Process Injection (T1055)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[9571, 9595]]}, {"type": "Spearphishing Attachment (T1566.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[999, 1061]]}, {"type": "File and Directory Discovery (T1083)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2256, 2313]]}, {"type": "Exfiltration Over C2 Channel (T1041)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[7448, 7519]]}], "version": 2}