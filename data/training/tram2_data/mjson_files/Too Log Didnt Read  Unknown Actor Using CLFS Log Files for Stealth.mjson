{"signal": "title: Too Log; Didn't Read — Unknown Actor Using CLFS Log Files for Stealth\nurl: http://internal-www.fireeye.com/blog/threat-research/2021/09/unknown-actor-using-clfs-log-files-for-stealth.html\n\nThe Mandiant Advanced Practices team recently discovered a new\nmalware family we have named PRIVATELOG and its installer, STASHLOG.\nIn this post, we will share a novel and especially interesting\ntechnique the samples use to hide data, along with detailed analysis\nof both files that was performed with the support of FLARE analysts.\nWe will also share sample detection rules, and hunting recommendations\nto find similar activity in your environment.\nMandiant has yet to observe PRIVATELOG or STASHLOG in any customer\nenvironments or to recover any second-stage payloads launched by\nPRIVATELOG. This may indicate malware that is still in development,\nthe work of a researcher, or targeted activity.\nCLFS and Transaction Files\nPRIVATELOG and STASHLOG rely on the Common Log File System (CLFS) to\nhide a second stage payload in registry transaction files.\nCLFS is a log framework that was introduced by Microsoft in Windows\nVista and Windows Server 2003 R2 for high performance. It provides\napplications with API functions—available in clfsw32.dll—to create, store and read log data.\nBecause the file format is not widely used or documented, there are\nno available tools that can parse CLFS log files. This provides\nattackers with an opportunity to hide their data as log records in a\nconvenient way, because these are accessible through API functions.\nThis is similar in nature to malware which may rely, for example, on\nthe Windows Registry or NTFS Extended Attributes to hide their data,\nwhich also provide locations to store and retrieve binary data with\nthe Windows API.\nIn Microsoft Windows, CLFS is notably used by the Kernel Transaction\nManager (KTM) for both Transactional NTFS (TxF) and Transactional\nRegistry (TxR) operations. These allow applications to perform a\nnumber of changes on the filesystem or registry, all grouped in a\nsingle transaction that can be committed or rolled back. For example,\nto open a registry key in a transaction, the functions\nRegCreateKeyTransacted(), RegOpenKeyTransacted(), and\nRegDeleteKeyTransacted() are available.\nRegistry transactions are stored in dedicated files with the\nfollowing naming scheme: <hive><GUID>.TMContainer<number>.regtrans-ms\nor <hive><GUID>.TxR.<number>.regtrans-ms.\nThese are CLFS containers that are referenced in a master .blf file that only contains metadata and can be\nfound in various locations including user profile directories.\nRegistry transaction forensics were briefly explored in a previous\nblog post. The CLFS master and container file formats are mostly\nundocumented; however, previous research is available on GitHub.\nMalware Obfuscation\nAs with many malware families, most of the strings used by\nPRIVATELOG and STASHLOG are obfuscated. Yet the technique observed\nhere is uncommon and relies on XOR’ing each byte with a hard-coded\nbyte inline, with no loops. Effectively, each string is therefore\nencrypted with a unique byte stream.\n\n\n Figure 1: Sample string deobfuscation for \"PrintNotify\"\nInterestingly, some of the deobfuscated strings from the installer\nare used for logging error messages and have spelling errors or typos\nsuch as:\n \nLog index=%d, data border exceed\nbounday.\\n \nInteral data hash mismatch.\\n \nLog buffer size=%u too small, expect aleast %u\nbytes.\\n \nIntroducing STASHLOG\nIn addition to containing obfuscated strings, the installer’s code\nis protected using various control flow obfuscation techniques that\nmake static analysis cumbersome. Figure 2 is a graph overview of the\ninstaller’s main() function demonstrating the effects of the\ncontrol flow obfuscation.\n\n\n Figure 2: Graph view of main()\nSTASHLOG has two different modes of operation:\n Without any arguments, during which it will prepare the\nenvironment With a single argument, which is a file that\nshould be hidden in a CLFS file \nPreparing the Environment\nExecuted without arguments, the installer prints two values to the console:\n The GUID returned from the registry value of HKLM\\SOFTWARE\\Microsoft\\Cryptography\\MachineGUID\nA 56-byte value derived from a randomly generated GUID with\nCoCreateGUID() \n\n\n Figure 3: Sample console output\nThe 56-byte value is a concatenation of the random GUID, its SHA1\nhash, and the SHA1 hash of the previous values. So: GUID+sha1(GUID)+sha1(GUID+sha1(GUID)).\nThe randomly generated GUID is stored as a string in the GlobalAtom table, prefixed with win::. This table resides in memory and contains\nstrings with their identifiers available\nto all applications.\nIf a string prefixed with win:: already exists when the installer is\nexecuted, then the pre-existing GUID in the GlobalAtom table is reused.\nEffectively, when executed with no arguments, the installer\ngenerates and prints out encryption keys that the actor uses to\npre-encrypt the payload before it is written to disk.\nStashing the Payload\nWhen launched with an argument, the installer opens and decrypts the\ncontents of the file passed as an argument. It verifies that the file\nis suffixed by its SHA1 hash, and then generates the same 56-byte\nvalue using the stored GlobalAtom GUID\nstring in memory.\nThe 56-byte value is SHA1 hashed again and the first 16-bytes form\nthe initialization vector (IV), while the key is the 16-byte\nMachineGUID value from the host’s registry. The encryption algorithm\nis HC-128, which is rarely seen used in malware.\nThe expected decrypted file contents have a 40-byte header:\n \n\nstruct payloadHeader {    DWORD\nmagic;    DWORD minWinVer;    DWORD\nmaxWinVer;    DWORD totalSize;    WORD\nnumBlocks;    WORD unknown;    BYTE\nsha1sum[20]; } \nIn the analyzed installer, the “magic” value is referred to as a checksum; however, STASHLOG verifies\nthis value matches the hard-coded value 0x00686365. The number of blocks, specified at\noffset 16, must be between 2 and 5. The malware\nalso checks that the operating system version is within a lower and\nupper boundary and that the SHA1 hash of the decrypted data matches\nthe payload header value at offset 20.\nFollowing the payload header, the malware expects blocks of\nencrypted data with 8-byte headers. Each block header has the\nfollowing structure:\n \n\nstruct blockHeader {    DWORD\nmagic;    DWORD blockSize; } \nOnce the malware has checked and validated the structure of the\npayload, it searches for .blf files in the\ndefault user’s profile directory and uses the .blf file with the oldest creation date timestamp.\nIn practice, the malware should typically find the file used for\nregistry transaction logs: C:\\Users\\Default\\NTUSER.DAT<GUID>.TM.blf\nIf a matching .blf file is indeed found,\nit is opened with the CreateLogFile() API from clfsw32.dll. This function opens CLFS logs and\nexpects a file name in the following format, without the .blf extension: log:<LogName>[::<LogStreamName>]\nThe log file is reset using the CloseAndResetLogFile()\nfunction and will be opened again to insert the data.\nBefore inserting data into the CLFS log file, the malware decrypts\neach block using HC-128. The key is the 16-byte atom GUID and the IV\nis the first 16-bytes of the atom GUID SHA1 hash. Each block is then\nre-encrypted with the new key material as follows:\n The encryption key is the 16-byte GUID from\nGetVolumeNameForVolumeMountPointW(). The IV is the\nfirst 16-bytes of the SHA1 hash of the concatenated GUIDs from: \nGetVolumeNameForVolumeMountPointW() The registry\nvalue HKLM\\SOFTWARE\\Microsoft\\Cryptography\\MachineGUID\n  \nThe contents are written to the CLFS log file using the clfsw32.dll API function\nReserveAndAppendLog(). The payload header is written to the log\nfile as the first entry, followed by separate entries for each block.\nThe data is effectively stored in the first container file for the\nregistry transaction log: C:\\Users\\Default\\NTUSER.DAT<GUID>.TMContainer00000000000000000001.regtrans-ms.\nOnto PRIVATELOG\nThe PRIVATELOG sample recovered by Mandiant is an un-obfuscated\n64-bit DLL named prntvpt.dll. It contains\nexports, which mimic those of legitimate prntvpt.dll files, although the exports have no\nfunctionality. PRIVATELOG expects to be loaded from PrintConfig.dll, which is the main DLL of a\nservice named PrintNotify, via DLL search\norder hijacking.\nThe malicious code is executed at the DLL’s entry point. It starts\nby verifying the command-line arguments of the process it is running\nin and expects to be running under svchost.exe -k\nprint. If this matches, the malware resolves the function\naddress for the ServiceMain export function\nof PrintConfig.dll, which is the service\nentry point of the service using this command line. This function is\npatched using Microsoft Detours—a publicly available library used for\ninstrumenting Win32\nfunctions—so that the execution flow appears to happen in the\nlegitimate service DLL.\nThe patched ServiceMain function is where\nPRIVATELOG executes most of its functionality.\nSimilarly to STASHLOG, PRIVATELOG starts by enumerating *.blf files in the default user’s profile\ndirectory and uses the .blf file with the\noldest creation date timestamp.\nIf a matching .blf file is found,\nPRIVATELOG opens it with the clfsw32.dll\n function CreateLogFile(). The log file is then\nmarshalled and parsed using other functions specific to CLFS, such as\nCreateLogMarshallingArea(), ReadLogFile() and\nReadNextLogFile(). The malware expects to find specific entries\nwhich match our analysis of the installer.\nPRIVATELOG expects the first log entry to have the following format:\n A size greater than 40 (payload header size) A WORD\nvalue of 2, 3, 4, or 5 at offset 16 (number of blocks) \nIf the first entry matches the aforementioned criteria, then\nsubsequent records are read until one has an 8-byte header with the following:\n Its first DWORD must equal 2 (assumed magic value)\nIts second DWORD must be less than the entry’s size minus the\nheader. This value equals the size of the payload which will be\ndecrypted. \nOnce the expected log entry is found, its contents are decrypted\nusing the HC-128 encryption algorithm. The decryption key and IV are\ngenerated using the same unique host properties that were used by STASHLOG.\nIt is worth noting that PRIVATELOG only decrypts the first matching\nblock and that at least 2 to 5 blocks are expected to be inserted by STASHLOG.\nPRIVATELOG finally uses a rarely seen technique to execute the DLL\npayload, which this time relies on NTFS transactions. The injection\nprocess is similar to Phantom\nDLL hollowing and is described as follows:\n Open a transacted handle to a copied file via the API CreateFileTransactedA()\n In the sample analyzed by Mandiant, the file used for the\ntransaction is a copy of the legitimate binary C:\\Windows\\System32\\dbghelp.dll, which is\ncopied to C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\dbghelp.dll.\n  Overwrite the transacted file with the decrypted\npayload contents Create a section backed by the transacted\nfile with SEC_IMAGE attributes via the API\nNtCreateSection() Map a view of the newly created\nsection This implicitly loads the transacted file data to\nsome degree. The PE header is validated, and sections mapped\ninto memory; however, it does not fix section permissions or\nresolve imports.   Fix the section\npermissions Resolve the imports in the Import Table\nExecute the payload's entry point Find and execute the\nexport function named SvcMain \nHunting for PRIVATELOG\nContainer Sample\nFigure 4 shows a fabricated container file representing a sample\nexpected log file created by STASHLOG and loaded by PRIVATELOG.\n\n\n Figure 4: Example log file created by STASHLOG\nYARA Rules\nMandiant created YARA rules to hunt for PRIVATELOG and STASHLOG as\nwell as possible variants based on various methodologies and unique\nstrings that they use. Rules to detect CLFS containers matching\nPRIVATELOG structures or containing encrypted data are also provided.\nThese rules should be tested thoroughly before they are run in a\nproduction environment.\n \n\n\nimport \"math\" import\n\"pe\" \nrule HUNTING_Win_PRIVATELOG_CLFS\n{ \n    meta:         author =\n\"adrien.bataille@mandiant.com\"        \ndescription = \"This rule looks for CLFS containers\ncontaining possible data used by PRIVATELOG. As this rule\nmay loop on file content, preferably use on regtrans-ms\nfiles only or with caution.\" \n    condition:         filesize <\n100MB and filesize >= 512KB         and uint16(0)\n== 0x0015 // signature         and uint8(2) != 0 //\nfixup value upper byte         and uint8(3) == 0 //\nalways 0         and uint16(4) == uint16(6) and\nuint16(4) != 0 // num sectors         and uint32(8)\n== 0 // always 0         and uint32(16) == 1 //\nalways 1         and uint32(20) == 0 // always\n0         and uint32(40) == 0x70 // size of record\nheader \n        // size of data at least 0x28 for\nfirst record         and uint32(0x70+0x18) - 0x28\n>= 0x28 \n        // payloadHeader.numblocks\n(payloadHeader at 0x70+uint16(0x70+0x22))         and\n(uint16(0x70+uint16(0x70+0x22)+0x10) == 0x2 or\nuint16(0x70+uint16(0x70+0x22)+0x10) == 0x3 or\nuint16(0x70+uint16(0x70+0x22)+0x10) == 0x4 or\nuint16(0x70+uint16(0x70+0x22)+0x10) == 0x5) \n        // this is a size, assume it is\nless than our filesize         and\nuint32(0x70+uint16(0x70+0x22)+0xC) < filesize \n        // confirm malware using 2\ndifferent methods         and (             //\nlook for hardcoded magic in first log record        \n    uint32(0x70+uint16(0x70+0x22)) == 0x00686365 or         \n                          // loop through each\npossible sector to look for a blockheader struct    \n        for any i in (0 .. (filesize \\ 512) - 1):    \n        (             // look for record header, num\nsectors and size of record            \nuint16(i*512)==0x0015 and uint16(i*512+4) == uint16(i*512+6)\nand uint16(i*512+4) != 0 and uint32(i*512+40) == 0x70 and\nuint32(i*512+0x88) > 0x28 and uint32(i*512+0x88) <\nfilesize and             // look for magic and\nblockheader.blocksize in payload            \nuint32(i*512+0x70+uint16(i*512+0x70+0x22)) == 2 and\nuint32(i*512+0x70+uint16(i*512+0x70+0x22)+4) ==\nuint32(i*512+0x88)-0x30             )        \n) }  \n \n\n\nrule HUNTING_Win_CLFS_Entropy { \n    meta:         author =\n\"adrien.bataille@mandiant.com\"        \ndescription = \"This rule looks for CLFS containers with\nrecords containing high entropy. As this rule may loop on\nfile content, preferably use on regtrans-ms files only or\nwith caution.\" \n    condition:         filesize <\n100MB and filesize >= 512KB         and uint16(0)\n== 0x0015 // signature         and uint8(2) != 0 //\nfixup value upper byte         and uint8(3) == 0 //\nalways 0         and uint16(4) == uint16(6) and\nuint16(4) != 0 // num sectors         and uint32(8)\n== 0 // always 0         and uint32(16) == 1 //\nalways 1         and uint32(20) == 0 // always\n0         and uint32(40) == 0x70 // size of record\nheader \n        and for any i in (0 .. (filesize \\\n512) - 1) :         (         // look for\nrecord header, num sectors and size of record        \nuint16(i*512)==0x0015 and uint16(i*512+4) == uint16(i*512+6)\nand uint16(i*512+4) != 0 and uint32(i*512+40) == 0x70 and\nuint32(i*512+0x88) > 0x200 and uint32(i*512+0x88) <\nfilesize         // look for high entropy in the\nrecord[8:] to account for possible block header      \n  and math.entropy(i*512+0x70+uint16(i*512+0x70+0x22)+8,\ni*512+0x70+uint16(i*512+0x70+0x22)+uint32(i*512+0x88)-0x28)\n> 7.95         ) }  \n \n\n\nrule HUNTING_Win_PRIVATELOG_1_strict\n{ \n    meta:         author =\n\"adrien.bataille@mandiant.com\"        \ndescription = \"Detects PRIVATELOG and STASHLOG variants\nbased on strings and imports\"         md5 =\n\"91b08896fbda9edb8b6f93a6bc811ec6\" \n    strings:         $hvid =\n\"Global\\\\HVID_\" ascii         $apci =\n\"Global\\\\APCI#\" wide \n    condition:         uint16(0) ==\n0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and    \n    (             all of them and            \n(                \npe.imports(\"clfsw32.dll\",\"CreateLogMarshallingArea\")\nand                \npe.imports(\"kernel32.dll\",\n\"VirtualProtect\") and                \npe.imports(\"ktmw32.dll\",\n\"CreateTransaction\") and                \npe.imports(\"kernel32.dll\",\n\"CreateFileTransactedA\")            \n)         )    }  \n \n\n\nrule HUNTING_Win_PRIVATELOG_2_notstrict\n{ \n    meta:         author =\n\"adrien.bataille@mandiant.com\"        \ndescription = \"Detects possible PRIVATELOG and STASHLOG\nvariants based on strings or imports. This rule is\npurposefully loose so there may be a higher FP\nrate.\"         md5 =\n\"91b08896fbda9edb8b6f93a6bc811ec6\" \n    strings:         $hvid =\n\"Global\\\\HVID_\" ascii         $apci =\n\"Global\\\\APCI#\" wide \n    condition:         uint16(0) ==\n0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and    \n    (             any of them or            \n(                \npe.imports(\"clfsw32.dll\",\"CreateLogMarshallingArea\")\nand                \npe.imports(\"kernel32.dll\",\n\"VirtualProtect\") and                \npe.imports(\"ktmw32.dll\",\n\"CreateTransaction\") and                \npe.imports(\"kernel32.dll\",\n\"CreateFileTransactedA\")            \n)         )    }  \n \n\n\nrule HUNTING_Win_hijack_prntvpt\n{ \n    meta:         author =\n\"adrien.bataille@mandiant.com\"        \ndescription = \"Detects possible hijack of legitimate\nprntvpt.dll based on missing export\"         md5\n= \"91b08896fbda9edb8b6f93a6bc811ec6\" \n    condition:         uint16(0) ==\n0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and    \n    pe.exports(\"PTOpenProviderEx\")        \nand not\npe.exports(\"MergeAndValidatePrintTicketThunk\")\n}  \nEDR / SIEM\nTo complement static hunting with Yara, Mandiant also recommends\nhunting for similar indicators of compromise in “process”, “imageload”\nor “filewrite” events of typical EDR logs. These would cover cases\nwhere PRIVATELOG may resolve imports dynamically with LoadLibrary() and GetProcAddress(), versus static imports\nin currently known samples.\nFigure 5 identifies key modules loaded by PRIVATELOG that may be\nused to create hunting queries: ktmw32.dll, dbghelp.dll and clfsw32.dll.\n\n\n Figure 5: Memory view of a running\nPRIVATELOG process\nExample hunting queries include:\n Any process writing or loading C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\dbghelp.dll\nAny process loading both clfsw32.dll\nand ktmw32.dll \nsvchost.exe -k print loading clfsw32.dll or ktmw32.dll Any svchost.exe process loading clfsw32.dll \nConcerning svchost.exe, although we have\nobserved many cases of other svchost.exe\nprocesses loading ktmw32.dll, we have only\nrarely observed svchost.exe processes\nloading clfsw32.dll.\nFile writes to .regtrans-ms or .blf files are fairly common, however stacking the\nprocess name and file paths may also provide good results. For\nexample, file writes to the registry transaction file for the default\nuser are likely to be uncommon.\nHashes\nPRIVATELOG\n\nPrntvpt.dll:\n\n1e53559e6be1f941df1a1508bba5bb9763aedba23f946294ce5d92646877b40c\nSTASHLOG\n\nShiver.exe:\n\n720610b9067c8afe857819a098a44cab24e9da5cf6a086351d01b73714afd397\nMITRE ATT&ACK Techniques\n \n\n\nID  \nTechnique  \n\nT1012  Query\nRegistry  \n\nT1564  Hide\nArtifacts  \n\nT1574  Hijack\nExecution Flow  \n\nT1574.002  DLL\nSide-Loading  \n\nT1055.013  Process\nInjection: Process Doppelgänging  \nFireEye Product Detections\n \n\n\nPlatform(s)  \nDetection Name  \n\nNetwork Security Email Security\nDetection On Demand Malware Analysis File\nProtect  FE_APT_Loader_Win_PRIVATELOG\nFE_APT_Installer_Win_STASHLOG  \n\nHX Security  Generic.mg.0c605276ff21b515\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 19372, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 10], [11, 14], [14, 15], [16, 20], [20, 21], [21, 22], [23, 27], [28, 29], [30, 37], [38, 43], [44, 49], [50, 54], [55, 58], [59, 64], [65, 68], [69, 76], [77, 80], [80, 81], [82, 86], [86, 89], [89, 101], [101, 102], [102, 109], [109, 110], [110, 113], [113, 114], [114, 118], [118, 119], [119, 134], [134, 135], [135, 139], [139, 140], [140, 142], [142, 143], [143, 189], [189, 190], [190, 194], [196, 199], [200, 208], [209, 217], [218, 227], [228, 232], [233, 241], [242, 252], [253, 254], [255, 258], [259, 266], [267, 273], [274, 276], [277, 281], [282, 287], [288, 298], [299, 302], [303, 306], [307, 316], [316, 317], [318, 326], [326, 327], [328, 330], [331, 335], [336, 340], [340, 341], [342, 344], [345, 349], [350, 355], [356, 357], [358, 363], [364, 367], [368, 378], [379, 390], [391, 400], [401, 404], [405, 412], [413, 416], [417, 419], [420, 424], [425, 429], [429, 430], [431, 436], [437, 441], [442, 450], [451, 459], [460, 462], [463, 467], [468, 473], [474, 478], [479, 482], [483, 492], [493, 497], [498, 501], [502, 509], [510, 512], [513, 518], [519, 527], [527, 528], [529, 531], [532, 536], [537, 541], [542, 547], [548, 554], [555, 564], [565, 570], [570, 571], [572, 575], [576, 583], [584, 599], [600, 602], [603, 607], [608, 615], [616, 624], [625, 627], [628, 632], [633, 644], [644, 645], [646, 654], [655, 658], [659, 662], [663, 665], [666, 673], [674, 684], [685, 687], [688, 696], [697, 699], [700, 703], [704, 712], [713, 725], [726, 728], [729, 731], [732, 739], [740, 743], [744, 756], [757, 765], [766, 774], [775, 777], [778, 788], [788, 789], [790, 794], [795, 798], [799, 807], [808, 815], [816, 820], [821, 823], [824, 829], [830, 832], [833, 844], [844, 845], [846, 849], [850, 854], [855, 857], [858, 859], [860, 870], [870, 871], [872, 874], [875, 883], [884, 892], [892, 893], [894, 898], [899, 902], [903, 914], [915, 920], [921, 931], [932, 935], [936, 944], [945, 949], [950, 952], [953, 956], [957, 963], [964, 967], [968, 972], [973, 979], [980, 981], [981, 985], [985, 986], [987, 989], [990, 994], [995, 996], [997, 1003], [1004, 1009], [1010, 1017], [1018, 1020], [1021, 1029], [1030, 1041], [1042, 1047], [1047, 1048], [1049, 1053], [1054, 1056], [1057, 1058], [1059, 1062], [1063, 1072], [1073, 1077], [1078, 1081], [1082, 1092], [1093, 1095], [1096, 1105], [1106, 1108], [1109, 1116], [1117, 1122], [1123, 1126], [1127, 1134], [1135, 1141], [1142, 1146], [1147, 1149], [1150, 1153], [1154, 1158], [1159, 1170], [1170, 1171], [1172, 1174], [1175, 1183], [1184, 1196], [1197, 1201], [1202, 1205], [1206, 1225], [1226, 1228], [1229, 1236], [1236, 1237], [1237, 1243], [1244, 1250], [1250, 1251], [1252, 1257], [1258, 1261], [1262, 1266], [1267, 1270], [1271, 1275], [1275, 1276], [1277, 1284], [1285, 1288], [1289, 1293], [1294, 1300], [1301, 1303], [1304, 1307], [1308, 1314], [1315, 1319], [1320, 1322], [1323, 1333], [1333, 1334], [1335, 1340], [1341, 1344], [1345, 1347], [1348, 1357], [1358, 1363], [1364, 1368], [1369, 1372], [1373, 1378], [1379, 1383], [1384, 1387], [1388, 1393], [1393, 1394], [1395, 1399], [1400, 1408], [1409, 1418], [1419, 1423], [1424, 1426], [1427, 1438], [1439, 1441], [1442, 1446], [1447, 1452], [1453, 1457], [1458, 1460], [1461, 1464], [1465, 1472], [1473, 1475], [1476, 1477], [1478, 1488], [1489, 1492], [1492, 1493], [1494, 1501], [1502, 1507], [1508, 1511], [1512, 1522], [1523, 1530], [1531, 1534], [1535, 1544], [1544, 1545], [1546, 1550], [1551, 1553], [1554, 1561], [1562, 1564], [1565, 1571], [1572, 1574], [1575, 1582], [1583, 1588], [1589, 1592], [1593, 1597], [1597, 1598], [1599, 1602], [1603, 1610], [1610, 1611], [1612, 1614], [1615, 1618], [1619, 1626], [1627, 1635], [1636, 1638], [1639, 1643], [1644, 1652], [1653, 1663], [1664, 1666], [1667, 1671], [1672, 1677], [1678, 1682], [1682, 1683], [1684, 1689], [1690, 1694], [1695, 1702], [1703, 1712], [1713, 1715], [1716, 1721], [1722, 1725], [1726, 1734], [1735, 1741], [1742, 1746], [1747, 1751], [1752, 1755], [1756, 1763], [1764, 1767], [1767, 1768], [1769, 1771], [1772, 1781], [1782, 1789], [1789, 1790], [1791, 1795], [1796, 1798], [1799, 1806], [1807, 1811], [1812, 1814], [1815, 1818], [1819, 1825], [1826, 1837], [1838, 1845], [1846, 1847], [1847, 1850], [1850, 1851], [1852, 1855], [1856, 1860], [1861, 1874], [1875, 1879], [1880, 1881], [1881, 1884], [1884, 1885], [1886, 1889], [1890, 1903], [1904, 1912], [1913, 1914], [1914, 1917], [1917, 1918], [1919, 1929], [1929, 1930], [1931, 1936], [1937, 1942], [1943, 1955], [1956, 1958], [1959, 1966], [1967, 1968], [1969, 1975], [1976, 1978], [1979, 1986], [1987, 1989], [1990, 1993], [1994, 2004], [2005, 2007], [2008, 2016], [2016, 2017], [2018, 2021], [2022, 2029], [2030, 2032], [2033, 2034], [2035, 2041], [2042, 2053], [2054, 2058], [2059, 2062], [2063, 2065], [2066, 2075], [2076, 2078], [2079, 2085], [2086, 2090], [2090, 2091], [2092, 2095], [2096, 2103], [2103, 2104], [2105, 2107], [2108, 2112], [2113, 2114], [2115, 2123], [2124, 2127], [2128, 2130], [2131, 2132], [2133, 2144], [2144, 2145], [2146, 2149], [2150, 2159], [2160, 2182], [2182, 2185], [2186, 2206], [2206, 2209], [2210, 2213], [2214, 2236], [2236, 2238], [2239, 2242], [2243, 2252], [2252, 2253], [2254, 2262], [2263, 2275], [2276, 2279], [2280, 2286], [2287, 2289], [2290, 2299], [2300, 2305], [2306, 2310], [2311, 2314], [2315, 2324], [2325, 2331], [2332, 2338], [2338, 2339], [2340, 2352], [2352, 2353], [2353, 2372], [2372, 2373], [2373, 2384], [2385, 2387], [2388, 2400], [2400, 2401], [2401, 2404], [2404, 2406], [2406, 2413], [2413, 2414], [2414, 2425], [2425, 2426], [2427, 2432], [2433, 2436], [2437, 2441], [2442, 2452], [2453, 2457], [2458, 2461], [2462, 2472], [2473, 2475], [2476, 2477], [2478, 2484], [2485, 2486], [2486, 2489], [2490, 2494], [2495, 2499], [2500, 2504], [2505, 2513], [2514, 2522], [2523, 2526], [2527, 2530], [2531, 2533], [2534, 2539], [2540, 2542], [2543, 2550], [2551, 2560], [2561, 2570], [2571, 2575], [2576, 2583], [2584, 2595], [2595, 2596], [2597, 2605], [2606, 2617], [2618, 2627], [2628, 2632], [2633, 2640], [2641, 2649], [2650, 2652], [2653, 2654], [2655, 2663], [2664, 2668], [2669, 2673], [2673, 2674], [2675, 2678], [2679, 2683], [2684, 2690], [2691, 2694], [2695, 2704], [2705, 2709], [2710, 2717], [2718, 2721], [2722, 2728], [2729, 2741], [2741, 2742], [2743, 2750], [2750, 2751], [2752, 2760], [2761, 2769], [2770, 2772], [2773, 2782], [2783, 2785], [2786, 2792], [2792, 2793], [2794, 2801], [2802, 2813], [2814, 2816], [2817, 2821], [2822, 2826], [2827, 2834], [2835, 2843], [2843, 2844], [2845, 2849], [2850, 2852], [2853, 2856], [2857, 2864], [2865, 2869], [2870, 2872], [2873, 2883], [2884, 2887], [2888, 2896], [2897, 2900], [2901, 2911], [2911, 2912], [2913, 2916], [2917, 2920], [2921, 2930], [2931, 2939], [2940, 2944], [2945, 2947], [2948, 2956], [2957, 2960], [2961, 2967], [2968, 2970], [2971, 2978], [2979, 2983], [2984, 2988], [2989, 2993], [2994, 2995], [2996, 3006], [3007, 3011], [3012, 3018], [3018, 3019], [3020, 3024], [3025, 3027], [3028, 3033], [3033, 3034], [3035, 3046], [3046, 3047], [3048, 3052], [3053, 3059], [3060, 3062], [3063, 3072], [3073, 3082], [3083, 3087], [3088, 3089], [3090, 3096], [3097, 3101], [3102, 3108], [3108, 3109], [3113, 3119], [3120, 3121], [3121, 3122], [3123, 3129], [3130, 3136], [3137, 3150], [3151, 3154], [3155, 3156], [3156, 3167], [3167, 3168], [3169, 3182], [3182, 3183], [3184, 3188], [3189, 3191], [3192, 3195], [3196, 3208], [3209, 3216], [3217, 3221], [3222, 3225], [3226, 3235], [3236, 3239], [3240, 3244], [3245, 3248], [3249, 3256], [3257, 3262], [3263, 3271], [3272, 3275], [3276, 3280], [3281, 3289], [3290, 3296], [3297, 3299], [3300, 3305], [3306, 3310], [3311, 3313], [3313, 3314], [3317, 3320], [3321, 3329], [3329, 3330], [3331, 3335], [3336, 3342], [3343, 3349], [3350, 3357], [3357, 3358], [3358, 3360], [3362, 3369], [3370, 3374], [3375, 3379], [3380, 3388], [3388, 3389], [3389, 3391], [3393, 3396], [3397, 3403], [3404, 3411], [3412, 3415], [3416, 3421], [3421, 3422], [3423, 3429], [3430, 3436], [3437, 3439], [3440, 3445], [3445, 3446], [3446, 3448], [3450, 3461], [3462, 3470], [3471, 3473], [3474, 3482], [3483, 3485], [3486, 3496], [3497, 3507], [3508, 3515], [3515, 3516], [3517, 3520], [3521, 3532], [3533, 3537], [3538, 3540], [3541, 3550], [3551, 3556], [3557, 3564], [3565, 3572], [3573, 3577], [3578, 3589], [3590, 3600], [3601, 3605], [3606, 3610], [3611, 3617], [3618, 3626], [3627, 3637], [3637, 3638], [3639, 3645], [3646, 3647], [3648, 3650], [3651, 3652], [3653, 3658], [3659, 3667], [3668, 3670], [3671, 3674], [3675, 3686], [3687, 3691], [3691, 3693], [3694, 3702], [3703, 3716], [3717, 3720], [3721, 3728], [3729, 3731], [3732, 3735], [3736, 3743], [3744, 3748], [3749, 3760], [3760, 3761], [3765, 3771], [3772, 3773], [3773, 3774], [3775, 3780], [3781, 3785], [3786, 3788], [3789, 3793], [3793, 3795], [3796, 3804], [3805, 3808], [3809, 3812], [3813, 3822], [3823, 3828], [3829, 3831], [3832, 3841], [3841, 3842], [3844, 3851], [3852, 3855], [3856, 3865], [3865, 3866], [3867, 3873], [3874, 3879], [3880, 3882], [3883, 3887], [3888, 3895], [3896, 3899], [3900, 3911], [3912, 3916], [3917, 3918], [3919, 3925], [3926, 3934], [3934, 3935], [3936, 3941], [3942, 3944], [3945, 3946], [3947, 3951], [3952, 3956], [3957, 3963], [3964, 3966], [3967, 3973], [3974, 3976], [3977, 3978], [3979, 3983], [3984, 3988], [3990, 3999], [4000, 4003], [4004, 4015], [4016, 4024], [4025, 4032], [4033, 4042], [4042, 4043], [4044, 4047], [4048, 4057], [4058, 4064], [4065, 4068], [4069, 4075], [4076, 4078], [4079, 4082], [4083, 4090], [4090, 4091], [4093, 4096], [4097, 4101], [4102, 4110], [4111, 4115], [4116, 4119], [4120, 4128], [4129, 4134], [4135, 4137], [4138, 4186], [4187, 4188], [4189, 4191], [4191, 4196], [4197, 4202], [4203, 4210], [4211, 4215], [4216, 4217], [4218, 4226], [4227, 4236], [4237, 4241], [4242, 4246], [4247, 4259], [4259, 4261], [4266, 4272], [4273, 4274], [4274, 4275], [4276, 4282], [4283, 4290], [4291, 4297], [4298, 4301], [4302, 4304], [4304, 4309], [4310, 4315], [4316, 4318], [4319, 4320], [4321, 4334], [4335, 4337], [4338, 4341], [4342, 4348], [4349, 4353], [4353, 4354], [4355, 4358], [4359, 4363], [4364, 4368], [4368, 4369], [4370, 4373], [4374, 4377], [4378, 4382], [4383, 4387], [4388, 4390], [4391, 4394], [4395, 4403], [4404, 4410], [4410, 4411], [4412, 4414], [4414, 4415], [4416, 4420], [4420, 4421], [4421, 4425], [4425, 4426], [4426, 4430], [4430, 4432], [4432, 4436], [4436, 4437], [4437, 4441], [4441, 4442], [4442, 4446], [4446, 4447], [4447, 4451], [4451, 4454], [4455, 4458], [4459, 4467], [4468, 4477], [4478, 4482], [4483, 4485], [4486, 4492], [4493, 4495], [4496, 4497], [4498, 4504], [4505, 4507], [4508, 4511], [4512, 4522], [4523, 4528], [4528, 4529], [4530, 4538], [4539, 4543], [4544, 4547], [4547, 4550], [4551, 4555], [4556, 4561], [4562, 4569], [4570, 4572], [4573, 4579], [4580, 4583], [4584, 4592], [4593, 4600], [4601, 4605], [4606, 4611], [4612, 4623], [4624, 4633], [4634, 4636], [4637, 4640], [4641, 4653], [4653, 4654], [4655, 4657], [4658, 4659], [4660, 4666], [4667, 4675], [4676, 4680], [4681, 4684], [4684, 4686], [4687, 4694], [4695, 4701], [4702, 4706], [4707, 4710], [4711, 4720], [4721, 4723], [4724, 4732], [4732, 4733], [4734, 4738], [4739, 4742], [4743, 4755], [4756, 4760], [4761, 4763], [4764, 4767], [4768, 4778], [4779, 4784], [4785, 4787], [4788, 4794], [4794, 4795], [4796, 4807], [4807, 4808], [4809, 4813], [4814, 4822], [4823, 4827], [4828, 4830], [4831, 4840], [4840, 4841], [4842, 4845], [4846, 4855], [4856, 4865], [4866, 4869], [4870, 4876], [4877, 4880], [4881, 4891], [4892, 4896], [4897, 4901], [4902, 4905], [4906, 4911], [4912, 4916], [4917, 4919], [4920, 4931], [4932, 4935], [4936, 4943], [4944, 4950], [4951, 4953], [4954, 4956], [4957, 4964], [4965, 4967], [4968, 4972], [4972, 4973], [4974, 4982], [4983, 4986], [4987, 4994], [4995, 4999], [5000, 5008], [5009, 5013], [5014, 5016], [5017, 5025], [5025, 5026], [5027, 5030], [5031, 5040], [5041, 5046], [5047, 5050], [5051, 5059], [5060, 5063], [5064, 5072], [5073, 5075], [5076, 5079], [5080, 5084], [5085, 5091], [5092, 5094], [5095, 5097], [5098, 5106], [5106, 5107], [5108, 5110], [5111, 5119], [5120, 5124], [5125, 5128], [5129, 5133], [5134, 5136], [5137, 5145], [5146, 5148], [5149, 5152], [5153, 5157], [5158, 5162], [5162, 5163], [5164, 5167], [5168, 5172], [5173, 5182], [5183, 5186], [5187, 5191], [5192, 5194], [5194, 5199], [5200, 5205], [5206, 5211], [5212, 5215], [5216, 5222], [5223, 5233], [5234, 5238], [5239, 5245], [5246, 5248], [5249, 5255], [5255, 5256], [5257, 5260], [5261, 5263], [5263, 5268], [5269, 5274], [5275, 5277], [5278, 5282], [5283, 5289], [5290, 5295], [5296, 5299], [5300, 5303], [5304, 5309], [5310, 5312], [5312, 5318], [5319, 5323], [5324, 5327], [5328, 5342], [5343, 5349], [5350, 5351], [5351, 5353], [5353, 5355], [5356, 5361], [5362, 5365], [5366, 5369], [5370, 5372], [5373, 5376], [5377, 5379], [5379, 5384], [5385, 5396], [5397, 5402], [5403, 5407], [5408, 5411], [5412, 5418], [5419, 5427], [5427, 5428], [5429, 5432], [5433, 5443], [5444, 5453], [5454, 5456], [5457, 5460], [5460, 5463], [5463, 5464], [5465, 5470], [5471, 5473], [5474, 5480], [5481, 5485], [5486, 5490], [5491, 5493], [5494, 5501], [5501, 5502], [5503, 5506], [5507, 5515], [5516, 5525], [5526, 5530], [5531, 5539], [5540, 5544], [5545, 5546], [5547, 5549], [5549, 5554], [5555, 5561], [5561, 5562], [5566, 5572], [5573, 5586], [5587, 5588], [5591, 5597], [5598, 5603], [5603, 5604], [5607, 5613], [5614, 5623], [5623, 5624], [5627, 5633], [5634, 5643], [5643, 5644], [5647, 5653], [5654, 5663], [5663, 5664], [5667, 5672], [5673, 5682], [5682, 5683], [5686, 5691], [5692, 5699], [5699, 5700], [5703, 5708], [5709, 5716], [5716, 5717], [5717, 5719], [5719, 5721], [5722, 5723], [5725, 5727], [5728, 5731], [5732, 5740], [5741, 5750], [5750, 5751], [5752, 5755], [5756, 5763], [5764, 5769], [5770, 5772], [5773, 5781], [5782, 5784], [5785, 5787], [5788, 5789], [5790, 5798], [5798, 5799], [5800, 5807], [5807, 5808], [5809, 5817], [5818, 5826], [5827, 5831], [5832, 5837], [5838, 5845], [5846, 5849], [5850, 5860], [5861, 5866], [5867, 5877], [5877, 5878], [5879, 5882], [5883, 5889], [5890, 5892], [5893, 5899], [5899, 5900], [5901, 5910], [5911, 5913], [5914, 5920], [5921, 5923], [5923, 5924], [5925, 5929], [5930, 5932], [5933, 5940], [5941, 5942], [5943, 5946], [5947, 5948], [5948, 5949], [5950, 5953], [5954, 5961], [5962, 5966], [5967, 5973], [5974, 5978], [5979, 5982], [5983, 5992], [5993, 5999], [6000, 6007], [6008, 6010], [6011, 6017], [6018, 6019], [6020, 6025], [6026, 6029], [6030, 6035], [6036, 6044], [6045, 6048], [6049, 6053], [6054, 6057], [6058, 6062], [6063, 6067], [6068, 6070], [6071, 6074], [6075, 6084], [6085, 6089], [6090, 6097], [6098, 6101], [6102, 6109], [6110, 6116], [6117, 6122], [6123, 6125], [6126, 6132], [6133, 6135], [6135, 6136], [6137, 6146], [6147, 6150], [6151, 6158], [6159, 6165], [6165, 6166], [6167, 6170], [6171, 6178], [6179, 6186], [6187, 6193], [6194, 6196], [6197, 6206], [6207, 6211], [6212, 6216], [6217, 6218], [6218, 6223], [6224, 6231], [6231, 6232], [6233, 6237], [6238, 6243], [6244, 6250], [6251, 6254], [6255, 6258], [6259, 6268], [6269, 6278], [6278, 6279], [6283, 6289], [6290, 6301], [6302, 6303], [6306, 6312], [6313, 6318], [6318, 6319], [6322, 6328], [6329, 6338], [6338, 6339], [6340, 6341], [6343, 6347], [6348, 6351], [6352, 6359], [6360, 6363], [6364, 6371], [6372, 6375], [6376, 6385], [6386, 6389], [6390, 6399], [6400, 6402], [6403, 6406], [6407, 6414], [6414, 6415], [6416, 6418], [6419, 6427], [6428, 6431], [6432, 6433], [6433, 6436], [6437, 6442], [6443, 6445], [6446, 6449], [6450, 6457], [6458, 6464], [6465, 6472], [6473, 6482], [6483, 6486], [6487, 6491], [6492, 6495], [6496, 6497], [6497, 6500], [6501, 6505], [6506, 6510], [6511, 6514], [6515, 6521], [6522, 6530], [6531, 6535], [6536, 6545], [6545, 6546], [6547, 6549], [6550, 6558], [6558, 6559], [6560, 6563], [6564, 6571], [6572, 6578], [6579, 6588], [6589, 6593], [6594, 6597], [6598, 6602], [6603, 6607], [6608, 6611], [6612, 6620], [6621, 6632], [6633, 6637], [6637, 6638], [6639, 6640], [6640, 6641], [6641, 6662], [6662, 6663], [6663, 6672], [6672, 6673], [6673, 6675], [6675, 6676], [6676, 6679], [6680, 6682], [6683, 6684], [6685, 6693], [6694, 6695], [6695, 6698], [6699, 6703], [6704, 6706], [6707, 6713], [6714, 6719], [6719, 6720], [6721, 6723], [6724, 6726], [6727, 6733], [6734, 6738], [6739, 6742], [6743, 6756], [6756, 6758], [6759, 6762], [6763, 6767], [6768, 6775], [6775, 6776], [6776, 6779], [6779, 6780], [6781, 6785], [6786, 6794], [6795, 6800], [6801, 6805], [6806, 6810], [6811, 6814], [6815, 6822], [6823, 6824], [6825, 6829], [6830, 6834], [6835, 6837], [6838, 6841], [6842, 6851], [6852, 6858], [6858, 6859], [6860, 6867], [6868, 6871], [6872, 6873], [6873, 6876], [6877, 6886], [6886, 6887], [6888, 6891], [6891, 6893], [6893, 6901], [6901, 6905], [6905, 6919], [6919, 6920], [6921, 6924], [6925, 6928], [6929, 6933], [6934, 6936], [6937, 6942], [6943, 6948], [6949, 6952], [6953, 6973], [6973, 6975], [6976, 6984], [6985, 6988], [6989, 6993], [6994, 6996], [6997, 7003], [7004, 7009], [7010, 7012], [7013, 7019], [7020, 7023], [7024, 7028], [7028, 7029], [7030, 7036], [7037, 7046], [7047, 7051], [7052, 7056], [7057, 7060], [7061, 7065], [7066, 7069], [7070, 7074], [7074, 7075], [7076, 7079], [7080, 7087], [7088, 7096], [7097, 7101], [7102, 7107], [7108, 7113], [7114, 7117], [7117, 7120], [7120, 7121], [7122, 7125], [7126, 7129], [7130, 7132], [7133, 7136], [7137, 7139], [7139, 7144], [7145, 7149], [7150, 7154], [7155, 7158], [7159, 7162], [7163, 7165], [7166, 7168], [7169, 7172], [7173, 7178], [7179, 7181], [7181, 7187], [7188, 7190], [7191, 7194], [7195, 7199], [7200, 7204], [7205, 7209], [7210, 7214], [7214, 7215], [7216, 7220], [7221, 7226], [7227, 7229], [7230, 7234], [7235, 7247], [7248, 7252], [7253, 7256], [7257, 7260], [7261, 7264], [7265, 7273], [7274, 7276], [7277, 7284], [7284, 7285], [7287, 7290], [7291, 7301], [7302, 7305], [7306, 7308], [7309, 7312], [7313, 7315], [7315, 7320], [7321, 7325], [7326, 7330], [7331, 7364], [7364, 7367], [7368, 7371], [7372, 7374], [7375, 7377], [7378, 7381], [7382, 7387], [7388, 7390], [7390, 7396], [7397, 7399], [7400, 7403], [7404, 7408], [7409, 7413], [7414, 7416], [7417, 7420], [7421, 7433], [7434, 7439], [7440, 7444], [7444, 7445], [7447, 7480], [7480, 7482], [7483, 7486], [7487, 7495], [7496, 7501], [7502, 7550], [7554, 7557], [7558, 7566], [7567, 7570], [7571, 7578], [7579, 7581], [7582, 7585], [7586, 7590], [7591, 7594], [7595, 7599], [7600, 7605], [7606, 7609], [7610, 7617], [7617, 7618], [7618, 7621], [7622, 7625], [7626, 7634], [7635, 7654], [7654, 7657], [7658, 7661], [7662, 7669], [7670, 7676], [7677, 7679], [7680, 7687], [7688, 7690], [7691, 7694], [7695, 7698], [7699, 7703], [7704, 7706], [7707, 7710], [7711, 7716], [7717, 7722], [7722, 7723], [7724, 7732], [7733, 7735], [7736, 7744], [7745, 7752], [7753, 7756], [7757, 7761], [7762, 7767], [7767, 7768], [7769, 7772], [7773, 7777], [7778, 7780], [7781, 7792], [7793, 7799], [7800, 7802], [7803, 7806], [7807, 7812], [7813, 7822], [7823, 7827], [7828, 7831], [7832, 7835], [7836, 7844], [7845, 7856], [7857, 7860], [7860, 7861], [7862, 7863], [7863, 7864], [7864, 7885], [7885, 7886], [7886, 7895], [7895, 7896], [7896, 7927], [7927, 7928], [7928, 7939], [7939, 7940], [7941, 7945], [7946, 7956], [7957, 7960], [7961, 7971], [7972, 7978], [7979, 7988], [7989, 7991], [7992, 8000], [8001, 8003], [8004, 8006], [8007, 8020], [8021, 8023], [8023, 8027], [8028, 8031], [8032, 8037], [8038, 8045], [8045, 8046], [8046, 8049], [8049, 8050], [8051, 8053], [8054, 8062], [8063, 8070], [8070, 8071], [8072, 8077], [8078, 8083], [8084, 8089], [8090, 8092], [8093, 8103], [8104, 8111], [8111, 8112], [8112, 8115], [8116, 8121], [8121, 8122], [8123, 8131], [8132, 8135], [8136, 8143], [8144, 8148], [8149, 8151], [8152, 8165], [8165, 8166], [8167, 8177], [8178, 8185], [8186, 8188], [8189, 8191], [8192, 8198], [8199, 8203], [8204, 8215], [8215, 8216], [8216, 8219], [8219, 8220], [8221, 8226], [8227, 8229], [8230, 8233], [8234, 8238], [8239, 8242], [8243, 8245], [8246, 8247], [8248, 8255], [8256, 8261], [8262, 8273], [8273, 8274], [8275, 8278], [8279, 8282], [8283, 8289], [8290, 8295], [8296, 8305], [8305, 8306], [8307, 8310], [8311, 8320], [8321, 8325], [8326, 8328], [8329, 8337], [8338, 8340], [8341, 8344], [8345, 8350], [8351, 8356], [8357, 8362], [8362, 8363], [8364, 8366], [8367, 8373], [8374, 8376], [8377, 8386], [8387, 8390], [8391, 8403], [8404, 8413], [8414, 8416], [8417, 8420], [8421, 8428], [8429, 8431], [8432, 8434], [8435, 8442], [8443, 8445], [8446, 8449], [8450, 8457], [8458, 8460], [8461, 8463], [8464, 8471], [8472, 8477], [8478, 8485], [8485, 8486], [8486, 8489], [8490, 8492], [8493, 8498], [8498, 8499], [8500, 8502], [8503, 8507], [8508, 8515], [8515, 8516], [8517, 8520], [8521, 8528], [8529, 8537], [8538, 8541], [8542, 8550], [8551, 8558], [8559, 8562], [8563, 8566], [8567, 8578], [8579, 8585], [8586, 8594], [8595, 8597], [8598, 8609], [8609, 8610], [8610, 8613], [8613, 8614], [8615, 8620], [8621, 8623], [8624, 8627], [8628, 8635], [8636, 8641], [8642, 8647], [8648, 8650], [8651, 8654], [8655, 8662], [8663, 8668], [8669, 8673], [8674, 8681], [8682, 8686], [8686, 8687], [8688, 8692], [8693, 8701], [8702, 8704], [8705, 8712], [8713, 8718], [8719, 8728], [8729, 8738], [8739, 8747], [8748, 8757], [8758, 8765], [8766, 8770], [8771, 8774], [8775, 8788], [8789, 8794], [8795, 8807], [8808, 8812], [8813, 8816], [8817, 8826], [8827, 8831], [8832, 8839], [8840, 8842], [8843, 8849], [8850, 8852], [8853, 8856], [8857, 8867], [8868, 8875], [8876, 8879], [8879, 8880], [8881, 8884], [8885, 8892], [8893, 8904], [8905, 8913], [8914, 8916], [8917, 8922], [8923, 8933], [8934, 8942], [8943, 8947], [8948, 8950], [8951, 8954], [8955, 8968], [8968, 8969], [8970, 8979], [8980, 8982], [8983, 8991], [8991, 8992], [8993, 9003], [9004, 9010], [9011, 9013], [9014, 9025], [9026, 9028], [9028, 9031], [9032, 9037], [9038, 9040], [9041, 9044], [9045, 9052], [9053, 9059], [9060, 9067], [9068, 9077], [9078, 9081], [9082, 9086], [9087, 9090], [9091, 9092], [9092, 9095], [9096, 9100], [9101, 9105], [9106, 9109], [9110, 9116], [9117, 9125], [9126, 9130], [9131, 9140], [9140, 9141], [9142, 9144], [9145, 9146], [9147, 9155], [9156, 9157], [9157, 9160], [9161, 9165], [9166, 9168], [9169, 9174], [9174, 9175], [9176, 9186], [9187, 9192], [9193, 9195], [9196, 9200], [9201, 9204], [9205, 9212], [9212, 9213], [9213, 9216], [9218, 9226], [9227, 9240], [9240, 9243], [9244, 9247], [9248, 9251], [9252, 9256], [9257, 9259], [9260, 9264], [9265, 9275], [9276, 9279], [9280, 9286], [9287, 9292], [9293, 9298], [9299, 9308], [9309, 9317], [9318, 9320], [9321, 9325], [9325, 9326], [9327, 9331], [9332, 9334], [9335, 9359], [9359, 9362], [9363, 9374], [9374, 9376], [9377, 9380], [9381, 9396], [9396, 9399], [9400, 9403], [9404, 9411], [9412, 9419], [9420, 9422], [9423, 9427], [9428, 9436], [9437, 9444], [9445, 9450], [9451, 9456], [9457, 9460], [9461, 9469], [9470, 9472], [9473, 9476], [9477, 9486], [9486, 9487], [9488, 9498], [9499, 9506], [9507, 9510], [9511, 9516], [9517, 9520], [9521, 9526], [9527, 9529], [9530, 9534], [9535, 9538], [9539, 9548], [9549, 9555], [9555, 9556], [9558, 9559], [9560, 9564], [9565, 9572], [9573, 9577], [9578, 9580], [9581, 9582], [9582, 9589], [9590, 9596], [9597, 9601], [9601, 9602], [9603, 9604], [9605, 9609], [9610, 9615], [9616, 9618], [9619, 9620], [9620, 9621], [9622, 9623], [9623, 9624], [9625, 9626], [9626, 9627], [9628, 9630], [9631, 9632], [9633, 9635], [9636, 9642], [9643, 9645], [9646, 9647], [9647, 9653], [9654, 9656], [9657, 9663], [9663, 9664], [9666, 9668], [9669, 9672], [9673, 9678], [9679, 9684], [9685, 9692], [9693, 9696], [9697, 9711], [9712, 9720], [9720, 9721], [9722, 9726], [9727, 9737], [9738, 9745], [9746, 9749], [9750, 9754], [9755, 9760], [9761, 9764], [9765, 9768], [9769, 9771], [9772, 9773], [9773, 9778], [9779, 9785], [9786, 9790], [9791, 9794], [9795, 9804], [9804, 9805], [9807, 9810], [9811, 9816], [9817, 9822], [9823, 9827], [9828, 9833], [9834, 9835], [9836, 9837], [9837, 9844], [9845, 9850], [9851, 9856], [9856, 9857], [9858, 9861], [9862, 9868], [9869, 9874], [9875, 9879], [9880, 9882], [9883, 9887], [9888, 9892], [9893, 9896], [9897, 9904], [9905, 9909], [9910, 9915], [9916, 9919], [9920, 9926], [9926, 9927], [9928, 9932], [9933, 9938], [9939, 9945], [9946, 9949], [9950, 9954], [9955, 9957], [9958, 9961], [9962, 9969], [9970, 9975], [9976, 9980], [9981, 9983], [9984, 9993], [9993, 9994], [9996, 10000], [10001, 10004], [10005, 10013], [10014, 10017], [10018, 10023], [10024, 10026], [10027, 10032], [10032, 10033], [10034, 10037], [10038, 10046], [10047, 10050], [10051, 10060], [10061, 10066], [10067, 10070], [10071, 10074], [10074, 10077], [10078, 10088], [10089, 10098], [10098, 10099], [10100, 10103], [10104, 10114], [10115, 10118], [10119, 10122], [10123, 10125], [10126, 10129], [10130, 10139], [10140, 10145], [10146, 10149], [10150, 10154], [10155, 10161], [10162, 10166], [10167, 10177], [10178, 10182], [10183, 10187], [10188, 10192], [10193, 10195], [10196, 10204], [10204, 10205], [10206, 10208], [10209, 10211], [10212, 10217], [10218, 10224], [10225, 10229], [10230, 10240], [10241, 10245], [10246, 10254], [10255, 10258], [10259, 10264], [10265, 10273], [10274, 10279], [10280, 10283], [10284, 10288], [10289, 10291], [10292, 10297], [10298, 10299], [10300, 10302], [10303, 10304], [10305, 10311], [10312, 10315], [10316, 10324], [10325, 10327], [10328, 10330], [10331, 10339], [10340, 10342], [10343, 10351], [10351, 10352], [10353, 10363], [10364, 10371], [10372, 10376], [10377, 10378], [10379, 10385], [10386, 10390], [10391, 10400], [10401, 10403], [10404, 10411], [10412, 10415], [10416, 10419], [10420, 10427], [10427, 10428], [10429, 10434], [10435, 10439], [10440, 10444], [10445, 10451], [10452, 10454], [10455, 10459], [10460, 10472], [10472, 10473], [10474, 10477], [10478, 10487], [10488, 10495], [10496, 10498], [10499, 10506], [10507, 10509], [10510, 10517], [10518, 10521], [10522, 10535], [10536, 10538], [10539, 10548], [10549, 10551], [10552, 10559], [10559, 10560], [10562, 10566], [10567, 10568], [10569, 10579], [10580, 10586], [10587, 10589], [10590, 10591], [10592, 10598], [10599, 10603], [10604, 10607], [10608, 10611], [10612, 10615], [10616, 10637], [10637, 10639], [10641, 10643], [10644, 10647], [10648, 10654], [10655, 10663], [10664, 10666], [10667, 10675], [10675, 10676], [10677, 10680], [10681, 10685], [10686, 10690], [10691, 10694], [10695, 10698], [10699, 10710], [10711, 10713], [10714, 10715], [10716, 10720], [10721, 10723], [10724, 10727], [10728, 10738], [10739, 10745], [10746, 10747], [10747, 10748], [10748, 10773], [10773, 10774], [10774, 10777], [10777, 10778], [10779, 10784], [10785, 10787], [10788, 10794], [10795, 10797], [10798, 10799], [10799, 10800], [10800, 10838], [10838, 10840], [10840, 10848], [10848, 10849], [10849, 10852], [10852, 10853], [10856, 10865], [10866, 10869], [10870, 10880], [10881, 10885], [10886, 10890], [10891, 10894], [10895, 10904], [10905, 10912], [10913, 10921], [10922, 10928], [10929, 10930], [10931, 10938], [10939, 10945], [10946, 10948], [10949, 10952], [10953, 10963], [10964, 10968], [10969, 10973], [10974, 10983], [10984, 10994], [10995, 10998], [10999, 11002], [11003, 11006], [11007, 11022], [11022, 11024], [11025, 11028], [11029, 11030], [11031, 11035], [11036, 11038], [11039, 11042], [11043, 11048], [11049, 11056], [11057, 11064], [11065, 11069], [11070, 11080], [11081, 11086], [11087, 11090], [11091, 11101], [11102, 11106], [11107, 11111], [11112, 11114], [11115, 11119], [11120, 11126], [11126, 11127], [11128, 11131], [11132, 11134], [11135, 11141], [11142, 11144], [11145, 11154], [11154, 11155], [11156, 11159], [11160, 11168], [11169, 11175], [11176, 11180], [11181, 11187], [11187, 11188], [11189, 11196], [11196, 11197], [11198, 11200], [11201, 11205], [11206, 11209], [11210, 11213], [11214, 11221], [11222, 11233], [11234, 11236], [11237, 11244], [11245, 11252], [11252, 11253], [11256, 11259], [11260, 11263], [11264, 11271], [11272, 11283], [11284, 11291], [11292, 11295], [11296, 11303], [11304, 11306], [11307, 11310], [11311, 11317], [11318, 11323], [11324, 11331], [11332, 11335], [11336, 11343], [11343, 11345], [11346, 11351], [11352, 11357], [11358, 11362], [11363, 11366], [11367, 11374], [11375, 11378], [11379, 11385], [11386, 11394], [11395, 11400], [11401, 11408], [11410, 11417], [11418, 11421], [11422, 11432], [11433, 11442], [11443, 11449], [11450, 11456], [11457, 11458], [11459, 11464], [11465, 11466], [11467, 11477], [11478, 11487], [11488, 11492], [11493, 11505], [11506, 11507], [11508, 11514], [11515, 11523], [11524, 11527], [11528, 11532], [11533, 11540], [11541, 11543], [11544, 11552], [11553, 11556], [11557, 11563], [11564, 11566], [11567, 11577], [11577, 11578], [11582, 11588], [11589, 11590], [11590, 11591], [11592, 11599], [11600, 11603], [11604, 11608], [11609, 11616], [11617, 11619], [11620, 11628], [11629, 11633], [11634, 11639], [11640, 11648], [11649, 11656], [11657, 11661], [11662, 11667], [11668, 11670], [11671, 11675], [11676, 11679], [11680, 11690], [11691, 11694], [11695, 11703], [11704, 11706], [11707, 11711], [11712, 11714], [11715, 11723], [11724, 11732], [11733, 11738], [11739, 11741], [11742, 11749], [11750, 11763], [11764, 11767], [11768, 11774], [11775, 11782], [11783, 11787], [11788, 11792], [11793, 11796], [11796, 11797], [11798, 11803], [11804, 11806], [11807, 11813], [11814, 11818], [11819, 11829], [11830, 11838], [11839, 11849], [11850, 11860], [11861, 11863], [11864, 11874], [11875, 11884], [11885, 11889], [11890, 11893], [11894, 11898], [11899, 11907], [11907, 11908], [11909, 11914], [11915, 11920], [11921, 11927], [11928, 11930], [11931, 11937], [11938, 11948], [11949, 11955], [11956, 11960], [11961, 11964], [11965, 11968], [11969, 11971], [11972, 11973], [11974, 11984], [11985, 11996], [11996, 11997], [12002, 12008], [12009, 12010], [12010, 12014], [12014, 12015], [12016, 12022], [12023, 12024], [12024, 12026], [12026, 12027], [12029, 12033], [12034, 12061], [12062, 12063], [12069, 12073], [12073, 12074], [12083, 12089], [12090, 12091], [12092, 12093], [12093, 12099], [12099, 12100], [12100, 12117], [12117, 12118], [12118, 12121], [12121, 12122], [12131, 12142], [12143, 12144], [12145, 12146], [12146, 12150], [12151, 12155], [12156, 12161], [12162, 12165], [12166, 12170], [12171, 12181], [12182, 12192], [12193, 12201], [12202, 12206], [12207, 12211], [12212, 12214], [12215, 12225], [12225, 12226], [12227, 12229], [12230, 12234], [12235, 12239], [12240, 12243], [12244, 12248], [12249, 12251], [12252, 12256], [12257, 12264], [12264, 12265], [12266, 12276], [12277, 12280], [12281, 12283], [12284, 12295], [12296, 12301], [12302, 12306], [12307, 12309], [12310, 12314], [12315, 12322], [12322, 12324], [12330, 12339], [12339, 12340], [12349, 12357], [12358, 12359], [12360, 12365], [12366, 12369], [12370, 12378], [12379, 12381], [12382, 12387], [12396, 12399], [12400, 12406], [12406, 12407], [12407, 12408], [12408, 12409], [12410, 12412], [12413, 12419], [12420, 12422], [12423, 12432], [12441, 12444], [12445, 12450], [12450, 12451], [12451, 12452], [12452, 12453], [12454, 12456], [12457, 12458], [12459, 12461], [12462, 12467], [12468, 12473], [12474, 12479], [12480, 12484], [12493, 12496], [12497, 12502], [12502, 12503], [12503, 12504], [12504, 12505], [12506, 12508], [12509, 12510], [12511, 12513], [12514, 12520], [12521, 12522], [12531, 12534], [12535, 12541], [12541, 12542], [12542, 12543], [12543, 12544], [12545, 12547], [12548, 12554], [12554, 12555], [12555, 12556], [12556, 12557], [12558, 12561], [12562, 12568], [12568, 12569], [12569, 12570], [12570, 12571], [12572, 12574], [12575, 12576], [12577, 12579], [12580, 12583], [12584, 12591], [12600, 12603], [12604, 12610], [12610, 12611], [12611, 12612], [12612, 12613], [12614, 12616], [12617, 12618], [12619, 12621], [12622, 12628], [12629, 12630], [12639, 12642], [12643, 12649], [12649, 12650], [12650, 12652], [12652, 12653], [12654, 12656], [12657, 12658], [12659, 12661], [12662, 12668], [12669, 12670], [12679, 12682], [12683, 12689], [12689, 12690], [12690, 12692], [12692, 12693], [12694, 12696], [12697, 12698], [12699, 12701], [12702, 12708], [12709, 12710], [12719, 12722], [12723, 12729], [12729, 12730], [12730, 12732], [12732, 12733], [12734, 12736], [12737, 12741], [12742, 12744], [12745, 12749], [12750, 12752], [12753, 12759], [12760, 12766], [12776, 12778], [12779, 12783], [12784, 12786], [12787, 12791], [12792, 12794], [12795, 12800], [12801, 12805], [12806, 12809], [12810, 12815], [12816, 12822], [12831, 12834], [12835, 12841], [12841, 12842], [12842, 12846], [12846, 12847], [12847, 12851], [12851, 12852], [12853, 12854], [12855, 12859], [12860, 12862], [12863, 12867], [12877, 12879], [12880, 12893], [12893, 12894], [12894, 12903], [12904, 12905], [12905, 12918], [12919, 12921], [12922, 12926], [12926, 12927], [12927, 12933], [12933, 12934], [12934, 12938], [12938, 12939], [12939, 12943], [12943, 12945], [12954, 12957], [12958, 12959], [12959, 12965], [12965, 12966], [12966, 12970], [12970, 12971], [12971, 12977], [12977, 12978], [12978, 12982], [12982, 12983], [12983, 12987], [12987, 12989], [12989, 12993], [12993, 12994], [12995, 12997], [12998, 13001], [13002, 13004], [13005, 13011], [13011, 13012], [13012, 13016], [13016, 13017], [13017, 13023], [13023, 13024], [13024, 13028], [13028, 13029], [13029, 13033], [13033, 13035], [13035, 13039], [13039, 13040], [13041, 13043], [13044, 13047], [13048, 13050], [13051, 13057], [13057, 13058], [13058, 13062], [13062, 13063], [13063, 13069], [13069, 13070], [13070, 13074], [13074, 13075], [13075, 13079], [13079, 13081], [13081, 13085], [13085, 13086], [13087, 13089], [13090, 13093], [13094, 13096], [13097, 13103], [13103, 13104], [13104, 13108], [13108, 13109], [13109, 13115], [13115, 13116], [13116, 13120], [13120, 13121], [13121, 13125], [13125, 13127], [13127, 13131], [13131, 13132], [13133, 13135], [13136, 13139], [13139, 13140], [13150, 13152], [13153, 13157], [13158, 13160], [13161, 13162], [13163, 13167], [13167, 13168], [13169, 13175], [13176, 13178], [13179, 13181], [13182, 13186], [13187, 13191], [13192, 13195], [13196, 13204], [13213, 13216], [13217, 13223], [13223, 13224], [13224, 13228], [13228, 13229], [13229, 13235], [13235, 13236], [13236, 13240], [13240, 13241], [13241, 13245], [13245, 13247], [13247, 13250], [13250, 13251], [13252, 13253], [13254, 13262], [13272, 13274], [13275, 13282], [13283, 13290], [13291, 13296], [13297, 13298], [13299, 13308], [13309, 13316], [13325, 13328], [13329, 13330], [13343, 13345], [13346, 13350], [13351, 13354], [13355, 13364], [13365, 13370], [13371, 13373], [13374, 13379], [13380, 13383], [13384, 13390], [13403, 13409], [13409, 13410], [13410, 13414], [13414, 13415], [13415, 13421], [13421, 13422], [13422, 13426], [13426, 13427], [13427, 13431], [13431, 13433], [13434, 13436], [13437, 13447], [13448, 13451], [13486, 13488], [13489, 13493], [13494, 13501], [13502, 13506], [13507, 13515], [13516, 13522], [13523, 13525], [13526, 13530], [13531, 13534], [13535, 13536], [13537, 13548], [13549, 13555], [13568, 13571], [13572, 13575], [13576, 13577], [13578, 13580], [13581, 13582], [13582, 13583], [13584, 13586], [13587, 13588], [13588, 13596], [13597, 13598], [13599, 13602], [13602, 13603], [13604, 13605], [13606, 13607], [13607, 13609], [13622, 13623], [13636, 13638], [13639, 13643], [13644, 13647], [13648, 13654], [13655, 13661], [13661, 13662], [13663, 13666], [13667, 13674], [13675, 13678], [13679, 13683], [13684, 13686], [13687, 13693], [13706, 13712], [13712, 13713], [13713, 13714], [13714, 13715], [13715, 13718], [13718, 13721], [13721, 13727], [13728, 13731], [13732, 13738], [13738, 13739], [13739, 13740], [13740, 13741], [13741, 13744], [13744, 13745], [13745, 13746], [13746, 13747], [13748, 13750], [13751, 13757], [13757, 13758], [13758, 13759], [13759, 13760], [13760, 13763], [13763, 13764], [13764, 13765], [13765, 13766], [13767, 13770], [13771, 13777], [13777, 13778], [13778, 13779], [13779, 13780], [13780, 13783], [13783, 13784], [13784, 13785], [13785, 13786], [13787, 13789], [13790, 13791], [13792, 13795], [13796, 13802], [13802, 13803], [13803, 13804], [13804, 13805], [13805, 13808], [13808, 13809], [13809, 13811], [13811, 13812], [13813, 13815], [13816, 13820], [13821, 13824], [13825, 13831], [13831, 13832], [13832, 13833], [13833, 13834], [13834, 13837], [13837, 13838], [13838, 13842], [13842, 13843], [13844, 13845], [13846, 13850], [13851, 13854], [13855, 13861], [13861, 13862], [13862, 13863], [13863, 13864], [13864, 13867], [13867, 13868], [13868, 13872], [13872, 13873], [13874, 13875], [13876, 13884], [13885, 13888], [13901, 13903], [13904, 13908], [13909, 13912], [13913, 13918], [13919, 13922], [13923, 13934], [13934, 13935], [13935, 13944], [13945, 13947], [13948, 13955], [13968, 13974], [13974, 13975], [13975, 13976], [13976, 13977], [13977, 13980], [13980, 13981], [13981, 13985], [13985, 13986], [13986, 13992], [13992, 13993], [13993, 13994], [13994, 13995], [13995, 13998], [13998, 13999], [13999, 14003], [14003, 14004], [14004, 14008], [14008, 14010], [14011, 14013], [14014, 14015], [14016, 14019], [14020, 14026], [14026, 14027], [14027, 14028], [14028, 14029], [14029, 14032], [14032, 14033], [14033, 14037], [14037, 14038], [14038, 14044], [14044, 14045], [14045, 14046], [14046, 14047], [14047, 14050], [14050, 14051], [14051, 14055], [14055, 14056], [14056, 14060], [14060, 14062], [14062, 14063], [14063, 14064], [14065, 14067], [14068, 14074], [14074, 14075], [14075, 14076], [14076, 14077], [14077, 14080], [14080, 14081], [14081, 14085], [14085, 14087], [14087, 14091], [14104, 14105], [14114, 14115], [14116, 14117], [14124, 14128], [14129, 14153], [14154, 14155], [14161, 14165], [14165, 14166], [14175, 14181], [14182, 14183], [14184, 14185], [14185, 14191], [14191, 14192], [14192, 14209], [14209, 14210], [14210, 14213], [14213, 14214], [14223, 14234], [14235, 14236], [14237, 14238], [14238, 14242], [14243, 14247], [14248, 14253], [14254, 14257], [14258, 14262], [14263, 14273], [14274, 14278], [14279, 14286], [14287, 14297], [14298, 14302], [14303, 14310], [14310, 14311], [14312, 14314], [14315, 14319], [14320, 14324], [14325, 14328], [14329, 14333], [14334, 14336], [14337, 14341], [14342, 14349], [14349, 14350], [14351, 14361], [14362, 14365], [14366, 14368], [14369, 14380], [14381, 14386], [14387, 14391], [14392, 14394], [14395, 14399], [14400, 14407], [14407, 14409], [14415, 14424], [14424, 14425], [14434, 14442], [14443, 14444], [14445, 14450], [14451, 14454], [14455, 14463], [14464, 14466], [14467, 14472], [14481, 14484], [14485, 14491], [14491, 14492], [14492, 14493], [14493, 14494], [14495, 14497], [14498, 14504], [14505, 14507], [14508, 14517], [14526, 14529], [14530, 14535], [14535, 14536], [14536, 14537], [14537, 14538], [14539, 14541], [14542, 14543], [14544, 14546], [14547, 14552], [14553, 14558], [14559, 14564], [14565, 14569], [14578, 14581], [14582, 14587], [14587, 14588], [14588, 14589], [14589, 14590], [14591, 14593], [14594, 14595], [14596, 14598], [14599, 14605], [14606, 14607], [14616, 14619], [14620, 14626], [14626, 14627], [14627, 14628], [14628, 14629], [14630, 14632], [14633, 14639], [14639, 14640], [14640, 14641], [14641, 14642], [14643, 14646], [14647, 14653], [14653, 14654], [14654, 14655], [14655, 14656], [14657, 14659], [14660, 14661], [14662, 14664], [14665, 14668], [14669, 14676], [14685, 14688], [14689, 14695], [14695, 14696], [14696, 14697], [14697, 14698], [14699, 14701], [14702, 14703], [14704, 14706], [14707, 14713], [14714, 14715], [14724, 14727], [14728, 14734], [14734, 14735], [14735, 14737], [14737, 14738], [14739, 14741], [14742, 14743], [14744, 14746], [14747, 14753], [14754, 14755], [14764, 14767], [14768, 14774], [14774, 14775], [14775, 14777], [14777, 14778], [14779, 14781], [14782, 14783], [14784, 14786], [14787, 14793], [14794, 14795], [14804, 14807], [14808, 14814], [14814, 14815], [14815, 14817], [14817, 14818], [14819, 14821], [14822, 14826], [14827, 14829], [14830, 14834], [14835, 14837], [14838, 14844], [14845, 14851], [14861, 14864], [14865, 14868], [14869, 14872], [14873, 14874], [14875, 14877], [14878, 14879], [14879, 14880], [14881, 14883], [14884, 14885], [14885, 14893], [14894, 14895], [14896, 14899], [14899, 14900], [14901, 14902], [14903, 14904], [14904, 14905], [14906, 14907], [14916, 14917], [14926, 14928], [14929, 14933], [14934, 14937], [14938, 14944], [14945, 14951], [14951, 14952], [14953, 14956], [14957, 14964], [14965, 14968], [14969, 14973], [14974, 14976], [14977, 14983], [14992, 14998], [14998, 14999], [14999, 15000], [15000, 15001], [15001, 15004], [15004, 15007], [15007, 15013], [15014, 15017], [15018, 15024], [15024, 15025], [15025, 15026], [15026, 15027], [15027, 15030], [15030, 15031], [15031, 15032], [15032, 15033], [15034, 15036], [15037, 15043], [15043, 15044], [15044, 15045], [15045, 15046], [15046, 15049], [15049, 15050], [15050, 15051], [15051, 15052], [15053, 15056], [15057, 15063], [15063, 15064], [15064, 15065], [15065, 15066], [15066, 15069], [15069, 15070], [15070, 15071], [15071, 15072], [15073, 15075], [15076, 15077], [15078, 15081], [15082, 15088], [15088, 15089], [15089, 15090], [15090, 15091], [15091, 15094], [15094, 15095], [15095, 15097], [15097, 15098], [15099, 15101], [15102, 15106], [15107, 15110], [15111, 15117], [15117, 15118], [15118, 15119], [15119, 15120], [15120, 15123], [15123, 15124], [15124, 15128], [15128, 15129], [15130, 15131], [15132, 15137], [15138, 15141], [15142, 15148], [15148, 15149], [15149, 15150], [15150, 15151], [15151, 15154], [15154, 15155], [15155, 15159], [15159, 15160], [15161, 15162], [15163, 15171], [15180, 15182], [15183, 15187], [15188, 15191], [15192, 15196], [15197, 15204], [15205, 15207], [15208, 15211], [15212, 15219], [15219, 15220], [15220, 15222], [15223, 15225], [15226, 15233], [15234, 15237], [15238, 15246], [15247, 15252], [15253, 15259], [15268, 15271], [15272, 15276], [15276, 15277], [15277, 15284], [15284, 15285], [15285, 15286], [15286, 15287], [15287, 15290], [15290, 15291], [15291, 15295], [15295, 15296], [15296, 15302], [15302, 15303], [15303, 15304], [15304, 15305], [15305, 15308], [15308, 15309], [15309, 15313], [15313, 15314], [15314, 15318], [15318, 15320], [15320, 15321], [15321, 15322], [15323, 15324], [15324, 15325], [15325, 15328], [15328, 15329], [15329, 15333], [15333, 15334], [15334, 15340], [15340, 15341], [15341, 15342], [15342, 15343], [15343, 15346], [15346, 15347], [15347, 15351], [15351, 15352], [15352, 15356], [15356, 15358], [15358, 15364], [15364, 15365], [15365, 15366], [15366, 15367], [15367, 15370], [15370, 15371], [15371, 15375], [15375, 15377], [15377, 15381], [15381, 15382], [15383, 15384], [15385, 15389], [15398, 15399], [15400, 15401], [15408, 15412], [15413, 15444], [15445, 15446], [15452, 15456], [15456, 15457], [15466, 15472], [15473, 15474], [15475, 15476], [15476, 15482], [15482, 15483], [15483, 15500], [15500, 15501], [15501, 15504], [15504, 15505], [15514, 15525], [15526, 15527], [15528, 15529], [15529, 15536], [15537, 15547], [15548, 15551], [15552, 15560], [15561, 15569], [15570, 15575], [15576, 15578], [15579, 15586], [15587, 15590], [15591, 15598], [15598, 15599], [15608, 15611], [15612, 15613], [15614, 15615], [15615, 15647], [15647, 15648], [15654, 15661], [15661, 15662], [15671, 15676], [15677, 15678], [15679, 15680], [15680, 15693], [15693, 15694], [15695, 15700], [15709, 15714], [15715, 15716], [15717, 15718], [15718, 15731], [15731, 15732], [15733, 15737], [15743, 15752], [15752, 15753], [15762, 15768], [15768, 15769], [15769, 15770], [15770, 15771], [15772, 15774], [15775, 15781], [15782, 15785], [15786, 15792], [15792, 15793], [15793, 15799], [15799, 15800], [15800, 15804], [15804, 15806], [15807, 15809], [15810, 15820], [15821, 15824], [15833, 15834], [15847, 15850], [15851, 15853], [15854, 15858], [15859, 15862], [15875, 15876], [15893, 15895], [15895, 15896], [15896, 15903], [15903, 15905], [15905, 15912], [15912, 15913], [15913, 15916], [15916, 15919], [15919, 15943], [15943, 15945], [15946, 15949], [15966, 15968], [15968, 15969], [15969, 15976], [15976, 15978], [15978, 15986], [15986, 15987], [15987, 15990], [15990, 15992], [15993, 15994], [15994, 16008], [16008, 16010], [16011, 16014], [16031, 16033], [16033, 16034], [16034, 16041], [16041, 16043], [16043, 16049], [16049, 16050], [16050, 16053], [16053, 16055], [16056, 16057], [16057, 16074], [16074, 16076], [16077, 16080], [16097, 16099], [16099, 16100], [16100, 16107], [16107, 16109], [16109, 16117], [16117, 16118], [16118, 16121], [16121, 16123], [16124, 16125], [16125, 16146], [16146, 16148], [16161, 16162], [16171, 16172], [16176, 16177], [16184, 16188], [16189, 16223], [16224, 16225], [16231, 16235], [16235, 16236], [16245, 16251], [16252, 16253], [16254, 16255], [16255, 16261], [16261, 16262], [16262, 16279], [16279, 16280], [16280, 16283], [16283, 16284], [16293, 16304], [16305, 16306], [16307, 16308], [16308, 16315], [16316, 16324], [16325, 16335], [16336, 16339], [16340, 16348], [16349, 16357], [16358, 16363], [16364, 16366], [16367, 16374], [16375, 16377], [16378, 16385], [16385, 16386], [16387, 16391], [16392, 16396], [16397, 16399], [16400, 16412], [16413, 16418], [16419, 16421], [16422, 16427], [16428, 16431], [16432, 16434], [16435, 16436], [16437, 16443], [16444, 16446], [16447, 16451], [16451, 16453], [16462, 16465], [16466, 16467], [16468, 16469], [16469, 16501], [16501, 16502], [16508, 16515], [16515, 16516], [16525, 16530], [16531, 16532], [16533, 16534], [16534, 16547], [16547, 16548], [16549, 16554], [16563, 16568], [16569, 16570], [16571, 16572], [16572, 16585], [16585, 16586], [16587, 16591], [16597, 16606], [16606, 16607], [16616, 16622], [16622, 16623], [16623, 16624], [16624, 16625], [16626, 16628], [16629, 16635], [16636, 16639], [16640, 16646], [16646, 16647], [16647, 16653], [16653, 16654], [16654, 16658], [16658, 16660], [16661, 16663], [16664, 16674], [16675, 16678], [16687, 16688], [16701, 16704], [16705, 16707], [16708, 16712], [16713, 16715], [16728, 16729], [16746, 16748], [16748, 16749], [16749, 16756], [16756, 16758], [16758, 16765], [16765, 16766], [16766, 16769], [16769, 16772], [16772, 16796], [16796, 16798], [16799, 16802], [16819, 16821], [16821, 16822], [16822, 16829], [16829, 16831], [16831, 16839], [16839, 16840], [16840, 16843], [16843, 16845], [16846, 16847], [16847, 16861], [16861, 16863], [16864, 16867], [16884, 16886], [16886, 16887], [16887, 16894], [16894, 16896], [16896, 16902], [16902, 16903], [16903, 16906], [16906, 16908], [16909, 16910], [16910, 16927], [16927, 16929], [16930, 16933], [16950, 16952], [16952, 16953], [16953, 16960], [16960, 16962], [16962, 16970], [16970, 16971], [16971, 16974], [16974, 16976], [16977, 16978], [16978, 16999], [16999, 17001], [17014, 17015], [17024, 17025], [17029, 17030], [17037, 17041], [17042, 17068], [17069, 17070], [17076, 17080], [17080, 17081], [17090, 17096], [17097, 17098], [17099, 17100], [17100, 17106], [17106, 17107], [17107, 17124], [17124, 17125], [17125, 17128], [17128, 17129], [17138, 17149], [17150, 17151], [17152, 17153], [17153, 17160], [17161, 17169], [17170, 17176], [17177, 17179], [17180, 17190], [17191, 17198], [17198, 17199], [17199, 17202], [17203, 17208], [17209, 17211], [17212, 17219], [17220, 17226], [17226, 17227], [17236, 17239], [17240, 17241], [17242, 17243], [17243, 17275], [17275, 17276], [17282, 17291], [17291, 17292], [17301, 17307], [17307, 17308], [17308, 17309], [17309, 17310], [17311, 17313], [17314, 17320], [17321, 17324], [17325, 17331], [17331, 17332], [17332, 17338], [17338, 17339], [17339, 17343], [17343, 17345], [17346, 17348], [17349, 17359], [17360, 17363], [17372, 17374], [17374, 17375], [17375, 17382], [17382, 17384], [17384, 17400], [17400, 17402], [17411, 17414], [17415, 17418], [17419, 17421], [17421, 17422], [17422, 17429], [17429, 17431], [17431, 17463], [17463, 17465], [17466, 17467], [17470, 17473], [17474, 17475], [17476, 17480], [17481, 17483], [17484, 17494], [17495, 17501], [17502, 17509], [17510, 17514], [17515, 17519], [17519, 17520], [17521, 17529], [17530, 17534], [17535, 17545], [17546, 17553], [17554, 17557], [17558, 17565], [17566, 17576], [17577, 17579], [17580, 17590], [17591, 17593], [17594, 17603], [17603, 17604], [17605, 17616], [17617, 17619], [17620, 17631], [17632, 17638], [17639, 17641], [17642, 17649], [17650, 17653], [17654, 17658], [17658, 17659], [17660, 17665], [17666, 17671], [17672, 17677], [17678, 17683], [17684, 17689], [17690, 17700], [17701, 17704], [17705, 17712], [17713, 17720], [17721, 17732], [17733, 17737], [17738, 17749], [17749, 17751], [17752, 17755], [17756, 17770], [17770, 17773], [17774, 17780], [17781, 17787], [17788, 17795], [17796, 17798], [17799, 17808], [17809, 17814], [17815, 17822], [17822, 17823], [17824, 17830], [17831, 17832], [17833, 17843], [17844, 17847], [17848, 17855], [17856, 17862], [17863, 17865], [17866, 17876], [17877, 17881], [17882, 17885], [17886, 17888], [17889, 17893], [17894, 17896], [17897, 17903], [17904, 17911], [17912, 17919], [17919, 17920], [17921, 17927], [17927, 17928], [17928, 17931], [17931, 17932], [17933, 17940], [17940, 17941], [17941, 17944], [17945, 17948], [17949, 17956], [17956, 17957], [17957, 17960], [17960, 17961], [17965, 17971], [17972, 17973], [17973, 17974], [17975, 17981], [17982, 17986], [17987, 17989], [17990, 17991], [17992, 17999], [18000, 18010], [18011, 18018], [18019, 18026], [18027, 18034], [18035, 18042], [18043, 18050], [18050, 18051], [18053, 18056], [18057, 18064], [18065, 18072], [18073, 18075], [18076, 18083], [18084, 18085], [18085, 18086], [18086, 18124], [18124, 18126], [18126, 18134], [18134, 18135], [18135, 18138], [18139, 18142], [18143, 18150], [18151, 18158], [18159, 18163], [18164, 18171], [18171, 18172], [18172, 18175], [18176, 18179], [18180, 18186], [18186, 18187], [18187, 18190], [18192, 18199], [18199, 18200], [18200, 18203], [18204, 18206], [18207, 18212], [18213, 18220], [18221, 18228], [18228, 18229], [18229, 18232], [18233, 18235], [18236, 18242], [18242, 18243], [18243, 18246], [18247, 18250], [18251, 18258], [18258, 18259], [18259, 18262], [18263, 18270], [18271, 18278], [18279, 18286], [18286, 18287], [18287, 18290], [18292, 18302], [18303, 18310], [18310, 18311], [18311, 18314], [18314, 18315], [18316, 18324], [18325, 18327], [18328, 18332], [18333, 18341], [18342, 18346], [18347, 18352], [18353, 18355], [18356, 18361], [18362, 18369], [18369, 18370], [18370, 18373], [18374, 18383], [18384, 18391], [18392, 18398], [18398, 18399], [18399, 18402], [18402, 18403], [18404, 18406], [18407, 18411], [18412, 18416], [18417, 18423], [18424, 18432], [18433, 18440], [18440, 18441], [18441, 18444], [18445, 18454], [18455, 18462], [18463, 18470], [18470, 18471], [18471, 18474], [18474, 18475], [18476, 18480], [18481, 18487], [18488, 18490], [18491, 18492], [18492, 18503], [18504, 18506], [18507, 18508], [18508, 18511], [18512, 18517], [18518, 18521], [18522, 18528], [18529, 18535], [18535, 18536], [18537, 18544], [18545, 18553], [18554, 18557], [18558, 18565], [18566, 18570], [18571, 18574], [18575, 18579], [18580, 18585], [18586, 18589], [18590, 18594], [18595, 18602], [18603, 18607], [18608, 18615], [18615, 18616], [18617, 18620], [18621, 18628], [18628, 18629], [18630, 18634], [18635, 18641], [18642, 18644], [18645, 18648], [18649, 18657], [18658, 18669], [18670, 18674], [18675, 18678], [18679, 18682], [18683, 18690], [18691, 18695], [18696, 18699], [18700, 18706], [18707, 18709], [18710, 18712], [18713, 18721], [18721, 18722], [18723, 18729], [18730, 18740], [18742, 18749], [18749, 18750], [18750, 18753], [18753, 18754], [18756, 18820], [18821, 18829], [18831, 18837], [18837, 18838], [18838, 18841], [18841, 18842], [18844, 18908], [18909, 18914], [18915, 18922], [18923, 18933], [18938, 18940], [18943, 18952], [18956, 18961], [18963, 18968], [18969, 18977], [18981, 18986], [18988, 18992], [18993, 19002], [19006, 19011], [19013, 19019], [19020, 19029], [19030, 19034], [19038, 19043], [19043, 19047], [19049, 19052], [19053, 19065], [19069, 19074], [19074, 19078], [19080, 19087], [19088, 19097], [19097, 19098], [19098, 19106], [19107, 19120], [19123, 19130], [19131, 19138], [19139, 19149], [19154, 19162], [19162, 19163], [19163, 19164], [19164, 19165], [19168, 19177], [19178, 19182], [19186, 19193], [19194, 19202], [19203, 19208], [19209, 19217], [19218, 19227], [19228, 19230], [19231, 19237], [19238, 19245], [19246, 19254], [19255, 19259], [19260, 19267], [19269, 19297], [19298, 19327], [19331, 19333], [19334, 19342], [19344, 19351], [19351, 19352], [19352, 19354], [19354, 19356], [19356, 19371]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 19372, "jlasky", "content", "human gold"]]}, {"type": "Modify Registry (T1112)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1615, 1683], [990, 1047], [1959, 2017]]}, {"type": "Native API (T1106)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1713, 1768], [1172, 1225], [1512, 1545], [6727, 6762], [7600, 7634], [8688, 8807], [8529, 8594], [10604, 10639], [10995, 11024]]}, {"type": "Obfuscated Files or Information (T1027)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2794, 2813], [2845, 2911], [3048, 3109], [2961, 3006], [3732, 3761], [3471, 3637], [4842, 4972], [6137, 6232], [7216, 7325], [5429, 5464]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3123, 3150], [3184, 3275], [5027, 5106], [5516, 5539], [6071, 6109], [7076, 7120], [9958, 9994], [10034, 10098], [10100, 10177], [10241, 10279], [10891, 10921]]}, {"type": "Hidden Files and Directories (T1564.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3947, 3988]]}, {"type": "File and Directory Discovery (T1083)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6416, 6482], [9004, 9077]]}, {"type": "Multi-hop Proxy (T1090.003)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": []}, {"type": "System Information Discovery (T1082)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[5954, 6007]]}, {"type": "Process Injection (T1055)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[10474, 10495]]}, {"type": "Query Registry (T1012)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2092, 2253], [4093, 4134]]}], "version": 2}