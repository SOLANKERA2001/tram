{"signal": "title: Breaking Pedersen Hashes in Practice\nurl: https://research.nccgroup.com/2023/03/22/breaking-pedersen-hashes-in-practice/\n\nThe Pedersen hash function has gained popularity due to its efficiency in the arithmetic circuits used in zero-knowledge proof systems. Hash functions are a crucial primitive in cryptography, and zero-knowledge proof systems often make heavy use of them, for example when computing Merkle tree roots and paths. Instead of being based on complex bit-fiddling operations like its standard counterparts (of the SHA or BLAKE families, for example), the Pedersen hash is an algebraic hash function that is simply computed as a linear combination of points on an elliptic curve. They are therefore fairly efficient to compute in zero-knowledge circuits since their computations relies on field arithmetic, contrarily to the more traditional hash functions that have no convenient mathematical structure.\n\nBased on foundational work from the early 1990s that also led to the formalization of commitment schemes (see for example [CHP91] and [Ped91]), the (originally-named) PedersenHash function was recently put in the spotlight when Zcash researchers Sean Bowe and Daira Hopwood developed specific optimizations for its efficient instantiation in zk-SNARK circuits [Zcash].\nHowever, even though the security of the Pedersen hash function is well-understood (since it relies on the assumed hardness of the discrete logarithm problem), a few easily-overlooked subtleties in its definition have the potential to invalidate its security guarantees and thus completely break the security of the systems based on it.\nIn this blog post, we start by describing the Pedersen hash function, the security guarantees it provides and some of the underlying assumptions it relies on. We then show how some of the security properties can be broken when the requirements are not met. The definition and the different attacks are accompanied by a toy example to illustrate the various concepts more concretely.\nTable of Contents\nTable of ContentsDefinitionSecurity Properties and RequirementsOptimizationsVulnerability 1: Non-unique x-coordinateVulnerability 2: Related GeneratorsVulnerability 3: Variable-length InputConclusionAcknowledgementsReferences\nDefinition\nLet M be the message that we wish to hash (represented as a bit string of fixed length k ⋅ r), and let G1, G2, …, Gk be generators of the prime-order subgroup of our chosen elliptic curve group. These generators must be sampled uniformly at random, such that no relationship between them is known. Split the message M into k chunks of r bits each: M = M1M2 … Mk. The Pedersen hash is defined as the linear combination of the points with the encoding of the message chunks:\nH(M) = H(M1M2 … Mk ) = ⟨M1⟩ ⋅ G1 + ⟨M2⟩ ⋅ G2 + … + ⟨Mk⟩ ⋅ Gk\nWhere the function ⟨⋅⟩, commonly referred to as the encoding function, converts a bit string into a scalar element (for our purpose, scalar can be interpreted as an integer less than the subgroup order).\nNote that the output of the hash function defined above is a point on the curve. In practice, the desired output may be a field element, in which case a single coordinate of the resulting point is often used as the hash.\nToy Example: Pedersen Hash DefinitionWe illustrate the Pedersen Hash function and its security properties and requirements using a toy example, with accompanying code in SageMath. We use an elliptic curve with a prime group order, which is insecure by cryptographic standards due to the prime being small.We select the elliptic curve defined by the curve equation y2 = x3 + x + 42, defined over the finite field of size 127. The group of points on this curve has order 139, which is prime. We pick two generators of this group, G1 = E(1, 60) and G2 = E(2, 59). Our toy hash function computes the Pedersen hash as followsH(M) = H(M1 M2) = â¨M1â© â G1 + â¨M2â© â G2Initially, we restrict our message length to be 12 bits, such that the individual message chunks M1 and M2 are 6 bits each.Additionally, we need to select an encoding function, mapping 6-bit chunks into a scalar. As a first attempt, let us simply interpret the 6-bit value as an integer encoded in little-endian bits, resulting in an integer in the range {0, 63}. We refer to this encoding as the “identity” encoding (IdentityEncode() in the code below).The following code excerpt first specifies the chosen elliptic curve, picks two generators and defines a few helper functions before defining the GenericPedersenHash() function. \n# First we pick an elliptic curve with prime order:\nF = GF(127)\nE = EllipticCurve(F, [F(1), F(42)])\nassert E.order().is_prime()\nprint(f\"{E} with order {E.order()}\")\n# Elliptic Curve defined by y^2 = x^3 + x + 42 over Finite Field of size 127 with order 139\n\n# We pick two generators. As the curve has prime order, all non-identity points\n# are generators\nG1 = E(1, 60)\nG2 = E(2, 59)\nGENERATORS = [G1, G2]\n\ndef IdentityEncode(lebs):\n    \"\"\"\n    Encodes a binary string (assumed to be in little-endian bit order)\n    to an integer\n    \"\"\"\n    return int(lebs[::-1], 2)\n\ndef EncodeMessage(msg, encode_function):\n    \"\"\"\n    Helper function which encodes a message given a variable\n    encode function\n    \"\"\"\n    return [encode_function(x) for x in msg]\n\ndef GenericPedersenHash(generators, encoded_chunks):\n    \"\"\"\n    Helper function for computing the Pedersen hash of a message\n\n    The hash is computed as a linear combination of of the generators with\n    (already encoded) chunks used as scalar multiples\n    \"\"\"\n    assert len(generators) == len(encoded_chunks), \"Incompatible lengths\"\n\n    res = E(0)\n    for chunk, generator in zip(encoded_chunks, generators):\n        res += chunk * generator\n    return res\n\ndef PedersenHash(message, encode_function=IdentityEncode, generators=GENERATORS):\n    \"\"\"\n    Computes the Pedersen hash of a message\n\n    Input: a message\n    Output: the Pedersen Hash of the message\n\n    Optional:\n        encode_function: the encoding function to break a message into integers\n        generators: elements G ∈ E which generate E\n    \"\"\"\n    encoded_message = EncodeMessage(message, encode_function)\n    return GenericPedersenHash(generators, encoded_message)\nUsing the above, the code then showcases how the message [\"010101\", \"000111\"] is hashed, resulting in the point (3, 31).\n# ============================ #\n#   Example of Pedersen Hash   #\n# ============================ #\n\nmessage = [\"010101\", \"000111\"]  # M = [42, 56]\nH = PedersenHash(message)\nprint(f\"Hash of {message} = {H}\")\n# Hash of  ['010101', '000111']  =  (3 : 31 : 1)\n\n# We check that the Pedersen hash of the message is equivalent to computing\n# the linear combination of the generator points and the integers representations\n# of the message chunks\nassert H == 42 * G1 + 56 * G2\nSecurity Properties and Requirements\nThe Pedersen Hash function is collision-resistant for fixed-length input, provided the underlying encoding function is injective. This security property and the definition of the hash function presented above have a few subtleties, which we now explore in more depth.\nThe first caveat is that the hash function is not collision-resistant for variable-length inputs. It is also distinguishable from a random oracle and as such this function should not be used as a pseudorandom function (PRF).\nA second important aspect is that in order for this hash function to provide the desired security properties (namely, collision-resistance), it is necessary for the underlying encoding function to be injective. Recall that the property of an injective function is that it maps distinct elements of its domain to distinct elements of its codomain. In the context of the encoding function ⟨⋅⟩, this means that there are no two different message chunks Mi and Mj that result in the same encoded output, see the illustration below.\n\n\nThe encoding function maps bit strings to scalars. In the toy example above, we have seen an example of a simple encoding function where the bit strings were interpreted in little-endian as integers and therefore was clearly injective (within the parameters of our example).\nBut even with the simple encoding function used in the toy example, care should be taken to ensure that the allowed size of the message we hash is bounded. Indeed, if we allowed larger bit strings to be hashed (such that their encoding is larger than the subgroup order), it would be easy for an attacker to compute collisions. This is because for any point in the subgroup, multiplication by the subgroup order, call it r, yields the point-at-infinity; that is r ⋅ G = 0. Thus, multiplying the point G by a scalar a produces the same result as multiplying G by a + k ⋅ r, for any value of k, since\n(a + k ⋅ r) ⋅ G = a ⋅ G + k ⋅ r ⋅ G = a ⋅ G + k ⋅ 0 = a ⋅ G\nThe example below illustrates how hashing messages larger than the expected size may lead to collisions.\nToy Example: Collisions Since the subgroup order is 139, adding this quantity (or multiples of it) to the scalar factors of the linear combination performed by the Pedersen hash function results in the same hash output. Equivalently, computing the binary representation of these quantities and hashing them using our toy Pedersen hash function also results in a collision, as shown in the code snippet below.Notice that the colliding message chunks are larger than 6 bits, further demonstrating that the function is not collision-resistant for variable-length inputs.\n# Since the subgroup order is 139, adding this quantity (or multiples of it)\n# to the scalar factors of the linear combination computation performed by\n# the Pedersen hash function results in the same hash output, as can be seen below.\n\nH2 = (42 + 139) * G1 + (56 + 2 * 139) * G2\nassert H == H2\n\ncolliding_message = [\"10101101\", \"011100101\"]\n\n# Ensures encoding colliding_message results in the integers\n# used explicitly above \nassert EncodeMessage(colliding_message, IdentityEncode) == [42 + 139, 56 + 2 * 139]\n\nH3 = PedersenHash(colliding_message)\nassert H == H3\nRecall that the output of the hash function is a point on the curve. When implementations require this output to be a field element, they sometimes extract the first coordinate of the resulting curve point, which they use as the output of the hash function. Crucially, this process can also lead to collisions. Indeed, when using a Weierstrass curve with affine coordinates, the negation of a point P = (x, y) is -P = (x, -y). Thus, when computing the Pedersen hash and taking only the first coordinate as a result, there is a natural collision, namely the negation of the point. It is important to ensure that the encoding process followed by the scalar multiplication cannot produce two points that have the same coordinate extracted as output. For example, if using affine coordinates and a curve equation in Weierstrass form, one must ensure that the function cannot produce both P and -P if only the x-coordinate is outputted.\nFinally, another important requirement of the Pedersen hash function is that the various generators have to be sampled uniformly at random. Specifically, the discrete logarithm of any generator with respect to another one should not be known, not even to the protocol designers. Implementers traditionally use hash-to-curve algorithms (a process which does not reveal the discrete logarithm of the output point) and nothing-up-my-sleeve numbers, to prove that the inputs to the hash-to-curve process were selected honestly. Odd-looking sets of generators or opaqueness in the generation process could be indicative of a backdoor.\nOptimizations\nIn practice, implementations typically use slightly more complex procedures to encode bit strings to scalar. In doing so, they are able to compute point multiplications in a more efficient way, though special care needs to be taken to ensure the resulting encoding function is injective, as discussed in the previous section.\nThe simple Pedersen Hash function presented so far can be significantly sped up in the specific contexts used by zero-knowledge proof systems. Since the generators are fixed (and known ahead of time), a method called windowed scalar multiplication can be used to more efficiently perform the multiplication by pre-computing and storing successive powers of the generators.\nWindowed scalar multiplication leverages the simple observation that the multiplication of a curve point by a large scalar can be decomposed.\nFor example, assume our scalar is a 6-bit value b = b0b1b2b3b4b5, and we wish to compute the scalar multiplication b ⋅ G. We have\n b ⋅ G = b0 ⋅ G + 2b1 ⋅ G + 22b2 ⋅ G + 23b3 ⋅ G + 24b4 ⋅ G + 25b5 ⋅ G= (b0 + 2b1 + 22b2) ⋅ G + 23 (b3 + 2b4 + 22b5) ⋅ G\nSince the quantities in the parentheses can take any value in the {0, 7} range, one can precompute the eight values in the set {0, G, 2 ⋅ G, 3 ⋅ G, …, 7 ⋅ G} and perform a variant of a double-and-add algorithm, where at each step the doubling operation is repeated 3 times, and the adding operation involves adding one element from the pre-computed set.\nThis variant uses the same amount of doubling operation as the standard binary double-and-add algorithm, but it uses fewer point additions (which are generally slower than doubling).\nPushing the optimizations even further, the Zcash team decided to use a signed version of the windowed-multiplication method. Specifically, they use a windowed scalar multiplication with an encoding where 3-bit chunks are mapped to elements of the range {-4, …, 4} {0}, instead of the range {0, …, 7}.\nNothing forces alternative implementations of the Pedersen Hash to follow the exact same encoding rules, though in practice many do. The encoding function ⟨⋅⟩ defined in the Zcash protocol maps element binary strings of fixed length 3 ⋅ c to a scalar as follows:\n\nwhere in turn, the enc() function maps 3-bit chunks m = b0 b1 b2 into elements of the range {-4, …, 4} {0} as\n\nThis choice of using a signed-digit windowed-multiplication method reduces the number of constraints necessary in the arithmetic circuit (since the lookup of the negation of a point can be performed efficiently as negating a point only requires a single constraint).\nAs discussed above, the security of Pedersen hash is guaranteed provided the encoding scheme is injective. Using such a signed representation introduces a few subtleties that should be kept in check in order to ensure the collision-resistance of the hash function. The Zcash team proved (in Theorem 5.4.1. on page 78 of the protocol specifications, see [Zcash]) that the encoding function is indeed injective and thus provides the desired collision-resistance. They did so by showing that the range of the encoding function ⟨⋅⟩ was a subset of the range , with  the group order. This ensures that there is no overflow of the scalar multiplier that would be “wrapped-around”, which would lead to multiple inputs mapping to the same output, a break of the injectivity requirement.\nThey also ensured that the coordinate extraction procedure couldn’t lead to the issue described above where both a point and its negation could be obtained as the output of the hash procedure, which could be problematic when using the first-coordinate as the hash output. This is described in Section 5.4.9.4 of the Zcash protocol specification [Zcash], where Lemma 5.4.7 shows that if a given point P = (u, v) is on the curve, then (u, -v) is not on the curve, thereby preventing the potential issue outlined.\nNote the importance of restricting 0 in the output range of the encoding function. If the zero scalar could be obtained, the result of the scalar multiplication would be the point-at-infinity, which could lead to unexpected issues when trying to use that result.\nNow that we have a better understanding of the Pedersen hash and its security, let’s look at some of the attacks that apply if one were to overlook some of the requirements described so far.\nVulnerability 1: Non-unique x-coordinate\nIn this first vulnerability example, we show how implementations blindly using the x-coordinate of the hash output could lead to collisions.\nInstead of using our toy “identity” encoding, we employ Zcash’s signed-digit encoding, which maps bit strings to a range of positive and negative integers centred around 0.\nRecall that on a curve in Weierstrass form, the negation of a point P = (x, y) is -P = (x, -y). Considering only the x-coordinate, a collision in the hash function output occurs when two messages result in the pair of points only differing in sign.\nBy using our toy Pedersen hash example, given a message M whose hash is equal to H(M) = H(M1 M2) = ⟨M1⟩ ⋅ G1 + ⟨M2⟩ ⋅ G2, the colliding message M’ is computed such that\nH(M’) = ⟨M1‘⟩ ⋅ G1 + ⟨M2‘⟩ ⋅ G2 \n= – H(M) = – (⟨M1⟩ ⋅ G1 + ⟨M2⟩ ⋅ G2)\n= – ⟨M1⟩ ⋅ G1 – ⟨M2⟩ ⋅ G2\nHence, to compute a collision for a message M, we have to find the message M′ such that the encoding of the chunks of M′ correspond to the negation of the respective encoded chunks of M, namely ⟨M1′⟩ = −⟨M1⟩ and ⟨M2′⟩ = −⟨M2⟩.\nThis is straightforward to perform when using Zcash’s encoding scheme, since the third bit of every 3-bit window encoded by the enc() function determines the sign of the output. Hence, given a message hash H(M), the message M’ crafted by flipping every third bit of M produces a hash output equal to the negation of H(M), which coincide in their x-coordinate. The code snippet below illustrates this.\n# ========================================== #\n# Vulnerability 1 - Non-unique x-coordinate  #\n# ========================================== #\n\nH = ZcashPedersenHash(message)\nprint(f\"Zcash's Hash of {message} = {H}\")\n# Zcash's Hash of  ['010101', '000111']  =  (83 : 83 : 1)\n\ncolliding_message = [\"011100\", \"001110\"]\nH2 = ZcashPedersenHash(colliding_message)\n\nassert H[0] == H2[0]\nassert message != colliding_message\nNote that this could also happen if using the “identity” encoding used initially in our toy example if we allowed the size of the message chunk range to exceed half the group order.\nIt is important to repeat that Zcash’s implementation is not susceptible to this issue due to their curve and coordinate choice.\nVulnerability 2: Related Generators\nRecall that the original definition requires the generators to be sampled randomly, such that their discrete logarithm with respect to a common generator (or to each other) shall not be known. In practice, standards have been developed for that purpose, see hash-to-curve. Using our toy example, let’s see how an adversary could break the collision-resistance of the hash function if they knew the discrete logarithm of one of the generators with respect to the other one.\nConsider the continuation of our example with the two generators G1 = E(1, 60) and G2 = E(2, 59), but with the additional knowledge that G2 = 35 ⋅ G1. Using Zcash’s encoding rules, hashing the message we’ve been using so far, and running our toy example implementation, we can proceed as follows:\n# ======================================= #\n#   Vulnerability 2 - Related Generators  #\n# ======================================= #\n\n# We know the discrete logarithm of G2 with respect to G1\nassert 35 * G1 == G2\n\nmessage = [\"010101\", \"000111\"]  # M = [42, 56]\nencoded_message = EncodeMessage(message, ZcashEncode)\nprint(f\"Encoded Message: {encoded_message}\")\n# Encoded Message:  [-29, -63]\n\nH = ZcashPedersenHash(message)\nassert 129 * G1 == H\nSince the encoding of our message using Zcash’s encoding function is [-29, -63], the hash of this message corresponds to the linear combination\nH(M) = −29 ⋅ G1 − 63 ⋅ G2\nHowever, since we know that G2 = 35 ⋅ G1, we can rewrite the previous equation as\nH(M) = −29 ⋅ G1 − 63 ⋅ 35 ⋅ G1 = −2234 ⋅ G1 = 129 ⋅ G1\nsince -2234 is equal to 129 modulo the group order, 139.\nThus, in order to find a collision, we can simply work in the scalar field and find a solution to the equation ⟨M1⟩ + 35 ⋅ ⟨M2⟩ ≡ 129 mod 139. \nOne can see the previous equation holds for ⟨M1⟩ = 17 and ⟨M2⟩ = 31. Since Zcash’s encoding is injective, one can decode these values and obtain M1 = \"000000\", M2 = \"001100\", which collides with the original message, as shown below.\n# We need to find a message M' = M1' || M2' such that\n# <M1'> + 35*<M2'> =  (-29 -35*63 ) = 129 mod 139\nH2 = GenericPedersenHash(GENERATORS, [17, 31])\nassert H == H2\n\nH3 = ZcashPedersenHash([\"000000\", \"001100\"])\nassert H == H3\nThis shows how important it is that the generators be sampled in such a way that no ones knows the discrete logarithm of one with respect to the other one, not even the hash function designers.\nVulnerability 3: Variable-length Input\nWhile implementations usually set a fixed upper bound to the size of the input that can be hashed, they also sometimes accept arbitrary-long (or short) inputs. Zcash’s definition of Pedersen hash is unequivocal regarding the collision-resistance of the hash function when using variable-length input, as stated on page 78 of [Zcash]:\n\nThese hash functions are not collision-resistant for variable-length inputs.\n\n\nOne reason why allowing inputs of different sizes to be hashed may result in collisions is that padding is applied to the inputs prior to encoding them. This padding step is sometimes explicit, for example as described in the Zcash protocol specification [Zcash], where the definition of PedersenHashToPoint on page 78 specifies the following padding scheme.\n\nPad to a multiple of 3 bits by appending zero bits, giving ′.\n\nBut this padding step may also be implicit, such as when using the “identity” encoding and hashing messages of unexpected lengths. In that case, the missing or superfluous bits would simply be interpreted as zeros. We illustrate the issue with our toy example.\nIn the following code snippet, we see how we can craft a message colliding with msg by trimming or appending zero bits at the end of the message.\n# ======================================== #\n# Vulnerability 3 - Variable-length Input  #\n# ======================================== #\n\nmessage = [\"010101\", \"111000\"]\ncolliding_message = [message[0] + \"000\", message[1][:3]]\nprint(f\"Colliding Message: {colliding_message}\")\n# Colliding Message:  ['010101000', '111']\n\nassert PedersenHash(colliding_message) == PedersenHash(message)\nIn addition to issues that are exclusively related to padding, the ability to hash larger messages may break injectivity of the function. The toy example in the Definition section also illustrated how hashing messages larger than the expected size may lead to collisions.\nConclusion\nWhile the Pedersen hash function has many desirable advantages due to its simplicity, efficiency in arithmetic circuits, and the known security assumption it relies on, it is also susceptible to many pitfalls. Specifically, implementations adapting the Zcash approach but on different curves or with different encoding schemes may result in fragile constructions vulnerable to subtle issues, as illustrated in this blog post.\nThe source code is located at https://github.com/ncc-pbottine/ToyPedersenHash/.\nAcknowledgements\nThe author would like to thank Kevin Henry, Aleksandar Kircanski and Giacomo Pope of NCC Group’s Cryptography Services team for their diligent review of this post and Daniele Di Benedetto from Horizen Labs for having drawn our attention to some of the interesting problems described in this blog post. All remaining inaccuracies are the sole responsibility of the author.\nReferences\n[Zcash]: Daira Hopwood, Sean Bowe, Taylor Hornby, Nathan Wilcox. Zcash Protocol Specification Version 2022.3.8 [NU5]. September 15, 2022. URL: https://zips.z.cash/protocol/protocol.pdf.\n[CHP91]: David Chaum, Eugène van Heijst, and Birgit Pfitzmann. Cryptographically Strong Undeniable Signatures, Unconditionally Secure for the Signer. February 1991. URL: https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.34.8570.\n[Ped91]: Pedersen, T.P. Non-Interactive and Information-Theoretic Secure Verifiable Secret Sharing. 1991. URL: https://doi.org/10.1007/3-540-46766-1_9\n", "metadata": {"phasesDone": ["zone", "token"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 24004, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 15], [16, 24], [25, 31], [32, 34], [35, 43], [44, 47], [47, 48], [49, 54], [54, 57], [57, 65], [65, 66], [66, 74], [74, 75], [75, 78], [78, 79], [79, 83], [83, 84], [84, 86], [86, 87], [87, 89], [89, 90], [90, 126], [126, 127], [129, 132], [133, 141], [142, 146], [147, 155], [156, 159], [160, 166], [167, 177], [178, 181], [182, 184], [185, 188], [189, 199], [200, 202], [203, 206], [207, 217], [218, 226], [227, 231], [232, 234], [235, 249], [250, 255], [256, 263], [263, 264], [265, 269], [270, 279], [280, 283], [284, 285], [286, 293], [294, 303], [304, 306], [307, 319], [319, 320], [321, 324], [325, 339], [340, 345], [346, 353], [354, 359], [360, 364], [365, 370], [371, 374], [375, 377], [378, 382], [382, 383], [384, 387], [388, 395], [396, 400], [401, 410], [411, 417], [418, 422], [423, 428], [429, 432], [433, 438], [438, 439], [440, 447], [448, 450], [451, 456], [457, 462], [463, 465], [466, 473], [474, 486], [487, 497], [498, 502], [503, 506], [507, 515], [516, 528], [529, 530], [530, 532], [533, 536], [537, 540], [541, 543], [544, 549], [550, 558], [558, 559], [560, 563], [564, 571], [571, 573], [574, 577], [578, 586], [587, 591], [592, 594], [595, 597], [598, 607], [608, 612], [613, 621], [622, 626], [627, 629], [630, 636], [637, 645], [646, 648], [649, 650], [651, 657], [658, 669], [670, 672], [673, 679], [680, 682], [683, 685], [686, 694], [695, 700], [700, 701], [702, 706], [707, 710], [711, 720], [721, 727], [728, 737], [738, 740], [741, 748], [749, 751], [752, 766], [767, 775], [776, 781], [782, 787], [788, 800], [801, 807], [808, 810], [811, 816], [817, 827], [827, 828], [829, 839], [840, 842], [843, 846], [847, 851], [852, 863], [864, 868], [869, 878], [879, 883], [884, 888], [889, 891], [892, 902], [903, 915], [916, 925], [925, 926], [928, 933], [934, 936], [937, 949], [950, 954], [955, 959], [960, 963], [964, 969], [970, 975], [976, 980], [981, 985], [986, 989], [990, 992], [993, 996], [997, 1010], [1011, 1013], [1014, 1024], [1025, 1032], [1033, 1034], [1034, 1037], [1038, 1041], [1042, 1049], [1050, 1054], [1054, 1056], [1056, 1057], [1058, 1061], [1062, 1066], [1066, 1068], [1068, 1071], [1072, 1075], [1076, 1077], [1077, 1093], [1093, 1094], [1095, 1107], [1108, 1116], [1117, 1120], [1121, 1129], [1130, 1133], [1134, 1136], [1137, 1140], [1141, 1150], [1151, 1155], [1156, 1161], [1162, 1173], [1174, 1178], [1179, 1183], [1184, 1187], [1188, 1193], [1194, 1201], [1202, 1211], [1212, 1220], [1221, 1234], [1235, 1238], [1239, 1242], [1243, 1252], [1253, 1266], [1267, 1269], [1270, 1278], [1279, 1287], [1288, 1295], [1295, 1296], [1297, 1304], [1304, 1305], [1306, 1310], [1311, 1317], [1318, 1321], [1322, 1330], [1331, 1333], [1334, 1337], [1338, 1346], [1347, 1351], [1352, 1360], [1361, 1363], [1364, 1379], [1380, 1381], [1381, 1386], [1387, 1389], [1390, 1396], [1397, 1399], [1400, 1403], [1404, 1411], [1412, 1420], [1421, 1423], [1424, 1427], [1428, 1436], [1437, 1446], [1447, 1454], [1454, 1456], [1457, 1458], [1459, 1462], [1463, 1480], [1481, 1491], [1492, 1494], [1495, 1498], [1499, 1509], [1510, 1514], [1515, 1518], [1519, 1528], [1529, 1531], [1532, 1542], [1543, 1546], [1547, 1555], [1556, 1566], [1567, 1570], [1571, 1575], [1576, 1586], [1587, 1592], [1593, 1596], [1597, 1605], [1606, 1608], [1609, 1612], [1613, 1620], [1621, 1626], [1627, 1629], [1630, 1632], [1632, 1633], [1634, 1636], [1637, 1641], [1642, 1646], [1647, 1651], [1651, 1652], [1653, 1655], [1656, 1661], [1662, 1664], [1665, 1675], [1676, 1679], [1680, 1688], [1689, 1693], [1694, 1702], [1702, 1703], [1704, 1707], [1708, 1716], [1717, 1727], [1728, 1730], [1731, 1739], [1740, 1743], [1744, 1748], [1749, 1751], [1752, 1755], [1756, 1766], [1767, 1778], [1779, 1781], [1782, 1788], [1789, 1791], [1791, 1792], [1793, 1795], [1796, 1800], [1801, 1805], [1806, 1809], [1810, 1814], [1815, 1817], [1818, 1821], [1822, 1830], [1831, 1841], [1842, 1845], [1846, 1848], [1849, 1855], [1856, 1860], [1861, 1864], [1865, 1877], [1878, 1881], [1882, 1885], [1886, 1889], [1889, 1890], [1891, 1894], [1895, 1905], [1906, 1909], [1910, 1913], [1914, 1923], [1924, 1931], [1932, 1935], [1936, 1947], [1948, 1950], [1951, 1952], [1953, 1956], [1957, 1964], [1965, 1967], [1968, 1978], [1979, 1982], [1983, 1990], [1991, 1999], [2000, 2004], [2005, 2015], [2015, 2016], [2017, 2022], [2023, 2025], [2026, 2034], [2035, 2040], [2041, 2043], [2044, 2070], [2071, 2081], [2082, 2085], [2086, 2124], [2125, 2126], [2126, 2127], [2128, 2138], [2139, 2164], [2165, 2166], [2166, 2167], [2168, 2175], [2176, 2199], [2200, 2201], [2201, 2202], [2203, 2218], [2219, 2260], [2261, 2271], [2272, 2275], [2276, 2277], [2278, 2280], [2281, 2284], [2285, 2292], [2293, 2297], [2298, 2300], [2301, 2305], [2306, 2308], [2309, 2313], [2314, 2315], [2315, 2326], [2327, 2329], [2330, 2331], [2332, 2335], [2336, 2342], [2343, 2345], [2346, 2351], [2352, 2358], [2359, 2360], [2361, 2362], [2363, 2364], [2364, 2366], [2367, 2370], [2371, 2374], [2375, 2377], [2377, 2378], [2379, 2381], [2381, 2382], [2383, 2384], [2384, 2385], [2386, 2388], [2389, 2391], [2392, 2402], [2403, 2405], [2406, 2409], [2410, 2421], [2422, 2430], [2431, 2433], [2434, 2437], [2438, 2444], [2445, 2453], [2454, 2459], [2460, 2465], [2465, 2466], [2467, 2472], [2473, 2483], [2484, 2488], [2489, 2491], [2492, 2499], [2500, 2509], [2510, 2512], [2513, 2519], [2519, 2520], [2521, 2525], [2526, 2530], [2531, 2533], [2534, 2546], [2547, 2554], [2555, 2559], [2560, 2562], [2563, 2568], [2568, 2569], [2570, 2575], [2576, 2579], [2580, 2587], [2588, 2589], [2590, 2594], [2595, 2596], [2597, 2603], [2604, 2606], [2607, 2608], [2609, 2613], [2614, 2618], [2618, 2619], [2620, 2621], [2622, 2623], [2624, 2628], [2629, 2630], [2631, 2633], [2633, 2634], [2635, 2638], [2639, 2647], [2648, 2652], [2653, 2655], [2656, 2663], [2664, 2666], [2667, 2670], [2671, 2677], [2678, 2689], [2690, 2692], [2693, 2696], [2697, 2703], [2704, 2708], [2709, 2712], [2713, 2721], [2722, 2724], [2725, 2728], [2729, 2736], [2737, 2743], [2743, 2744], [2745, 2746], [2746, 2747], [2747, 2748], [2748, 2749], [2750, 2751], [2752, 2753], [2753, 2754], [2754, 2758], [2759, 2760], [2761, 2763], [2764, 2765], [2766, 2767], [2768, 2772], [2773, 2774], [2775, 2777], [2778, 2779], [2780, 2784], [2785, 2786], [2787, 2789], [2790, 2791], [2792, 2793], [2794, 2795], [2796, 2800], [2801, 2802], [2803, 2805], [2806, 2811], [2812, 2815], [2816, 2824], [2825, 2828], [2828, 2829], [2830, 2838], [2839, 2847], [2848, 2850], [2851, 2853], [2854, 2857], [2858, 2866], [2867, 2875], [2875, 2876], [2877, 2885], [2886, 2887], [2888, 2891], [2892, 2898], [2899, 2903], [2904, 2905], [2906, 2912], [2913, 2920], [2921, 2922], [2922, 2925], [2926, 2929], [2930, 2937], [2937, 2938], [2939, 2945], [2946, 2949], [2950, 2952], [2953, 2964], [2965, 2967], [2968, 2970], [2971, 2978], [2979, 2983], [2984, 2988], [2989, 2992], [2993, 3001], [3002, 3007], [3007, 3009], [3010, 3014], [3015, 3019], [3020, 3023], [3024, 3030], [3031, 3033], [3034, 3037], [3038, 3042], [3043, 3051], [3052, 3059], [3060, 3065], [3066, 3068], [3069, 3070], [3071, 3076], [3077, 3079], [3080, 3083], [3084, 3089], [3089, 3090], [3091, 3093], [3094, 3102], [3102, 3103], [3104, 3107], [3108, 3115], [3116, 3122], [3123, 3126], [3127, 3129], [3130, 3131], [3132, 3137], [3138, 3145], [3145, 3146], [3147, 3149], [3150, 3155], [3156, 3160], [3161, 3162], [3163, 3169], [3170, 3180], [3181, 3183], [3184, 3187], [3188, 3197], [3198, 3203], [3204, 3206], [3207, 3212], [3213, 3217], [3218, 3220], [3221, 3224], [3225, 3229], [3229, 3230], [3231, 3234], [3235, 3242], [3242, 3243], [3244, 3252], [3253, 3257], [3258, 3270], [3271, 3281], [3282, 3285], [3286, 3294], [3295, 3299], [3300, 3308], [3309, 3312], [3313, 3316], [3317, 3325], [3326, 3336], [3337, 3340], [3341, 3353], [3354, 3359], [3360, 3361], [3362, 3365], [3366, 3373], [3373, 3374], [3375, 3379], [3380, 3392], [3393, 3397], [3398, 3400], [3401, 3409], [3409, 3410], [3411, 3413], [3414, 3417], [3418, 3420], [3421, 3429], [3430, 3435], [3436, 3440], [3441, 3442], [3443, 3448], [3449, 3454], [3455, 3460], [3460, 3461], [3462, 3467], [3468, 3470], [3471, 3479], [3480, 3482], [3483, 3496], [3497, 3506], [3507, 3510], [3511, 3513], [3514, 3517], [3518, 3523], [3524, 3529], [3530, 3535], [3535, 3536], [3536, 3538], [3539, 3545], [3546, 3549], [3550, 3558], [3559, 3564], [3565, 3572], [3573, 3575], [3576, 3579], [3580, 3585], [3586, 3594], [3595, 3597], [3598, 3599], [3600, 3602], [3603, 3604], [3605, 3606], [3607, 3608], [3609, 3611], [3611, 3612], [3613, 3620], [3621, 3625], [3626, 3629], [3630, 3636], [3637, 3642], [3643, 3645], [3646, 3650], [3651, 3654], [3654, 3655], [3656, 3659], [3660, 3665], [3666, 3668], [3669, 3675], [3676, 3678], [3679, 3683], [3684, 3689], [3690, 3693], [3694, 3699], [3700, 3703], [3703, 3704], [3705, 3710], [3711, 3713], [3714, 3719], [3719, 3720], [3721, 3723], [3724, 3728], [3729, 3732], [3733, 3743], [3744, 3746], [3747, 3751], [3752, 3757], [3757, 3758], [3759, 3761], [3762, 3763], [3764, 3765], [3765, 3766], [3766, 3767], [3767, 3768], [3769, 3771], [3771, 3772], [3773, 3776], [3777, 3779], [3780, 3781], [3782, 3783], [3783, 3784], [3784, 3785], [3785, 3786], [3787, 3789], [3789, 3791], [3792, 3795], [3796, 3799], [3800, 3804], [3805, 3813], [3814, 3822], [3823, 3826], [3827, 3835], [3836, 3840], [3841, 3843], [3844, 3852], [3852, 3853], [3853, 3854], [3854, 3855], [3856, 3857], [3858, 3859], [3859, 3860], [3860, 3862], [3863, 3865], [3865, 3866], [3867, 3868], [3869, 3877], [3878, 3881], [3882, 3884], [3885, 3886], [3887, 3895], [3896, 3899], [3900, 3911], [3911, 3912], [3913, 3915], [3916, 3924], [3925, 3928], [3929, 3936], [3937, 3943], [3944, 3946], [3947, 3949], [3950, 3952], [3953, 3957], [3957, 3958], [3959, 3963], [3964, 3968], [3969, 3972], [3973, 3983], [3984, 3991], [3992, 3998], [3999, 4001], [4002, 4005], [4006, 4008], [4009, 4012], [4013, 4014], [4015, 4019], [4020, 4024], [4024, 4025], [4025, 4037], [4037, 4038], [4039, 4041], [4042, 4046], [4047, 4049], [4050, 4056], [4057, 4059], [4060, 4068], [4069, 4077], [4077, 4078], [4079, 4086], [4087, 4088], [4088, 4092], [4093, 4099], [4100, 4104], [4105, 4106], [4107, 4113], [4113, 4114], [4115, 4117], [4118, 4119], [4120, 4125], [4126, 4133], [4133, 4134], [4135, 4138], [4139, 4141], [4142, 4148], [4149, 4158], [4159, 4162], [4163, 4164], [4164, 4168], [4169, 4174], [4175, 4177], [4178, 4180], [4181, 4188], [4189, 4196], [4197, 4199], [4200, 4213], [4214, 4218], [4218, 4219], [4220, 4229], [4230, 4232], [4233, 4235], [4236, 4243], [4244, 4246], [4247, 4250], [4251, 4256], [4257, 4258], [4258, 4259], [4259, 4260], [4261, 4263], [4263, 4265], [4266, 4268], [4269, 4274], [4275, 4277], [4278, 4282], [4283, 4291], [4292, 4294], [4295, 4298], [4299, 4309], [4310, 4318], [4319, 4320], [4320, 4334], [4334, 4336], [4337, 4339], [4340, 4343], [4344, 4348], [4349, 4354], [4354, 4356], [4356, 4359], [4360, 4369], [4370, 4374], [4375, 4382], [4383, 4388], [4389, 4398], [4399, 4402], [4403, 4409], [4410, 4418], [4419, 4424], [4424, 4425], [4426, 4431], [4432, 4435], [4436, 4446], [4447, 4450], [4451, 4458], [4459, 4460], [4461, 4464], [4465, 4471], [4472, 4481], [4482, 4488], [4489, 4497], [4498, 4501], [4502, 4521], [4521, 4523], [4524, 4532], [4532, 4533], [4535, 4536], [4537, 4542], [4543, 4545], [4546, 4550], [4551, 4553], [4554, 4562], [4563, 4568], [4569, 4573], [4574, 4579], [4580, 4585], [4585, 4586], [4587, 4588], [4589, 4590], [4591, 4593], [4593, 4594], [4594, 4597], [4597, 4598], [4599, 4600], [4601, 4602], [4603, 4616], [4616, 4617], [4617, 4618], [4618, 4619], [4620, 4622], [4622, 4623], [4623, 4624], [4624, 4626], [4627, 4628], [4628, 4629], [4629, 4631], [4631, 4634], [4635, 4641], [4642, 4644], [4644, 4649], [4649, 4652], [4652, 4660], [4660, 4662], [4663, 4668], [4668, 4669], [4669, 4670], [4670, 4672], [4672, 4673], [4673, 4674], [4675, 4679], [4680, 4685], [4686, 4687], [4687, 4689], [4689, 4694], [4694, 4699], [4700, 4701], [4702, 4710], [4711, 4716], [4717, 4724], [4725, 4727], [4728, 4731], [4732, 4733], [4734, 4737], [4738, 4739], [4740, 4741], [4742, 4743], [4744, 4746], [4747, 4751], [4752, 4758], [4759, 4764], [4765, 4767], [4768, 4772], [4773, 4776], [4777, 4781], [4782, 4787], [4788, 4791], [4793, 4794], [4795, 4797], [4798, 4802], [4803, 4806], [4807, 4817], [4817, 4818], [4819, 4821], [4822, 4825], [4826, 4831], [4832, 4835], [4836, 4841], [4842, 4847], [4847, 4848], [4849, 4852], [4853, 4865], [4866, 4872], [4873, 4874], [4875, 4878], [4879, 4889], [4890, 4892], [4893, 4894], [4895, 4896], [4896, 4897], [4897, 4898], [4898, 4899], [4900, 4902], [4902, 4903], [4904, 4906], [4907, 4908], [4909, 4910], [4910, 4911], [4911, 4912], [4912, 4913], [4914, 4916], [4916, 4917], [4918, 4928], [4929, 4930], [4931, 4933], [4933, 4934], [4934, 4935], [4936, 4938], [4938, 4939], [4941, 4944], [4945, 4959], [4959, 4960], [4960, 4964], [4964, 4966], [4971, 4974], [4979, 4986], [4987, 4988], [4989, 4995], [4996, 5002], [5003, 5004], [5004, 5011], [5012, 5014], [5015, 5017], [5018, 5020], [5021, 5034], [5035, 5038], [5039, 5044], [5044, 5045], [5050, 5052], [5053, 5055], [5056, 5063], [5068, 5071], [5076, 5082], [5083, 5086], [5086, 5087], [5087, 5092], [5092, 5095], [5095, 5096], [5096, 5098], [5099, 5100], [5100, 5101], [5103, 5106], [5107, 5120], [5120, 5121], [5121, 5124], [5124, 5125], [5126, 5141], [5141, 5143], [5148, 5151], [5156, 5162], [5163, 5171], [5172, 5177], [5178, 5185], [5186, 5187], [5188, 5195], [5196, 5201], [5202, 5203], [5204, 5212], [5217, 5223], [5224, 5232], [5237, 5240], [5245, 5251], [5252, 5268], [5268, 5269], [5269, 5270], [5270, 5271], [5272, 5275], [5276, 5277], [5278, 5280], [5281, 5285], [5287, 5290], [5291, 5310], [5310, 5311], [5311, 5321], [5321, 5322], [5323, 5337], [5337, 5339], [5344, 5347], [5352, 5358], [5359, 5367], [5368, 5371], [5372, 5381], [5382, 5385], [5386, 5394], [5395, 5399], [5400, 5402], [5403, 5404], [5405, 5412], [5418, 5421], [5422, 5426], [5427, 5429], [5430, 5438], [5439, 5441], [5442, 5443], [5444, 5450], [5451, 5462], [5463, 5465], [5466, 5468], [5469, 5472], [5473, 5483], [5484, 5488], [5493, 5494], [5494, 5501], [5502, 5509], [5509, 5510], [5511, 5517], [5518, 5522], [5523, 5525], [5526, 5532], [5533, 5542], [5547, 5550], [5555, 5561], [5562, 5565], [5565, 5566], [5566, 5576], [5576, 5577], [5578, 5580], [5581, 5584], [5584, 5585], [5585, 5599], [5599, 5601], [5602, 5603], [5603, 5615], [5616, 5623], [5623, 5624], [5630, 5633], [5634, 5635], [5636, 5637], [5637, 5638], [5638, 5639], [5639, 5640], [5645, 5648], [5649, 5654], [5654, 5655], [5656, 5665], [5666, 5668], [5669, 5672], [5672, 5673], [5673, 5687], [5687, 5688], [5689, 5699], [5699, 5701], [5710, 5713], [5714, 5716], [5717, 5722], [5723, 5724], [5725, 5734], [5739, 5745], [5746, 5749], [5751, 5754], [5755, 5767], [5767, 5768], [5768, 5775], [5775, 5776], [5777, 5807], [5807, 5808], [5809, 5830], [5830, 5832], [5837, 5840], [5845, 5853], [5854, 5857], [5858, 5866], [5867, 5871], [5872, 5874], [5875, 5876], [5877, 5884], [5890, 5895], [5895, 5896], [5897, 5898], [5899, 5906], [5911, 5917], [5917, 5918], [5919, 5922], [5923, 5931], [5932, 5936], [5937, 5939], [5940, 5943], [5944, 5951], [5957, 5965], [5965, 5966], [5975, 5990], [5990, 5991], [5992, 5995], [5996, 6004], [6005, 6013], [6014, 6016], [6017, 6022], [6023, 6024], [6025, 6032], [6033, 6037], [6038, 6046], [6055, 6065], [6065, 6066], [6067, 6075], [6076, 6077], [6078, 6079], [6080, 6081], [6082, 6087], [6088, 6096], [6097, 6098], [6103, 6106], [6111, 6126], [6127, 6128], [6129, 6142], [6142, 6143], [6143, 6150], [6150, 6151], [6152, 6167], [6167, 6168], [6173, 6179], [6180, 6199], [6199, 6200], [6200, 6210], [6210, 6211], [6212, 6227], [6227, 6228], [6229, 6234], [6235, 6238], [6239, 6244], [6244, 6245], [6246, 6249], [6250, 6254], [6255, 6259], [6260, 6269], [6270, 6273], [6274, 6277], [6278, 6285], [6286, 6288], [6288, 6294], [6294, 6296], [6297, 6298], [6298, 6304], [6304, 6306], [6307, 6309], [6310, 6316], [6316, 6317], [6318, 6327], [6328, 6330], [6331, 6334], [6335, 6340], [6341, 6342], [6342, 6343], [6343, 6344], [6345, 6347], [6347, 6349], [6350, 6351], [6352, 6380], [6381, 6382], [6383, 6384], [6387, 6394], [6395, 6397], [6398, 6406], [6407, 6411], [6414, 6415], [6416, 6417], [6418, 6446], [6447, 6448], [6450, 6457], [6458, 6459], [6460, 6462], [6462, 6468], [6468, 6470], [6471, 6472], [6472, 6478], [6478, 6480], [6482, 6483], [6484, 6485], [6486, 6487], [6488, 6489], [6489, 6491], [6491, 6492], [6493, 6495], [6495, 6496], [6497, 6498], [6499, 6500], [6501, 6513], [6513, 6514], [6514, 6521], [6521, 6522], [6523, 6528], [6528, 6529], [6529, 6530], [6530, 6531], [6531, 6535], [6536, 6538], [6539, 6540], [6540, 6547], [6547, 6548], [6549, 6550], [6551, 6552], [6552, 6553], [6553, 6556], [6557, 6558], [6559, 6563], [6564, 6566], [6568, 6570], [6570, 6576], [6576, 6578], [6579, 6580], [6580, 6586], [6586, 6588], [6590, 6591], [6593, 6594], [6594, 6595], [6596, 6597], [6598, 6600], [6601, 6602], [6603, 6604], [6604, 6605], [6607, 6608], [6609, 6611], [6612, 6617], [6618, 6622], [6623, 6626], [6627, 6635], [6636, 6640], [6641, 6643], [6644, 6647], [6648, 6655], [6656, 6658], [6659, 6669], [6670, 6672], [6673, 6682], [6683, 6684], [6685, 6688], [6689, 6695], [6696, 6707], [6708, 6710], [6711, 6714], [6715, 6724], [6725, 6731], [6732, 6735], [6736, 6739], [6740, 6748], [6749, 6764], [6765, 6766], [6767, 6769], [6770, 6773], [6774, 6781], [6782, 6788], [6789, 6795], [6796, 6797], [6798, 6800], [6801, 6803], [6804, 6805], [6806, 6808], [6809, 6810], [6811, 6813], [6814, 6815], [6816, 6818], [6819, 6827], [6828, 6838], [6839, 6842], [6843, 6855], [6856, 6859], [6860, 6868], [6869, 6873], [6874, 6882], [6883, 6885], [6886, 6905], [6906, 6909], [6910, 6922], [6923, 6928], [6928, 6929], [6930, 6938], [6939, 6942], [6943, 6953], [6954, 6962], [6963, 6971], [6972, 6974], [6975, 6984], [6984, 6985], [6986, 6990], [6991, 6999], [7000, 7008], [7009, 7012], [7013, 7016], [7017, 7027], [7028, 7030], [7031, 7034], [7035, 7039], [7040, 7048], [7049, 7058], [7059, 7064], [7065, 7069], [7070, 7071], [7072, 7075], [7076, 7086], [7086, 7087], [7088, 7093], [7094, 7096], [7097, 7100], [7101, 7108], [7109, 7111], [7112, 7116], [7117, 7122], [7122, 7123], [7124, 7127], [7128, 7133], [7134, 7140], [7141, 7143], [7144, 7148], [7149, 7152], [7153, 7157], [7158, 7166], [7167, 7169], [7170, 7173], [7174, 7193], [7194, 7197], [7198, 7213], [7214, 7220], [7220, 7221], [7222, 7224], [7225, 7227], [7228, 7232], [7233, 7248], [7249, 7253], [7254, 7255], [7256, 7262], [7263, 7269], [7270, 7273], [7274, 7276], [7277, 7281], [7282, 7286], [7287, 7295], [7296, 7302], [7303, 7306], [7307, 7309], [7310, 7314], [7315, 7317], [7318, 7319], [7320, 7332], [7333, 7341], [7342, 7343], [7343, 7346], [7346, 7348], [7349, 7350], [7351, 7357], [7358, 7367], [7368, 7374], [7375, 7377], [7378, 7382], [7383, 7385], [7386, 7391], [7392, 7395], [7396, 7400], [7401, 7405], [7406, 7414], [7415, 7417], [7418, 7425], [7426, 7429], [7430, 7437], [7438, 7446], [7447, 7457], [7458, 7459], [7459, 7465], [7465, 7466], [7467, 7487], [7487, 7489], [7490, 7492], [7493, 7495], [7496, 7505], [7506, 7509], [7510, 7513], [7514, 7524], [7525, 7533], [7534, 7542], [7543, 7545], [7546, 7548], [7549, 7558], [7558, 7559], [7560, 7566], [7567, 7571], [7572, 7575], [7576, 7584], [7585, 7587], [7588, 7590], [7591, 7600], [7601, 7609], [7610, 7612], [7613, 7617], [7618, 7620], [7621, 7625], [7626, 7634], [7635, 7643], [7644, 7646], [7647, 7650], [7651, 7657], [7658, 7660], [7661, 7669], [7670, 7678], [7679, 7681], [7682, 7685], [7686, 7694], [7694, 7695], [7696, 7698], [7699, 7702], [7703, 7710], [7711, 7713], [7714, 7717], [7718, 7726], [7727, 7735], [7736, 7739], [7739, 7740], [7741, 7745], [7746, 7751], [7752, 7756], [7757, 7762], [7763, 7766], [7767, 7769], [7770, 7773], [7774, 7783], [7784, 7791], [7792, 7798], [7799, 7801], [7802, 7805], [7806, 7808], [7809, 7813], [7814, 7820], [7821, 7823], [7824, 7827], [7828, 7832], [7833, 7840], [7841, 7847], [7847, 7848], [7849, 7852], [7853, 7856], [7857, 7869], [7870, 7875], [7875, 7876], [7879, 7882], [7883, 7891], [7892, 7900], [7901, 7905], [7906, 7909], [7910, 7917], [7918, 7920], [7921, 7928], [7928, 7929], [7930, 7932], [7933, 7936], [7937, 7940], [7941, 7948], [7949, 7954], [7954, 7955], [7956, 7958], [7959, 7963], [7964, 7968], [7969, 7971], [7972, 7979], [7980, 7982], [7983, 7984], [7985, 7991], [7992, 8000], [8001, 8009], [8010, 8015], [8016, 8019], [8020, 8023], [8024, 8031], [8032, 8036], [8037, 8048], [8049, 8051], [8052, 8065], [8066, 8068], [8069, 8077], [8078, 8081], [8082, 8091], [8092, 8095], [8096, 8103], [8104, 8113], [8114, 8115], [8115, 8121], [8122, 8125], [8126, 8136], [8137, 8139], [8140, 8143], [8144, 8151], [8151, 8153], [8154, 8157], [8158, 8162], [8163, 8167], [8168, 8171], [8172, 8178], [8179, 8187], [8188, 8196], [8197, 8201], [8202, 8204], [8205, 8208], [8209, 8212], [8213, 8220], [8220, 8221], [8222, 8226], [8227, 8233], [8234, 8236], [8237, 8242], [8243, 8245], [8246, 8252], [8253, 8257], [8258, 8261], [8262, 8269], [8270, 8274], [8275, 8277], [8278, 8281], [8282, 8289], [8290, 8292], [8293, 8297], [8298, 8300], [8301, 8308], [8308, 8309], [8310, 8316], [8316, 8317], [8318, 8320], [8321, 8323], [8324, 8331], [8332, 8338], [8339, 8342], [8343, 8350], [8351, 8353], [8354, 8356], [8357, 8363], [8364, 8365], [8365, 8369], [8370, 8374], [8375, 8380], [8381, 8389], [8390, 8392], [8393, 8399], [8400, 8404], [8405, 8408], [8409, 8417], [8418, 8423], [8423, 8425], [8426, 8428], [8429, 8434], [8435, 8437], [8438, 8442], [8443, 8446], [8447, 8449], [8450, 8458], [8459, 8461], [8462, 8469], [8470, 8480], [8480, 8481], [8482, 8486], [8487, 8489], [8490, 8497], [8498, 8501], [8502, 8505], [8506, 8511], [8512, 8514], [8515, 8518], [8519, 8527], [8527, 8528], [8529, 8543], [8544, 8546], [8547, 8550], [8551, 8559], [8560, 8565], [8565, 8566], [8567, 8571], [8572, 8574], [8575, 8576], [8576, 8577], [8578, 8584], [8585, 8588], [8589, 8606], [8606, 8607], [8608, 8612], [8613, 8615], [8616, 8617], [8618, 8619], [8620, 8621], [8622, 8623], [8624, 8625], [8625, 8626], [8627, 8631], [8631, 8632], [8633, 8644], [8645, 8648], [8649, 8654], [8655, 8656], [8657, 8659], [8660, 8661], [8662, 8668], [8669, 8670], [8671, 8679], [8680, 8683], [8684, 8688], [8689, 8695], [8696, 8698], [8699, 8710], [8711, 8712], [8713, 8715], [8716, 8717], [8718, 8719], [8720, 8721], [8722, 8723], [8724, 8725], [8725, 8726], [8727, 8730], [8731, 8734], [8735, 8740], [8741, 8743], [8744, 8745], [8745, 8746], [8747, 8752], [8753, 8754], [8754, 8755], [8756, 8757], [8758, 8759], [8760, 8761], [8762, 8763], [8763, 8764], [8765, 8766], [8767, 8768], [8769, 8770], [8771, 8772], [8773, 8774], [8775, 8776], [8777, 8778], [8779, 8780], [8781, 8782], [8783, 8784], [8785, 8786], [8787, 8788], [8789, 8790], [8791, 8792], [8793, 8794], [8795, 8796], [8797, 8798], [8799, 8800], [8801, 8802], [8803, 8804], [8805, 8806], [8807, 8808], [8809, 8810], [8811, 8812], [8813, 8816], [8817, 8824], [8825, 8830], [8831, 8842], [8843, 8846], [8847, 8854], [8855, 8863], [8864, 8870], [8871, 8875], [8876, 8879], [8880, 8888], [8889, 8893], [8894, 8897], [8898, 8902], [8903, 8905], [8906, 8916], [8916, 8917], [8918, 8921], [8922, 8929], [8929, 8930], [8931, 8941], [8942, 8947], [8948, 8951], [8952, 8960], [8961, 8966], [8967, 8969], [8970, 8973], [8973, 8974], [8975, 8981], [8982, 8986], [8987, 8995], [8996, 8997], [8997, 8999], [9000, 9009], [9010, 9012], [9013, 9015], [9015, 9016], [9017, 9019], [9020, 9023], [9024, 9030], [9031, 9038], [9039, 9041], [9042, 9045], [9046, 9052], [9053, 9064], [9065, 9074], [9075, 9077], [9078, 9081], [9082, 9090], [9091, 9095], [9096, 9104], [9105, 9112], [9113, 9115], [9116, 9119], [9120, 9124], [9125, 9129], [9130, 9136], [9136, 9137], [9138, 9150], [9150, 9151], [9152, 9161], [9162, 9165], [9166, 9172], [9173, 9187], [9188, 9190], [9191, 9196], [9197, 9207], [9208, 9211], [9212, 9219], [9220, 9224], [9225, 9230], [9231, 9234], [9235, 9238], [9239, 9247], [9248, 9252], [9253, 9261], [9262, 9266], [9267, 9274], [9275, 9277], [9278, 9279], [9280, 9289], [9289, 9290], [9291, 9293], [9294, 9299], [9300, 9302], [9303, 9306], [9307, 9311], [9312, 9319], [9320, 9325], [9325, 9326], [9326, 9332], [9333, 9337], [9338, 9341], [9342, 9351], [9352, 9359], [9360, 9366], [9367, 9370], [9371, 9377], [9378, 9382], [9383, 9384], [9385, 9389], [9389, 9390], [9391, 9398], [9399, 9412], [9413, 9417], [9418, 9421], [9422, 9430], [9431, 9433], [9434, 9437], [9438, 9457], [9458, 9461], [9462, 9477], [9478, 9484], [9484, 9485], [9486, 9487], [9488, 9493], [9494, 9497], [9498, 9506], [9507, 9512], [9513, 9515], [9516, 9519], [9519, 9520], [9521, 9527], [9528, 9532], [9533, 9541], [9542, 9543], [9543, 9545], [9546, 9555], [9556, 9558], [9559, 9561], [9561, 9562], [9563, 9564], [9565, 9567], [9568, 9571], [9572, 9578], [9579, 9586], [9587, 9589], [9590, 9593], [9594, 9600], [9601, 9612], [9613, 9624], [9625, 9634], [9635, 9637], [9638, 9639], [9640, 9643], [9644, 9652], [9653, 9657], [9658, 9666], [9667, 9674], [9675, 9677], [9678, 9681], [9682, 9686], [9687, 9691], [9692, 9698], [9698, 9699], [9700, 9702], [9703, 9706], [9707, 9709], [9710, 9714], [9715, 9720], [9720, 9721], [9723, 9725], [9726, 9727], [9728, 9729], [9729, 9731], [9732, 9733], [9734, 9737], [9737, 9738], [9739, 9740], [9741, 9743], [9744, 9745], [9746, 9747], [9747, 9749], [9750, 9751], [9752, 9753], [9754, 9755], [9756, 9759], [9759, 9760], [9761, 9762], [9763, 9765], [9766, 9772], [9773, 9774], [9775, 9777], [9778, 9780], [9782, 9799], [9800, 9801], [9802, 9804], [9804, 9812], [9812, 9814], [9815, 9816], [9816, 9825], [9825, 9827], [9829, 9830], [9831, 9838], [9839, 9847], [9848, 9865], [9866, 9873], [9874, 9876], [9877, 9880], [9881, 9889], [9890, 9891], [9892, 9896], [9897, 9907], [9908, 9913], [9915, 9921], [9922, 9935], [9935, 9936], [9936, 9953], [9953, 9954], [9955, 9969], [9969, 9970], [9971, 9973], [9974, 9975], [9975, 9977], [9978, 9979], [9980, 9983], [9983, 9984], [9985, 9987], [9988, 9989], [9990, 9991], [9992, 9993], [9994, 9997], [9997, 9998], [10000, 10002], [10003, 10004], [10005, 10017], [10017, 10018], [10018, 10035], [10035, 10036], [10037, 10043], [10044, 10045], [10046, 10048], [10049, 10051], [10052, 10058], [10059, 10063], [10064, 10067], [10068, 10074], [10075, 10077], [10078, 10081], [10082, 10086], [10087, 10095], [10096, 10098], [10099, 10100], [10101, 10106], [10107, 10109], [10110, 10113], [10114, 10119], [10119, 10120], [10121, 10125], [10126, 10141], [10142, 10149], [10150, 10154], [10155, 10161], [10162, 10164], [10165, 10167], [10168, 10169], [10170, 10175], [10176, 10183], [10183, 10184], [10185, 10189], [10190, 10199], [10200, 10207], [10208, 10211], [10212, 10217], [10218, 10228], [10229, 10231], [10232, 10235], [10236, 10245], [10246, 10251], [10252, 10257], [10257, 10258], [10259, 10264], [10265, 10269], [10270, 10273], [10274, 10276], [10277, 10280], [10281, 10287], [10288, 10290], [10291, 10294], [10295, 10299], [10300, 10308], [10308, 10309], [10310, 10319], [10319, 10320], [10321, 10325], [10326, 10333], [10334, 10337], [10338, 10342], [10343, 10347], [10348, 10350], [10351, 10361], [10361, 10362], [10363, 10369], [10369, 10370], [10371, 10375], [10376, 10381], [10382, 10383], [10384, 10395], [10396, 10401], [10402, 10406], [10407, 10413], [10414, 10425], [10425, 10426], [10427, 10430], [10431, 10439], [10440, 10442], [10443, 10444], [10445, 10450], [10451, 10452], [10453, 10454], [10455, 10456], [10456, 10457], [10457, 10458], [10459, 10460], [10460, 10461], [10462, 10464], [10465, 10467], [10468, 10469], [10470, 10471], [10471, 10472], [10472, 10473], [10474, 10476], [10476, 10478], [10479, 10483], [10483, 10484], [10485, 10489], [10490, 10499], [10500, 10503], [10504, 10512], [10513, 10517], [10518, 10521], [10522, 10528], [10529, 10533], [10534, 10537], [10538, 10543], [10544, 10554], [10555, 10557], [10558, 10559], [10560, 10566], [10566, 10567], [10568, 10573], [10574, 10576], [10577, 10578], [10579, 10586], [10587, 10596], [10596, 10597], [10598, 10604], [10605, 10608], [10609, 10617], [10618, 10620], [10621, 10624], [10625, 10630], [10630, 10631], [10632, 10634], [10635, 10637], [10638, 10647], [10648, 10650], [10651, 10657], [10658, 10662], [10663, 10666], [10667, 10675], [10676, 10683], [10684, 10692], [10693, 10695], [10696, 10699], [10700, 10706], [10707, 10721], [10722, 10728], [10729, 10736], [10737, 10740], [10741, 10747], [10748, 10752], [10753, 10757], [10758, 10761], [10762, 10766], [10767, 10777], [10778, 10787], [10788, 10790], [10791, 10797], [10797, 10798], [10799, 10802], [10803, 10810], [10810, 10811], [10812, 10814], [10815, 10820], [10821, 10827], [10828, 10839], [10840, 10843], [10844, 10845], [10846, 10851], [10852, 10860], [10861, 10863], [10864, 10875], [10876, 10880], [10880, 10881], [10882, 10885], [10886, 10890], [10891, 10897], [10898, 10902], [10903, 10906], [10907, 10915], [10916, 10922], [10923, 10930], [10931, 10935], [10936, 10937], [10938, 10941], [10942, 10944], [10945, 10947], [10948, 10952], [10953, 10956], [10957, 10969], [10970, 10972], [10973, 10982], [10982, 10983], [10984, 10991], [10991, 10992], [10993, 11000], [11001, 11010], [11011, 11022], [11023, 11025], [11026, 11029], [11030, 11038], [11039, 11043], [11044, 11052], [11053, 11055], [11056, 11060], [11061, 11064], [11065, 11072], [11073, 11083], [11084, 11088], [11089, 11091], [11092, 11094], [11095, 11102], [11103, 11112], [11113, 11115], [11116, 11122], [11122, 11123], [11124, 11136], [11136, 11137], [11138, 11141], [11142, 11150], [11151, 11160], [11161, 11163], [11164, 11167], [11168, 11177], [11178, 11182], [11183, 11190], [11191, 11193], [11194, 11201], [11202, 11205], [11206, 11212], [11213, 11216], [11217, 11219], [11220, 11225], [11225, 11226], [11227, 11230], [11231, 11235], [11236, 11238], [11239, 11242], [11243, 11251], [11252, 11261], [11261, 11262], [11263, 11275], [11276, 11289], [11290, 11293], [11294, 11307], [11308, 11318], [11319, 11320], [11320, 11321], [11322, 11329], [11330, 11335], [11336, 11340], [11341, 11344], [11345, 11351], [11352, 11355], [11356, 11364], [11365, 11374], [11375, 11377], [11378, 11381], [11382, 11388], [11389, 11394], [11394, 11395], [11396, 11399], [11400, 11420], [11421, 11428], [11428, 11429], [11430, 11432], [11433, 11438], [11439, 11443], [11444, 11447], [11448, 11454], [11455, 11457], [11458, 11461], [11462, 11475], [11476, 11483], [11484, 11488], [11489, 11497], [11498, 11506], [11506, 11507], [11508, 11519], [11520, 11524], [11525, 11527], [11528, 11538], [11539, 11541], [11542, 11552], [11553, 11555], [11556, 11559], [11560, 11570], [11571, 11578], [11579, 11584], [11585, 11587], [11588, 11598], [11599, 11601], [11602, 11603], [11604, 11612], [11612, 11613], [11614, 11627], [11628, 11630], [11631, 11639], [11639, 11640], [11641, 11656], [11657, 11666], [11667, 11670], [11671, 11679], [11680, 11684], [11685, 11692], [11693, 11703], [11704, 11706], [11707, 11713], [11714, 11717], [11718, 11725], [11726, 11728], [11729, 11735], [11735, 11736], [11737, 11739], [11740, 11745], [11746, 11748], [11748, 11749], [11750, 11754], [11755, 11758], [11759, 11763], [11764, 11766], [11767, 11774], [11775, 11780], [11781, 11796], [11797, 11799], [11800, 11801], [11802, 11806], [11807, 11816], [11817, 11820], [11820, 11821], [11822, 11828], [11829, 11836], [11837, 11841], [11842, 11847], [11848, 11850], [11851, 11853], [11854, 11859], [11860, 11862], [11863, 11869], [11870, 11873], [11874, 11883], [11884, 11892], [11893, 11901], [11902, 11904], [11905, 11914], [11914, 11915], [11916, 11918], [11919, 11928], [11929, 11931], [11932, 11935], [11936, 11944], [11945, 11952], [11952, 11953], [11954, 11957], [11958, 11964], [11965, 11973], [11974, 11978], [11979, 11987], [11988, 11997], [11998, 12000], [12001, 12004], [12005, 12008], [12009, 12011], [12012, 12025], [12026, 12030], [12031, 12033], [12034, 12036], [12037, 12040], [12041, 12049], [12050, 12058], [12059, 12063], [12064, 12066], [12067, 12081], [12082, 12087], [12088, 12095], [12095, 12096], [12097, 12102], [12103, 12106], [12107, 12117], [12118, 12121], [12122, 12127], [12128, 12129], [12129, 12132], [12133, 12138], [12139, 12144], [12145, 12147], [12148, 12152], [12152, 12154], [12155, 12156], [12157, 12163], [12164, 12170], [12171, 12179], [12180, 12186], [12187, 12201], [12202, 12205], [12206, 12208], [12209, 12213], [12214, 12216], [12217, 12221], [12222, 12233], [12234, 12241], [12242, 12245], [12246, 12260], [12261, 12263], [12264, 12277], [12278, 12281], [12282, 12289], [12290, 12300], [12301, 12307], [12308, 12310], [12311, 12314], [12315, 12325], [12325, 12326], [12327, 12335], [12336, 12342], [12343, 12357], [12358, 12367], [12368, 12371], [12372, 12378], [12379, 12390], [12391, 12395], [12396, 12399], [12400, 12414], [12415, 12417], [12418, 12419], [12420, 12425], [12426, 12431], [12432, 12434], [12435, 12436], [12437, 12442], [12443, 12449], [12450, 12453], [12454, 12456], [12457, 12467], [12467, 12468], [12469, 12472], [12473, 12480], [12480, 12481], [12482, 12488], [12489, 12492], [12493, 12499], [12500, 12502], [12503, 12504], [12505, 12506], [12506, 12510], [12511, 12516], [12517, 12518], [12519, 12520], [12521, 12533], [12533, 12534], [12535, 12538], [12539, 12541], [12542, 12546], [12547, 12549], [12550, 12557], [12558, 12561], [12562, 12568], [12569, 12583], [12584, 12585], [12586, 12587], [12588, 12590], [12591, 12593], [12594, 12598], [12600, 12601], [12602, 12603], [12604, 12605], [12606, 12607], [12608, 12610], [12611, 12612], [12613, 12614], [12615, 12616], [12617, 12620], [12621, 12622], [12623, 12624], [12625, 12626], [12627, 12631], [12632, 12633], [12634, 12635], [12636, 12637], [12638, 12642], [12643, 12644], [12645, 12646], [12647, 12648], [12649, 12653], [12654, 12655], [12656, 12657], [12658, 12659], [12660, 12664], [12665, 12666], [12667, 12669], [12670, 12671], [12671, 12673], [12674, 12675], [12676, 12679], [12680, 12681], [12682, 12686], [12686, 12687], [12688, 12689], [12690, 12691], [12692, 12693], [12694, 12696], [12697, 12698], [12698, 12700], [12701, 12702], [12703, 12706], [12707, 12708], [12709, 12713], [12713, 12714], [12715, 12716], [12717, 12718], [12719, 12724], [12725, 12728], [12729, 12739], [12740, 12742], [12743, 12746], [12747, 12758], [12759, 12762], [12763, 12767], [12768, 12771], [12772, 12777], [12778, 12780], [12781, 12784], [12785, 12786], [12786, 12787], [12787, 12788], [12789, 12790], [12790, 12791], [12792, 12797], [12797, 12798], [12799, 12802], [12803, 12806], [12807, 12817], [12818, 12821], [12822, 12827], [12828, 12834], [12835, 12837], [12838, 12841], [12842, 12845], [12846, 12847], [12847, 12848], [12848, 12849], [12850, 12851], [12851, 12852], [12853, 12854], [12855, 12856], [12857, 12858], [12858, 12859], [12860, 12861], [12862, 12863], [12864, 12865], [12865, 12866], [12867, 12868], [12868, 12869], [12870, 12871], [12872, 12873], [12874, 12875], [12875, 12876], [12877, 12880], [12881, 12888], [12889, 12890], [12891, 12898], [12899, 12901], [12902, 12903], [12904, 12918], [12919, 12928], [12928, 12929], [12930, 12935], [12936, 12938], [12939, 12943], [12944, 12948], [12949, 12952], [12953, 12961], [12962, 12971], [12972, 12974], [12975, 12983], [12984, 12985], [12986, 12991], [12991, 12992], [12993, 12996], [12997, 13000], [13001, 13007], [13008, 13017], [13018, 13026], [13027, 13033], [13034, 13037], [13038, 13045], [13046, 13050], [13051, 13054], [13055, 13067], [13068, 13071], [13071, 13072], [13073, 13077], [13078, 13085], [13086, 13090], [13091, 13094], [13095, 13099], [13100, 13106], [13107, 13109], [13110, 13118], [13119, 13128], [13129, 13131], [13132, 13135], [13136, 13144], [13145, 13151], [13152, 13166], [13167, 13176], [13176, 13177], [13178, 13181], [13182, 13184], [13185, 13189], [13190, 13195], [13196, 13201], [13202, 13211], [13212, 13213], [13213, 13218], [13219, 13222], [13223, 13232], [13233, 13239], [13240, 13244], [13245, 13253], [13253, 13255], [13256, 13263], [13264, 13267], [13268, 13281], [13282, 13286], [13287, 13294], [13294, 13295], [13296, 13299], [13300, 13305], [13306, 13310], [13311, 13318], [13319, 13321], [13322, 13325], [13326, 13327], [13328, 13334], [13335, 13342], [13343, 13345], [13346, 13349], [13350, 13373], [13374, 13380], [13380, 13381], [13382, 13394], [13394, 13395], [13396, 13400], [13401, 13404], [13405, 13406], [13407, 13415], [13416, 13422], [13423, 13437], [13438, 13442], [13443, 13445], [13446, 13454], [13455, 13460], [13461, 13462], [13462, 13466], [13467, 13473], [13474, 13477], [13478, 13484], [13485, 13487], [13488, 13496], [13497, 13499], [13500, 13503], [13504, 13509], [13510, 13512], [13512, 13513], [13513, 13514], [13515, 13516], [13516, 13517], [13518, 13519], [13519, 13520], [13521, 13522], [13522, 13523], [13523, 13525], [13526, 13533], [13534, 13536], [13537, 13540], [13541, 13546], [13547, 13548], [13548, 13549], [13549, 13550], [13551, 13552], [13552, 13553], [13554, 13555], [13555, 13557], [13558, 13565], [13566, 13572], [13573, 13584], [13585, 13600], [13601, 13603], [13604, 13607], [13608, 13616], [13617, 13621], [13622, 13624], [13625, 13631], [13632, 13635], [13636, 13641], [13642, 13646], [13647, 13655], [13656, 13661], [13661, 13662], [13663, 13669], [13670, 13672], [13673, 13681], [13682, 13686], [13687, 13689], [13689, 13690], [13691, 13694], [13695, 13703], [13704, 13712], [13713, 13716], [13717, 13724], [13725, 13727], [13728, 13731], [13732, 13737], [13738, 13746], [13747, 13751], [13752, 13759], [13760, 13766], [13767, 13774], [13775, 13777], [13778, 13783], [13784, 13790], [13791, 13792], [13793, 13794], [13795, 13796], [13797, 13799], [13800, 13801], [13802, 13808], [13809, 13811], [13812, 13819], [13819, 13820], [13822, 13827], [13828, 13830], [13831, 13835], [13835, 13836], [13837, 13840], [13841, 13844], [13844, 13846], [13847, 13855], [13856, 13860], [13861, 13862], [13862, 13866], [13867, 13873], [13874, 13875], [13876, 13877], [13878, 13880], [13881, 13883], [13884, 13886], [13887, 13891], [13892, 13900], [13901, 13903], [13904, 13907], [13908, 13913], [13914, 13916], [13916, 13917], [13917, 13918], [13919, 13920], [13920, 13921], [13922, 13923], [13923, 13924], [13925, 13926], [13926, 13927], [13927, 13928], [13929, 13931], [13933, 13937], [13938, 13944], [13945, 13947], [13948, 13953], [13954, 13955], [13956, 13968], [13969, 13992], [13993, 13999], [14000, 14007], [14008, 14011], [14012, 14018], [14019, 14021], [14022, 14033], [14034, 14043], [14044, 14046], [14047, 14050], [14051, 14061], [14062, 14069], [14070, 14071], [14071, 14076], [14077, 14080], [14081, 14087], [14088, 14090], [14091, 14094], [14095, 14103], [14104, 14106], [14107, 14108], [14109, 14114], [14115, 14118], [14119, 14121], [14122, 14131], [14132, 14143], [14144, 14146], [14147, 14155], [14156, 14157], [14158, 14163], [14164, 14168], [14169, 14177], [14178, 14179], [14180, 14186], [14187, 14197], [14197, 14199], [14200, 14202], [14203, 14212], [14213, 14218], [14218, 14219], [14220, 14223], [14224, 14232], [14233, 14235], [14236, 14244], [14245, 14249], [14250, 14252], [14253, 14263], [14264, 14272], [14273, 14276], [14277, 14285], [14286, 14292], [14293, 14295], [14296, 14305], [14305, 14306], [14307, 14312], [14313, 14317], [14318, 14319], [14320, 14326], [14327, 14341], [14342, 14352], [14353, 14354], [14355, 14358], [14359, 14369], [14370, 14374], [14375, 14381], [14382, 14384], [14385, 14389], [14390, 14392], [14393, 14398], [14399, 14401], [14402, 14407], [14408, 14410], [14411, 14417], [14418, 14421], [14422, 14442], [14443, 14445], [14446, 14449], [14450, 14454], [14455, 14463], [14463, 14464], [14465, 14468], [14469, 14474], [14475, 14479], [14480, 14486], [14487, 14488], [14488, 14490], [14491, 14498], [14499, 14504], [14504, 14505], [14506, 14508], [14509, 14513], [14514, 14516], [14517, 14519], [14520, 14523], [14524, 14532], [14533, 14547], [14547, 14548], [14549, 14552], [14553, 14560], [14560, 14561], [14562, 14566], [14567, 14570], [14571, 14579], [14580, 14588], [14589, 14591], [14592, 14598], [14599, 14608], [14609, 14612], [14613, 14617], [14618, 14626], [14627, 14630], [14631, 14638], [14639, 14659], [14659, 14660], [14661, 14665], [14666, 14669], [14670, 14672], [14673, 14675], [14676, 14683], [14684, 14688], [14689, 14692], [14693, 14698], [14699, 14701], [14702, 14705], [14706, 14714], [14715, 14723], [14724, 14727], [14728, 14731], [14732, 14733], [14734, 14740], [14741, 14743], [14744, 14747], [14748, 14753], [14754, 14755], [14756, 14760], [14762, 14765], [14766, 14771], [14772, 14777], [14777, 14778], [14779, 14783], [14784, 14791], [14792, 14796], [14797, 14802], [14803, 14805], [14806, 14808], [14809, 14817], [14818, 14820], [14821, 14824], [14825, 14831], [14832, 14842], [14843, 14847], [14848, 14853], [14854, 14856], [14857, 14865], [14865, 14872], [14872, 14873], [14873, 14874], [14875, 14880], [14881, 14886], [14887, 14891], [14892, 14894], [14895, 14903], [14904, 14910], [14911, 14918], [14919, 14921], [14922, 14925], [14926, 14930], [14931, 14937], [14937, 14938], [14939, 14940], [14941, 14946], [14947, 14949], [14950, 14953], [14954, 14965], [14966, 14977], [14977, 14978], [14979, 14983], [14984, 14988], [14989, 14996], [14997, 15001], [15002, 15005], [15006, 15016], [15017, 15027], [15028, 15037], [15038, 15046], [15047, 15051], [15052, 15054], [15055, 15058], [15059, 15064], [15065, 15074], [15075, 15080], [15081, 15086], [15087, 15091], [15092, 15093], [15094, 15099], [15100, 15103], [15104, 15107], [15108, 15116], [15117, 15122], [15123, 15125], [15126, 15134], [15135, 15137], [15138, 15141], [15142, 15148], [15149, 15151], [15152, 15155], [15156, 15160], [15161, 15170], [15170, 15171], [15172, 15177], [15178, 15183], [15184, 15186], [15187, 15198], [15199, 15203], [15204, 15209], [15210, 15213], [15214, 15230], [15231, 15233], [15234, 15237], [15238, 15242], [15243, 15249], [15249, 15250], [15251, 15255], [15256, 15258], [15259, 15268], [15269, 15271], [15272, 15279], [15280, 15287], [15288, 15290], [15291, 15294], [15295, 15300], [15301, 15309], [15310, 15323], [15324, 15331], [15331, 15332], [15333, 15338], [15339, 15344], [15345, 15350], [15351, 15356], [15357, 15361], [15362, 15364], [15365, 15366], [15367, 15372], [15373, 15378], [15379, 15380], [15381, 15382], [15383, 15384], [15384, 15385], [15385, 15386], [15387, 15388], [15388, 15389], [15390, 15392], [15393, 15395], [15396, 15399], [15400, 15405], [15405, 15406], [15407, 15411], [15412, 15413], [15413, 15414], [15414, 15415], [15416, 15418], [15418, 15419], [15420, 15422], [15423, 15426], [15427, 15429], [15430, 15433], [15434, 15439], [15439, 15440], [15441, 15448], [15449, 15459], [15460, 15463], [15464, 15473], [15474, 15479], [15480, 15488], [15488, 15489], [15490, 15494], [15495, 15498], [15499, 15509], [15510, 15512], [15513, 15524], [15525, 15526], [15527, 15529], [15530, 15533], [15534, 15540], [15541, 15546], [15547, 15549], [15550, 15553], [15554, 15562], [15563, 15571], [15571, 15572], [15573, 15575], [15576, 15579], [15580, 15584], [15585, 15591], [15592, 15597], [15598, 15600], [15601, 15609], [15609, 15610], [15611, 15614], [15615, 15621], [15622, 15624], [15625, 15628], [15629, 15635], [15636, 15650], [15651, 15656], [15657, 15659], [15660, 15663], [15664, 15681], [15681, 15682], [15683, 15688], [15689, 15694], [15695, 15699], [15700, 15702], [15703, 15713], [15714, 15720], [15721, 15725], [15726, 15732], [15733, 15735], [15736, 15739], [15740, 15744], [15745, 15751], [15751, 15752], [15753, 15756], [15757, 15761], [15762, 15764], [15765, 15769], [15770, 15771], [15772, 15778], [15779, 15792], [15793, 15795], [15796, 15799], [15800, 15808], [15809, 15813], [15814, 15817], [15818, 15821], [15822, 15830], [15830, 15831], [15832, 15837], [15838, 15842], [15843, 15845], [15846, 15850], [15851, 15853], [15854, 15857], [15858, 15865], [15866, 15870], [15871, 15876], [15877, 15879], [15880, 15883], [15884, 15888], [15889, 15891], [15892, 15900], [15901, 15905], [15906, 15908], [15909, 15912], [15913, 15925], [15926, 15935], [15936, 15938], [15939, 15942], [15942, 15943], [15944, 15957], [15958, 15959], [15959, 15960], [15961, 15971], [15972, 15984], [15985, 15987], [15988, 15992], [15993, 15998], [15999, 16012], [16013, 16020], [16020, 16021], [16022, 16024], [16025, 16029], [16030, 16033], [16034, 16049], [16050, 16057], [16058, 16063], [16064, 16067], [16068, 16080], [16081, 16083], [16084, 16087], [16088, 16092], [16093, 16099], [16100, 16105], [16106, 16110], [16111, 16113], [16114, 16124], [16124, 16125], [16126, 16133], [16134, 16136], [16137, 16142], [16143, 16146], [16147, 16150], [16151, 16161], [16162, 16170], [16170, 16171], [16172, 16174], [16175, 16181], [16182, 16189], [16190, 16202], [16203, 16211], [16211, 16212], [16213, 16218], [16219, 16223], [16224, 16227], [16228, 16235], [16236, 16238], [16239, 16240], [16241, 16246], [16247, 16249], [16250, 16258], [16259, 16262], [16263, 16271], [16272, 16280], [16281, 16288], [16289, 16295], [16296, 16297], [16297, 16298], [16299, 16305], [16306, 16310], [16311, 16313], [16314, 16315], [16316, 16321], [16322, 16324], [16325, 16336], [16337, 16341], [16341, 16342], [16343, 16346], [16347, 16355], [16356, 16358], [16359, 16360], [16361, 16366], [16367, 16368], [16369, 16370], [16371, 16372], [16372, 16373], [16373, 16374], [16375, 16376], [16376, 16377], [16378, 16380], [16381, 16383], [16384, 16385], [16386, 16387], [16387, 16388], [16388, 16389], [16390, 16392], [16392, 16394], [16395, 16406], [16407, 16411], [16412, 16415], [16416, 16428], [16428, 16429], [16430, 16431], [16432, 16441], [16442, 16444], [16445, 16448], [16449, 16453], [16454, 16462], [16463, 16469], [16470, 16476], [16477, 16481], [16482, 16485], [16486, 16494], [16495, 16501], [16502, 16504], [16505, 16508], [16509, 16513], [16514, 16516], [16517, 16523], [16524, 16528], [16529, 16538], [16539, 16541], [16542, 16546], [16546, 16547], [16548, 16550], [16551, 16556], [16557, 16560], [16561, 16564], [16565, 16573], [16574, 16578], [16579, 16586], [16586, 16587], [16588, 16593], [16594, 16595], [16596, 16603], [16604, 16605], [16606, 16611], [16612, 16616], [16617, 16619], [16620, 16625], [16626, 16628], [16629, 16630], [16630, 16631], [16631, 16632], [16632, 16633], [16634, 16635], [16636, 16637], [16637, 16638], [16638, 16640], [16641, 16643], [16643, 16644], [16645, 16646], [16647, 16651], [16652, 16653], [16654, 16656], [16657, 16658], [16659, 16663], [16664, 16665], [16666, 16668], [16668, 16669], [16670, 16673], [16674, 16683], [16684, 16691], [16692, 16694], [16695, 16697], [16698, 16706], [16707, 16711], [16712, 16716], [16717, 16718], [16718, 16719], [16719, 16721], [16721, 16722], [16723, 16724], [16725, 16730], [16731, 16732], [16733, 16735], [16736, 16737], [16738, 16743], [16744, 16745], [16746, 16748], [16750, 16751], [16752, 16753], [16754, 16755], [16755, 16756], [16756, 16757], [16757, 16758], [16759, 16760], [16761, 16762], [16763, 16764], [16764, 16768], [16769, 16770], [16771, 16773], [16774, 16775], [16776, 16780], [16781, 16782], [16783, 16785], [16785, 16786], [16787, 16788], [16789, 16790], [16791, 16795], [16796, 16797], [16798, 16800], [16801, 16802], [16803, 16807], [16808, 16809], [16810, 16812], [16813, 16818], [16818, 16819], [16820, 16822], [16823, 16830], [16831, 16832], [16833, 16842], [16843, 16846], [16847, 16848], [16849, 16858], [16858, 16859], [16860, 16862], [16863, 16867], [16868, 16870], [16871, 16875], [16876, 16879], [16880, 16895], [16896, 16900], [16901, 16904], [16905, 16913], [16914, 16916], [16917, 16920], [16921, 16927], [16928, 16944], [16945, 16947], [16948, 16951], [16952, 16960], [16961, 16963], [16964, 16967], [16968, 16978], [16979, 16986], [16987, 16993], [16994, 16998], [16998, 16999], [17000, 17012], [17013, 17014], [17015, 17030], [17031, 17032], [17033, 17038], [17038, 17039], [17040, 17044], [17045, 17047], [17048, 17063], [17064, 17066], [17067, 17074], [17075, 17079], [17080, 17085], [17086, 17093], [17094, 17102], [17103, 17109], [17109, 17110], [17111, 17116], [17117, 17120], [17121, 17126], [17127, 17130], [17131, 17133], [17134, 17139], [17140, 17141], [17141, 17145], [17146, 17152], [17153, 17160], [17161, 17163], [17164, 17167], [17168, 17171], [17171, 17173], [17174, 17182], [17183, 17193], [17194, 17197], [17198, 17202], [17203, 17205], [17206, 17209], [17210, 17216], [17216, 17217], [17218, 17223], [17223, 17224], [17225, 17230], [17231, 17232], [17233, 17240], [17241, 17245], [17246, 17247], [17247, 17248], [17248, 17249], [17249, 17251], [17252, 17255], [17256, 17263], [17264, 17266], [17267, 17274], [17275, 17277], [17278, 17286], [17287, 17292], [17293, 17298], [17299, 17302], [17303, 17305], [17306, 17307], [17308, 17316], [17317, 17318], [17319, 17323], [17324, 17330], [17331, 17336], [17337, 17339], [17340, 17343], [17344, 17352], [17353, 17355], [17356, 17357], [17357, 17358], [17358, 17359], [17359, 17361], [17362, 17367], [17368, 17376], [17377, 17379], [17380, 17385], [17386, 17398], [17398, 17399], [17400, 17403], [17404, 17408], [17409, 17416], [17417, 17422], [17423, 17434], [17435, 17439], [17439, 17440], [17441, 17442], [17443, 17485], [17486, 17487], [17488, 17489], [17490, 17503], [17504, 17505], [17506, 17507], [17508, 17518], [17519, 17531], [17533, 17534], [17535, 17536], [17537, 17579], [17580, 17581], [17583, 17584], [17585, 17586], [17587, 17604], [17604, 17605], [17605, 17612], [17612, 17613], [17614, 17619], [17619, 17620], [17620, 17621], [17621, 17622], [17622, 17627], [17627, 17629], [17630, 17634], [17635, 17637], [17638, 17639], [17639, 17646], [17646, 17647], [17648, 17649], [17650, 17651], [17651, 17652], [17652, 17655], [17656, 17657], [17658, 17663], [17663, 17665], [17666, 17670], [17671, 17673], [17675, 17677], [17677, 17683], [17683, 17685], [17686, 17687], [17687, 17693], [17693, 17695], [17697, 17698], [17700, 17701], [17701, 17703], [17704, 17705], [17706, 17708], [17709, 17710], [17711, 17712], [17712, 17713], [17715, 17732], [17733, 17734], [17735, 17737], [17737, 17743], [17743, 17745], [17746, 17747], [17747, 17753], [17753, 17755], [17756, 17758], [17759, 17760], [17761, 17778], [17778, 17779], [17779, 17796], [17796, 17797], [17799, 17805], [17806, 17808], [17808, 17809], [17809, 17810], [17811, 17813], [17814, 17816], [17816, 17817], [17817, 17818], [17818, 17819], [17820, 17826], [17827, 17834], [17835, 17837], [17838, 17855], [17856, 17860], [17861, 17865], [17866, 17870], [17871, 17876], [17877, 17881], [17882, 17888], [17889, 17891], [17892, 17897], [17898, 17901], [17902, 17912], [17913, 17921], [17922, 17926], [17927, 17936], [17937, 17939], [17940, 17943], [17944, 17947], [17948, 17955], [17956, 17958], [17959, 17961], [17962, 17969], [17970, 17973], [17974, 17978], [17979, 17981], [17982, 17985], [17986, 17993], [17994, 17999], [18000, 18005], [18006, 18008], [18009, 18015], [18016, 18020], [18021, 18024], [18025, 18030], [18031, 18036], [18036, 18037], [18038, 18040], [18041, 18043], [18044, 18053], [18054, 18056], [18057, 18063], [18064, 18068], [18069, 18076], [18077, 18091], [18092, 18094], [18095, 18098], [18099, 18110], [18111, 18113], [18114, 18118], [18119, 18124], [18125, 18128], [18129, 18131], [18132, 18137], [18138, 18143], [18144, 18147], [18148, 18158], [18159, 18165], [18165, 18166], [18167, 18180], [18181, 18182], [18182, 18183], [18184, 18191], [18192, 18202], [18203, 18209], [18210, 18214], [18215, 18218], [18219, 18227], [18228, 18238], [18239, 18247], [18248, 18251], [18252, 18262], [18263, 18265], [18266, 18268], [18269, 18276], [18277, 18285], [18285, 18286], [18287, 18291], [18292, 18296], [18297, 18302], [18303, 18311], [18312, 18321], [18322, 18326], [18327, 18334], [18335, 18337], [18338, 18339], [18340, 18346], [18347, 18356], [18357, 18358], [18358, 18360], [18361, 18363], [18364, 18368], [18369, 18374], [18374, 18375], [18376, 18381], [18382, 18385], [18386, 18388], [18389, 18394], [18394, 18395], [18396, 18398], [18399, 18407], [18407, 18408], [18409, 18418], [18419, 18423], [18424, 18428], [18429, 18438], [18439, 18442], [18443, 18447], [18448, 18455], [18455, 18456], [18457, 18460], [18461, 18474], [18474, 18475], [18476, 18481], [18482, 18485], [18486, 18489], [18490, 18497], [18497, 18498], [18499, 18504], [18505, 18508], [18509, 18512], [18513, 18515], [18516, 18525], [18526, 18531], [18532, 18537], [18538, 18541], [18542, 18562], [18563, 18565], [18566, 18569], [18570, 18574], [18575, 18583], [18584, 18586], [18587, 18591], [18592, 18596], [18597, 18600], [18601, 18609], [18610, 18619], [18620, 18622], [18623, 18626], [18627, 18629], [18630, 18633], [18634, 18644], [18645, 18649], [18650, 18657], [18658, 18660], [18661, 18664], [18665, 18670], [18671, 18674], [18674, 18675], [18676, 18684], [18685, 18688], [18689, 18701], [18702, 18704], [18705, 18708], [18709, 18716], [18717, 18721], [18722, 18725], [18726, 18729], [18730, 18740], [18741, 18743], [18744, 18745], [18746, 18747], [18747, 18748], [18748, 18749], [18749, 18750], [18751, 18753], [18753, 18754], [18755, 18758], [18759, 18761], [18762, 18763], [18764, 18765], [18765, 18766], [18766, 18767], [18767, 18768], [18769, 18771], [18771, 18773], [18774, 18777], [18778, 18782], [18783, 18786], [18787, 18797], [18798, 18807], [18808, 18812], [18813, 18815], [18816, 18817], [18818, 18820], [18821, 18822], [18823, 18825], [18825, 18826], [18827, 18832], [18833, 18840], [18841, 18849], [18850, 18855], [18855, 18856], [18857, 18864], [18865, 18868], [18869, 18876], [18877, 18882], [18883, 18887], [18888, 18893], [18894, 18896], [18897, 18900], [18900, 18901], [18902, 18905], [18906, 18913], [18914, 18917], [18918, 18921], [18922, 18929], [18930, 18944], [18944, 18945], [18946, 18948], [18949, 18952], [18953, 18960], [18961, 18963], [18964, 18971], [18971, 18972], [18973, 18974], [18975, 19014], [19015, 19016], [19017, 19018], [19021, 19034], [19035, 19036], [19037, 19038], [19039, 19046], [19047, 19057], [19059, 19060], [19061, 19062], [19063, 19102], [19103, 19104], [19106, 19107], [19108, 19110], [19111, 19115], [19116, 19119], [19120, 19128], [19129, 19138], [19139, 19141], [19142, 19144], [19145, 19149], [19150, 19157], [19158, 19160], [19161, 19163], [19164, 19170], [19171, 19173], [19174, 19175], [19176, 19178], [19179, 19181], [19182, 19184], [19186, 19193], [19194, 19195], [19196, 19198], [19198, 19204], [19204, 19206], [19207, 19208], [19208, 19214], [19214, 19216], [19218, 19219], [19220, 19221], [19222, 19223], [19224, 19225], [19225, 19227], [19227, 19228], [19229, 19231], [19231, 19232], [19233, 19248], [19249, 19250], [19251, 19264], [19264, 19265], [19265, 19272], [19272, 19273], [19274, 19285], [19285, 19286], [19287, 19292], [19292, 19293], [19293, 19294], [19294, 19295], [19295, 19302], [19303, 19310], [19310, 19311], [19312, 19313], [19313, 19328], [19328, 19331], [19332, 19333], [19334, 19341], [19342, 19349], [19349, 19350], [19352, 19354], [19354, 19356], [19356, 19357], [19358, 19361], [19361, 19362], [19364, 19365], [19366, 19367], [19368, 19385], [19385, 19386], [19386, 19393], [19393, 19394], [19395, 19401], [19402, 19405], [19406, 19407], [19408, 19410], [19411, 19413], [19414, 19415], [19416, 19421], [19422, 19425], [19426, 19434], [19435, 19437], [19438, 19441], [19442, 19449], [19450, 19455], [19456, 19463], [19464, 19472], [19473, 19481], [19482, 19484], [19485, 19487], [19487, 19489], [19489, 19490], [19491, 19494], [19494, 19496], [19497, 19500], [19501, 19505], [19506, 19508], [19509, 19513], [19514, 19521], [19522, 19533], [19534, 19536], [19537, 19540], [19541, 19547], [19548, 19559], [19560, 19561], [19561, 19562], [19562, 19563], [19563, 19564], [19565, 19566], [19567, 19570], [19571, 19572], [19573, 19575], [19576, 19577], [19578, 19580], [19581, 19582], [19583, 19585], [19586, 19593], [19593, 19594], [19595, 19600], [19601, 19603], [19604, 19608], [19609, 19613], [19614, 19616], [19617, 19618], [19619, 19621], [19622, 19623], [19624, 19626], [19626, 19627], [19628, 19630], [19631, 19634], [19635, 19642], [19643, 19646], [19647, 19655], [19656, 19664], [19665, 19667], [19668, 19669], [19669, 19670], [19670, 19671], [19671, 19672], [19673, 19674], [19675, 19678], [19679, 19680], [19681, 19683], [19684, 19685], [19686, 19688], [19689, 19690], [19691, 19693], [19694, 19695], [19696, 19698], [19699, 19700], [19701, 19706], [19707, 19708], [19709, 19711], [19712, 19713], [19714, 19717], [19718, 19719], [19720, 19722], [19723, 19728], [19729, 19734], [19735, 19737], [19738, 19743], [19744, 19746], [19747, 19750], [19751, 19757], [19758, 19761], [19762, 19767], [19768, 19773], [19773, 19774], [19775, 19778], [19778, 19779], [19780, 19784], [19784, 19785], [19786, 19788], [19789, 19794], [19795, 19797], [19798, 19802], [19803, 19804], [19805, 19814], [19814, 19815], [19816, 19818], [19819, 19822], [19823, 19829], [19830, 19834], [19835, 19837], [19838, 19841], [19842, 19848], [19849, 19854], [19855, 19858], [19859, 19863], [19864, 19865], [19866, 19874], [19875, 19877], [19878, 19881], [19882, 19890], [19891, 19895], [19896, 19897], [19898, 19900], [19901, 19902], [19903, 19907], [19908, 19909], [19910, 19913], [19914, 19917], [19918, 19921], [19921, 19922], [19924, 19927], [19928, 19931], [19932, 19935], [19936, 19939], [19940, 19948], [19949, 19957], [19958, 19963], [19964, 19967], [19968, 19972], [19973, 19974], [19975, 19977], [19978, 19981], [19982, 19986], [19987, 19988], [19989, 19991], [19991, 19992], [19993, 19998], [19999, 20006], [20007, 20015], [20016, 20018], [20019, 20028], [20028, 20029], [20030, 20033], [20034, 20037], [20038, 20044], [20045, 20050], [20051, 20057], [20058, 20061], [20062, 20068], [20069, 20071], [20072, 20073], [20074, 20075], [20075, 20081], [20081, 20083], [20084, 20086], [20087, 20088], [20089, 20090], [20090, 20096], [20096, 20098], [20099, 20104], [20105, 20113], [20114, 20118], [20119, 20122], [20123, 20131], [20132, 20139], [20139, 20140], [20141, 20143], [20144, 20149], [20150, 20155], [20155, 20156], [20157, 20158], [20159, 20161], [20162, 20166], [20167, 20169], [20170, 20174], [20175, 20176], [20177, 20184], [20185, 20186], [20186, 20187], [20188, 20189], [20190, 20192], [20192, 20193], [20194, 20196], [20197, 20199], [20199, 20200], [20201, 20205], [20206, 20210], [20211, 20212], [20213, 20216], [20216, 20218], [20219, 20220], [20221, 20223], [20223, 20225], [20225, 20227], [20227, 20229], [20230, 20231], [20233, 20235], [20235, 20237], [20238, 20241], [20241, 20242], [20242, 20244], [20245, 20246], [20247, 20248], [20249, 20252], [20253, 20256], [20257, 20260], [20261, 20263], [20264, 20265], [20266, 20285], [20285, 20286], [20286, 20296], [20296, 20297], [20298, 20299], [20299, 20301], [20301, 20302], [20303, 20305], [20305, 20307], [20308, 20314], [20315, 20316], [20317, 20319], [20320, 20322], [20324, 20326], [20327, 20328], [20329, 20346], [20346, 20349], [20349, 20355], [20355, 20357], [20358, 20359], [20359, 20365], [20365, 20368], [20369, 20375], [20376, 20377], [20378, 20380], [20381, 20383], [20384, 20388], [20389, 20394], [20395, 20398], [20399, 20408], [20409, 20411], [20412, 20414], [20415, 20419], [20420, 20423], [20424, 20434], [20435, 20437], [20438, 20445], [20446, 20448], [20449, 20453], [20454, 20455], [20456, 20459], [20460, 20464], [20465, 20467], [20468, 20472], [20473, 20478], [20479, 20482], [20483, 20491], [20492, 20501], [20502, 20504], [20505, 20508], [20509, 20513], [20514, 20521], [20522, 20524], [20525, 20528], [20529, 20534], [20535, 20538], [20538, 20539], [20540, 20543], [20544, 20548], [20549, 20552], [20553, 20557], [20558, 20566], [20567, 20576], [20576, 20577], [20578, 20591], [20592, 20593], [20593, 20594], [20595, 20610], [20611, 20616], [20617, 20622], [20623, 20638], [20639, 20646], [20647, 20650], [20651, 20652], [20653, 20658], [20659, 20664], [20665, 20670], [20671, 20673], [20674, 20677], [20678, 20682], [20683, 20685], [20686, 20689], [20690, 20695], [20696, 20700], [20701, 20704], [20705, 20707], [20708, 20714], [20714, 20715], [20716, 20720], [20721, 20725], [20726, 20735], [20736, 20742], [20743, 20757], [20758, 20759], [20759, 20761], [20762, 20767], [20767, 20768], [20769, 20775], [20775, 20776], [20777, 20784], [20785, 20795], [20796, 20798], [20799, 20807], [20808, 20812], [20813, 20815], [20816, 20827], [20828, 20837], [20838, 20841], [20842, 20862], [20863, 20865], [20866, 20869], [20870, 20874], [20875, 20883], [20884, 20888], [20889, 20894], [20895, 20910], [20911, 20916], [20916, 20917], [20918, 20920], [20921, 20927], [20928, 20930], [20931, 20935], [20936, 20938], [20939, 20941], [20942, 20949], [20949, 20950], [20952, 20957], [20958, 20962], [20963, 20972], [20973, 20976], [20977, 20980], [20981, 21000], [21001, 21004], [21005, 21020], [21021, 21027], [21027, 21028], [21031, 21034], [21035, 21041], [21042, 21045], [21046, 21054], [21055, 21061], [21062, 21064], [21065, 21074], [21075, 21080], [21081, 21083], [21084, 21086], [21087, 21093], [21094, 21097], [21098, 21104], [21105, 21107], [21108, 21118], [21119, 21121], [21122, 21126], [21127, 21134], [21135, 21137], [21138, 21145], [21146, 21148], [21149, 21152], [21153, 21159], [21160, 21165], [21166, 21168], [21169, 21177], [21178, 21182], [21182, 21183], [21184, 21188], [21189, 21196], [21197, 21201], [21202, 21204], [21205, 21214], [21215, 21223], [21223, 21224], [21225, 21228], [21229, 21236], [21237, 21239], [21240, 21249], [21250, 21252], [21253, 21256], [21257, 21262], [21263, 21271], [21272, 21285], [21286, 21293], [21293, 21294], [21295, 21300], [21301, 21304], [21305, 21315], [21316, 21318], [21319, 21338], [21339, 21341], [21342, 21346], [21347, 21349], [21350, 21359], [21360, 21363], [21364, 21373], [21374, 21381], [21382, 21388], [21388, 21389], [21391, 21394], [21395, 21397], [21398, 21399], [21400, 21408], [21409, 21411], [21412, 21413], [21414, 21418], [21419, 21421], [21422, 21431], [21432, 21436], [21437, 21441], [21441, 21442], [21443, 21449], [21450, 21451], [21451, 21452], [21454, 21457], [21458, 21462], [21463, 21470], [21471, 21475], [21476, 21479], [21480, 21484], [21485, 21487], [21488, 21496], [21496, 21497], [21498, 21502], [21503, 21505], [21506, 21510], [21511, 21516], [21517, 21520], [21521, 21531], [21532, 21540], [21541, 21544], [21545, 21552], [21553, 21561], [21562, 21564], [21565, 21575], [21576, 21583], [21583, 21584], [21585, 21587], [21588, 21592], [21593, 21597], [21597, 21598], [21599, 21602], [21603, 21610], [21611, 21613], [21614, 21625], [21626, 21630], [21631, 21636], [21637, 21643], [21644, 21646], [21647, 21658], [21659, 21661], [21662, 21667], [21667, 21668], [21669, 21671], [21672, 21682], [21683, 21686], [21687, 21692], [21693, 21697], [21698, 21701], [21702, 21705], [21706, 21713], [21713, 21714], [21715, 21717], [21718, 21721], [21722, 21731], [21732, 21736], [21737, 21744], [21744, 21745], [21746, 21748], [21749, 21752], [21753, 21756], [21757, 21759], [21760, 21763], [21764, 21769], [21770, 21771], [21772, 21779], [21780, 21789], [21790, 21794], [21795, 21798], [21799, 21801], [21802, 21810], [21811, 21813], [21814, 21823], [21824, 21828], [21829, 21833], [21834, 21836], [21837, 21840], [21841, 21844], [21845, 21847], [21848, 21851], [21852, 21859], [21859, 21860], [21861, 21862], [21863, 21903], [21904, 21905], [21906, 21907], [21908, 21921], [21922, 21923], [21924, 21925], [21926, 21941], [21942, 21947], [21949, 21950], [21951, 21952], [21953, 21993], [21994, 21995], [21997, 22004], [22005, 22006], [22007, 22009], [22009, 22015], [22015, 22017], [22018, 22019], [22019, 22025], [22025, 22027], [22028, 22045], [22046, 22047], [22048, 22057], [22057, 22058], [22058, 22059], [22060, 22061], [22062, 22063], [22063, 22066], [22066, 22068], [22069, 22077], [22077, 22078], [22078, 22081], [22081, 22082], [22082, 22084], [22085, 22090], [22090, 22091], [22091, 22092], [22092, 22093], [22093, 22102], [22103, 22110], [22110, 22111], [22112, 22113], [22113, 22130], [22130, 22133], [22134, 22135], [22136, 22145], [22146, 22153], [22153, 22154], [22156, 22158], [22158, 22167], [22167, 22169], [22170, 22171], [22171, 22174], [22174, 22176], [22178, 22184], [22185, 22197], [22197, 22198], [22198, 22215], [22215, 22216], [22217, 22219], [22220, 22232], [22232, 22233], [22233, 22240], [22240, 22241], [22242, 22244], [22245, 22253], [22254, 22256], [22257, 22263], [22264, 22268], [22269, 22272], [22273, 22284], [22285, 22292], [22293, 22295], [22296, 22303], [22303, 22304], [22305, 22308], [22309, 22316], [22317, 22319], [22320, 22324], [22325, 22331], [22332, 22340], [22341, 22344], [22345, 22350], [22351, 22362], [22363, 22365], [22366, 22369], [22370, 22378], [22378, 22379], [22380, 22383], [22384, 22387], [22388, 22395], [22396, 22398], [22399, 22402], [22403, 22413], [22414, 22421], [22422, 22426], [22427, 22438], [22439, 22442], [22443, 22450], [22451, 22459], [22460, 22466], [22467, 22471], [22472, 22475], [22476, 22484], [22485, 22489], [22490, 22493], [22494, 22498], [22499, 22501], [22502, 22512], [22512, 22513], [22514, 22524], [22525, 22530], [22531, 22534], [22535, 22543], [22544, 22548], [22549, 22557], [22558, 22561], [22562, 22566], [22567, 22576], [22577, 22587], [22588, 22591], [22592, 22594], [22595, 22598], [22599, 22609], [22609, 22610], [22611, 22621], [22622, 22624], [22625, 22635], [22636, 22644], [22644, 22645], [22646, 22649], [22650, 22653], [22654, 22659], [22660, 22668], [22669, 22679], [22680, 22682], [22683, 22689], [22690, 22692], [22692, 22693], [22694, 22696], [22697, 22699], [22700, 22704], [22705, 22716], [22717, 22719], [22720, 22724], [22725, 22733], [22733, 22734], [22735, 22747], [22747, 22748], [22749, 22764], [22765, 22773], [22774, 22777], [22778, 22783], [22784, 22792], [22793, 22796], [22797, 22799], [22800, 22809], [22810, 22816], [22817, 22819], [22820, 22824], [22825, 22834], [22835, 22843], [22844, 22851], [22852, 22855], [22856, 22862], [22863, 22865], [22866, 22873], [22874, 22887], [22888, 22898], [22899, 22901], [22902, 22908], [22909, 22915], [22915, 22916], [22917, 22919], [22920, 22931], [22932, 22934], [22935, 22939], [22940, 22944], [22945, 22949], [22949, 22950], [22951, 22954], [22955, 22961], [22962, 22966], [22967, 22969], [22970, 22977], [22978, 22980], [22981, 22986], [22986, 22989], [22989, 22995], [22995, 22996], [22996, 22999], [22999, 23000], [23000, 23012], [23012, 23013], [23013, 23028], [23028, 23030], [23031, 23047], [23048, 23051], [23052, 23058], [23059, 23064], [23065, 23069], [23070, 23072], [23073, 23078], [23079, 23084], [23085, 23090], [23090, 23091], [23092, 23102], [23103, 23112], [23113, 23116], [23117, 23124], [23125, 23129], [23130, 23132], [23133, 23136], [23137, 23144], [23145, 23157], [23158, 23166], [23167, 23171], [23172, 23175], [23176, 23181], [23182, 23190], [23191, 23197], [23198, 23200], [23201, 23205], [23206, 23210], [23211, 23214], [23215, 23222], [23223, 23225], [23226, 23235], [23236, 23240], [23241, 23248], [23249, 23253], [23254, 23257], [23258, 23264], [23265, 23270], [23271, 23274], [23275, 23284], [23285, 23287], [23288, 23292], [23293, 23295], [23296, 23299], [23300, 23311], [23312, 23320], [23321, 23330], [23331, 23333], [23334, 23338], [23339, 23343], [23344, 23348], [23348, 23349], [23350, 23353], [23354, 23363], [23364, 23376], [23377, 23380], [23381, 23384], [23385, 23389], [23390, 23404], [23405, 23407], [23408, 23411], [23412, 23418], [23418, 23419], [23420, 23430], [23431, 23438], [23438, 23439], [23440, 23445], [23446, 23453], [23453, 23454], [23455, 23459], [23460, 23464], [23464, 23465], [23466, 23472], [23473, 23479], [23479, 23480], [23481, 23487], [23488, 23494], [23494, 23495], [23496, 23501], [23502, 23510], [23511, 23524], [23525, 23532], [23533, 23541], [23542, 23545], [23545, 23546], [23546, 23548], [23549, 23558], [23559, 23561], [23561, 23562], [23563, 23567], [23567, 23568], [23569, 23572], [23572, 23573], [23574, 23579], [23579, 23582], [23582, 23586], [23586, 23587], [23587, 23589], [23589, 23593], [23593, 23594], [23594, 23602], [23602, 23603], [23603, 23611], [23611, 23612], [23612, 23615], [23615, 23616], [23617, 23621], [23621, 23623], [23623, 23625], [23626, 23631], [23632, 23637], [23637, 23638], [23639, 23645], [23646, 23649], [23650, 23656], [23656, 23657], [23658, 23661], [23662, 23668], [23669, 23678], [23678, 23679], [23680, 23697], [23698, 23704], [23705, 23715], [23716, 23726], [23726, 23727], [23728, 23743], [23744, 23750], [23751, 23754], [23755, 23758], [23759, 23765], [23765, 23766], [23767, 23775], [23776, 23780], [23780, 23781], [23782, 23785], [23785, 23786], [23787, 23792], [23792, 23795], [23795, 23804], [23804, 23805], [23805, 23808], [23808, 23809], [23809, 23812], [23812, 23813], [23813, 23816], [23816, 23817], [23817, 23824], [23824, 23825], [23825, 23832], [23832, 23833], [23833, 23839], [23839, 23851], [23851, 23852], [23853, 23857], [23857, 23859], [23859, 23861], [23862, 23870], [23870, 23871], [23872, 23874], [23874, 23876], [23877, 23892], [23893, 23896], [23897, 23918], [23919, 23925], [23926, 23936], [23937, 23943], [23944, 23951], [23951, 23952], [23953, 23957], [23957, 23958], [23959, 23962], [23962, 23963], [23964, 23969], [23969, 23972], [23972, 23975], [23975, 23976], [23976, 23979], [23979, 23980], [23980, 23987], [23987, 23988], [23988, 24001], [24001, 24003]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 24004, "jlasky", "content", "human gold"]]}], "version": 2}