{"signal": "title: Tailoring Sandbox Techniques to Hidden Threats\nurl: https://unit42.paloaltonetworks.com/tailoring-sandbox-techniques/\n\nExecutive Summary\nMalware authors often throw curve balls that are meant to confound automated detection systems. We’ve adapted to these techniques by tailoring our analysis platform in a couple of notable ways that we’ll discuss, particularly to address malware that engages in sandbox evasion.\nThe first is an approach we call “dependency emulation,” where we can successfully detonate malware samples that would not normally be able to execute in our sandbox environment due to a lack of dependencies. We will also discuss our strategies of stealthy instrumentation for analysis of encrypted network traffic, to combat the ways SSL can be used to complicate command-and-control (C2) traffic analysis.\nOne overarching goal malware authors share is to remain undetected until their overall objective is reached. As we’ve previously detailed in this blog post series, this has resulted in a seemingly limitless number of evasions and strategies targeted at confounding sandboxing and static analysis approaches. Due to the endless cat-and-mouse nature of reacting to malware authors’ efforts to remain undetected, we’ve come to understand that the most important characteristic for any automated malware analysis platform is adaptability.\nPalo Alto Networks customers receive improved detection for the evasions discussed in this blog through Advanced WildFire.\nTable of Contents\nDependency EmulationExample File InfectorMitigating the Dependency ProblemVMI SSL/TLS DecryptionTLS HandshakesExample SSL Decryption With WiresharkConclusionIndicators of Compromise\nDependency Emulation\nIn the context of malware execution, we talk a lot about dependencies. When we do, we’re referring to additional code that an executable depends on that is not inside the executable file. On Windows, external dependencies are usually Dynamically Linked Libraries (DLLs) that contain additional functionality that can be imported into the process to execute.\nOften malware does not require external libraries in order to execute its malicious code, or it might call functions from those external libraries in a very late stage of its execution. Over the past few years we’ve noticed a large uptick in malicious Windows executables that require external libraries for things like graphical user interfaces or better cross-platform support, and if the libraries are missing, then the malicious sample won’t be able to run. When Windows cannot load an application because of a missing library, it will show a “System Error” error message box that displays the missing library name.\nWhen we run any executable in our sandbox environment that requires dependencies that are not present, we would see the same error. But we wouldn’t be able to get any analysis information from the sample because no malicious code was executed.\nIn Figure 1, we can see a screenshot of the ATMSpitter malware family, which requires the DLL MSXFS.dll to fully detonate. Without the required DLL, we would just see an error dialog telling us that Windows can’t run this file. If we place the correct file inside the same directory and run the sample again, it runs just fine and we can extract information such as executed system calls and modified memory regions.\nFigure 1. ATMSpitter malware requires MSXFS.dll to run.File infectors like Sality, Floxif, Expiro and Ramnit typically infect predefined sets of executables that they find on the disk. If the infected file requires specific libraries that are not part of the operating system (OS), then chances are it’s not going to detonate inside a malware analysis sandbox because these dependencies likely won’t be preinstalled in the environment. Our sandbox environments are constrained in resources like disk space, and the number of DLL files in the world is seemingly infinite.\nNormally, when we run into this situation and the OS loader refuses to execute our file, we are left with no data at all from dynamic analysis. What is even more frustrating about this situation is that in many cases, those dependencies don’t matter for infected files in that they aren’t even going to be used.\nFile infectors usually call their malicious code very early (e.g., by replacing an early call instruction to their malicious code, or by overwriting the entry point in the PE header) before any function calls from external libraries are ever called. The OS will refuse to load and execute our file, despite the fact that none of the dependencies mattered anyway.\nExample File Infector\nLet’s take a look at one file that has been infected by the Sality malware, which requires external dependencies to run inside a sandbox. The original file is Groove Audit Service from Microsoft Office, and it requires dependencies from the libraries GrooveNew.dll and GroveUtil.dll (shown in Figure 2). If those two libraries are missing on the system, then the sample won’t be able to run.\nFigure 2. The required dependencies.If we compare the original file to the infected file inside a PE viewer like StudPE (shown in Figure 3), we notice that the infector has modified only a few values in the PE headers including the size of the image, checksum and section flags to make the last section executable.\nFigure 3. Sality infected executable compared to the original file.But if we open both the executables inside IDA Pro, we immediately see that the code at the entry point is totally different compared to the original (shown in Figures 4 and 5, below). The malicious code in the infected file is being called right at the entry point and doesn’t require any dependencies to fully infect the system. However, because of the required dependencies, regular malware analysis sandboxes won’t be able to run this kind of file.\nFigure 4. Original entry point.Figure 5. Modified entry point.Mitigating the Dependency Problem\nWhat can we do about this dependency problem for analysis at scale? Dependency emulation is an approach we’ve recently prototyped and found useful to address this.\nThe main idea of this approach is to detect this situation automatically, and to adapt our sandbox environment to the files being detonated to ensure executables will have a chance to detonate. Since we have full control over the sandbox, it’s easy to determine that the executable under analysis requires an external library, and to lie to the executable that all of its dependency requirements are met.\nGiven the million or so unique Windows executables we process daily, it would be an extremely difficult (if not impossible) task to automatically detect and add the specific external libraries for each executable that required external dependencies. There are literally hundreds of millions of libraries out there with numerous versions for each, and it’s not really feasible to support providing any arbitrary library in a way that guarantees the intended execution of every sample.\nHowever, as we’ve discussed in our initial post in this blog series, we often don't need full execution for accurate detection. If we can get the malware sample under analysis to get past the Windows loader, initialize itself and unpack any additional payloads, we have a much better shot at detection. Otherwise, we simply get an error from the Windows loader (as shown in Figure 1) and no additional information beyond what static analysis would buy us.\nBut what happens when the executable tries to call a function in one of those dependencies? The bad news is that, since we aren’t trying to provide actual copies of the required libraries, we can’t correctly simulate the function calls into any of the libraries not present in our environment.\nThe good news is that, in most cases, this is still enough for accurate detection. We don’t need to correctly execute every code path present in the executable, we just need enough execution and memory artifacts for accurate detection. For this reason, in order to avoid unintentional crashes or bugs from the analyzed sample, our sandbox stops the execution if any function from the generated stub libraries is called.\nAll things considered, with this approach we've seen a lot of samples detonate that wouldn't otherwise, and we've seen many correct detections.\nVMI SSL/TLS Decryption\nAnother challenge we’ve faced with analyzing malware at scale is how to stealthily spy on TLS encrypted traffic in a way that’s not detectable by the malware. As HTTPS and other protocols built on SSL have become increasingly ubiquitous for accessing resources across the internet, it’s not surprising that malware authors also use this protocol for other things, such as pulling down the next stage of their payload, or C2 communications.\nIt is possible, of course, to take the easy route and intercept and decrypt all of the traffic from our sandbox with a meddler-in-the-middle approach. The problem with this is that it’s detectable by examining and validating TLS certificates. It’s also possible to instrument and log calls to some of the higher level networking APIs, but again, this is also detectable in many cases and isn’t going to get us all encrypted communications.\nOne solution we’ve found useful for this problem is to detect when TLS connections are being initiated and log the symmetric keys generated for the SSL/TLS connection using virtual machine introspection (VMI).\nBefore we look into that detection method, let’s have a quick lesson on TLS handshakes.\nTLS Handshakes\nWhen an SSL/TLS connection is being established, certain data between the local system and the remote server is exchanged to validate each side's authenticity and generate symmetric keys to encrypt data over the wire.\nThis data includes the following:\nPreferred TLS version\nSupported cipher suites\n32 bytes of random data used in the key generation algorithm\nA data signature, in the case of an ephemeral elliptic-curve Diffie-Hellman (ECDHE) key exchange\nAn example of an ECDHE “Server Hello” message is shown in Figure 6.\nFigure 6. Wireshark screenshot illustrating the initial handshake for an SSL connection.In the case of a Diffie-Hellman (DH) handshake, additional DH parameters are then exchanged, and each side separately calculates a pre-master secret. Finally, the same master secret key is calculated on each side by utilizing the pre-master secret and the client and server random values.\nThe calculated master secret is 48 bytes in length. Through reverse engineering efforts, we discovered that this key generation occurs in the ncrypt.dll library in recent versions of the Windows OS.\nThe key generation happens in memory, so the key is never written to disk and it doesn’t traverse the wire. By knowing the exact location in code where each master key is generated and precisely where it resides in memory, it is possible to extract the key. This can be accomplished with, for example, an analysis engine via virtual machine introspection, which makes a system invisible to the malware. A similar approach can be implemented in instances where other third party libraries are used for key generation, such as OpenSSL.\nAn example output, which includes everything needed to decrypt TLS traffic, is shown in Figure 7.\nFigure 7. Extracted random value and master key.Final keys and initialization vectors used to encrypt and decrypt network traffic are generated from the master secret through a key expansion. Conveniently, the open source tool Wireshark/Tshark accepts a keyfile to perform this decryption automatically on collected pcap traffic.\nExample SSL Decryption With Wireshark\nLet's take a look at a real world example of a sample that belongs to the malware family FormBook. The sample is loaded by a loader written in Delphi, which downloads the next stage from a public file storage service using HTTPS.\nIf we open the recorded package capture in Wireshark and provide the extracted SSL/TLS keys that were extracted by the analysis platform, we should be able to see the SSL encrypted traffic to the public file storage service, including the downloaded data.\nThe random client value and the master secret key must be stored in a specific file format that Wireshark supports. It looks like this:\nCLIENT_RANDOM <random_client_value> <master_secret_key>\nTo provide the decryption keys to Wireshark, we have to use the option ssl.keylog_file, which we can pass through the command line. For example:\nWireshark -r guest_traffic.pcap -o \"ssl.keylog_file:key_capture.keys\"\nAfter opening the capture (pcap) in Wireshark, the TLS encrypted data will be decrypted, and we can use the http filter to get the decrypted HTTPS traffic. This is shown in Figure 8.\nFigure 8. Decrypted HTTPS traffic.In Figures 9 and 10, we can see the communication to the public file storage service.\nFigure 9. Communication to the public file storage service.Figure 10. Downloaded data from public file storage.With the decrypted content, we can write more precise behaviors and signatures that match a malicious sample's network communication.\nConclusion\nIn this post we have discussed two important ways we’ve been able to tailor our analysis environment. As we’ve mentioned in previous posts, adaptability in sandboxing is exceptionally important when it comes to staying on top of the malware detection problem. Threats are continually evolving, and architecting analysis systems as more of a flexible, nicely abstracted software development kit instead of a stand-alone monolithic application is crucial.\nWith this in mind, we’ve gone over two important ways our platform adaptability has paid off in Advanced WildFire. With Dependency Emulation, we can increase our detonation rates to collect more execution logs necessary for accurate detection. With VMI SSL/TLS Decryption, we have visibility into all SSL/TLS communications in a way that isn’t detectable by malware authors.\nOnce again, if you’ve made it this far, thank you again for reading and we hope you enjoyed this peek into some of the more interesting work we’ve been doing as part of our never-ending endeavor to accurately detect every last malicious file the global internet has to offer us.\nIndicators of Compromise\nSHA-256\nName\nc5b43b02a62d424a4e8a63b23bef8b022c08a889a15a6ad7f5bf1fd4fe73291f\nATMSpitter\na3b2de8f0d648f3e157300d0a88971919eb273b7d1c7b9ed023f26b5cc0ac3ca\nSality infected file\n4e32a6000a2b33ed0b8e4cf1256876c356cf5508ce0df2752fcfa214b6c2795b\nFormbook (SSL Decryption)\n \n\nGet updates from  Palo Alto Networks!\nSign up to receive the latest news, cyber threat intelligence and research from us\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 14597, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 16], [17, 24], [25, 35], [36, 38], [39, 45], [46, 53], [54, 57], [57, 58], [59, 64], [64, 67], [67, 73], [73, 74], [74, 90], [90, 91], [91, 94], [94, 95], [95, 123], [123, 124], [126, 135], [136, 143], [144, 151], [152, 159], [160, 165], [166, 171], [172, 177], [178, 183], [184, 188], [189, 192], [193, 198], [199, 201], [202, 210], [211, 220], [221, 230], [231, 238], [238, 239], [240, 245], [246, 253], [254, 256], [257, 262], [263, 273], [274, 276], [277, 286], [287, 290], [291, 299], [300, 308], [309, 311], [312, 313], [314, 320], [321, 323], [324, 331], [332, 336], [337, 341], [342, 347], [348, 355], [355, 356], [357, 369], [370, 372], [373, 380], [381, 388], [389, 393], [394, 401], [402, 404], [405, 412], [413, 420], [420, 421], [422, 425], [426, 431], [432, 434], [435, 437], [438, 446], [447, 449], [450, 454], [455, 466], [467, 476], [476, 477], [477, 478], [479, 484], [485, 487], [488, 491], [492, 504], [505, 513], [514, 521], [522, 529], [530, 534], [535, 540], [541, 544], [545, 553], [554, 556], [557, 561], [562, 564], [565, 572], [573, 575], [576, 579], [580, 587], [588, 599], [600, 603], [604, 606], [607, 608], [609, 613], [614, 616], [617, 629], [629, 630], [631, 633], [634, 638], [639, 643], [644, 651], [652, 655], [656, 666], [667, 669], [670, 678], [679, 694], [695, 698], [699, 707], [708, 710], [711, 720], [721, 728], [729, 736], [736, 737], [738, 740], [741, 747], [748, 751], [752, 756], [757, 760], [761, 764], [765, 767], [768, 772], [773, 775], [776, 786], [787, 806], [807, 808], [808, 810], [810, 811], [812, 819], [820, 828], [828, 829], [830, 833], [834, 845], [846, 850], [851, 858], [859, 866], [867, 872], [873, 875], [876, 878], [879, 885], [886, 896], [897, 902], [903, 908], [909, 916], [917, 926], [927, 929], [930, 937], [937, 938], [939, 941], [942, 947], [948, 958], [959, 967], [968, 970], [971, 975], [976, 980], [981, 985], [986, 992], [992, 993], [994, 998], [999, 1002], [1003, 1011], [1012, 1014], [1015, 1016], [1017, 1026], [1027, 1036], [1037, 1043], [1044, 1046], [1047, 1055], [1056, 1059], [1060, 1070], [1071, 1079], [1080, 1082], [1083, 1094], [1095, 1105], [1106, 1109], [1110, 1116], [1117, 1125], [1126, 1136], [1136, 1137], [1138, 1141], [1142, 1144], [1145, 1148], [1149, 1156], [1157, 1170], [1171, 1177], [1178, 1180], [1181, 1189], [1190, 1192], [1193, 1200], [1201, 1209], [1210, 1217], [1218, 1220], [1221, 1227], [1228, 1238], [1238, 1239], [1240, 1245], [1246, 1250], [1251, 1253], [1254, 1264], [1265, 1269], [1270, 1273], [1274, 1278], [1279, 1288], [1289, 1303], [1304, 1307], [1308, 1311], [1312, 1321], [1322, 1329], [1330, 1338], [1339, 1347], [1348, 1350], [1351, 1363], [1363, 1364], [1365, 1369], [1370, 1374], [1375, 1383], [1384, 1393], [1394, 1401], [1402, 1410], [1411, 1420], [1421, 1424], [1425, 1428], [1429, 1437], [1438, 1447], [1448, 1450], [1451, 1455], [1456, 1460], [1461, 1468], [1469, 1477], [1478, 1486], [1486, 1487], [1488, 1493], [1494, 1496], [1497, 1505], [1506, 1516], [1517, 1533], [1534, 1538], [1539, 1557], [1558, 1561], [1562, 1572], [1573, 1583], [1584, 1587], [1587, 1588], [1588, 1591], [1592, 1605], [1606, 1623], [1624, 1627], [1628, 1638], [1639, 1643], [1644, 1673], [1674, 1676], [1677, 1687], [1688, 1698], [1699, 1708], [1709, 1711], [1712, 1715], [1716, 1723], [1724, 1726], [1727, 1734], [1735, 1744], [1744, 1745], [1746, 1748], [1749, 1753], [1754, 1755], [1756, 1759], [1760, 1765], [1766, 1778], [1778, 1779], [1780, 1784], [1785, 1787], [1788, 1790], [1790, 1791], [1792, 1797], [1798, 1807], [1808, 1810], [1811, 1821], [1822, 1826], [1827, 1831], [1832, 1834], [1835, 1845], [1846, 1853], [1854, 1856], [1857, 1861], [1862, 1864], [1865, 1868], [1869, 1875], [1876, 1879], [1880, 1890], [1891, 1895], [1895, 1896], [1897, 1899], [1900, 1907], [1907, 1908], [1909, 1917], [1918, 1930], [1931, 1934], [1935, 1942], [1943, 1954], [1955, 1961], [1962, 1971], [1972, 1973], [1973, 1977], [1977, 1978], [1979, 1983], [1984, 1991], [1992, 2002], [2003, 2016], [2017, 2021], [2022, 2025], [2026, 2028], [2029, 2037], [2038, 2042], [2043, 2046], [2047, 2054], [2055, 2057], [2058, 2065], [2065, 2066], [2067, 2072], [2073, 2080], [2081, 2085], [2086, 2089], [2090, 2097], [2098, 2106], [2107, 2116], [2117, 2119], [2120, 2125], [2126, 2128], [2129, 2136], [2137, 2140], [2141, 2150], [2151, 2155], [2155, 2156], [2157, 2159], [2160, 2162], [2163, 2168], [2169, 2173], [2174, 2183], [2184, 2188], [2189, 2194], [2195, 2203], [2204, 2213], [2214, 2216], [2217, 2218], [2219, 2223], [2224, 2228], [2229, 2234], [2235, 2237], [2238, 2241], [2242, 2251], [2251, 2252], [2253, 2257], [2258, 2261], [2262, 2266], [2267, 2270], [2271, 2276], [2277, 2282], [2283, 2290], [2291, 2292], [2293, 2298], [2299, 2305], [2306, 2308], [2309, 2318], [2319, 2326], [2327, 2338], [2339, 2343], [2344, 2351], [2352, 2360], [2361, 2370], [2371, 2374], [2375, 2381], [2382, 2386], [2387, 2396], [2397, 2401], [2402, 2412], [2413, 2415], [2416, 2422], [2423, 2437], [2438, 2445], [2445, 2446], [2447, 2450], [2451, 2453], [2454, 2457], [2458, 2467], [2468, 2471], [2472, 2479], [2479, 2480], [2481, 2485], [2486, 2489], [2490, 2499], [2500, 2506], [2507, 2512], [2513, 2515], [2516, 2520], [2521, 2523], [2524, 2527], [2527, 2528], [2529, 2533], [2534, 2541], [2542, 2548], [2549, 2553], [2554, 2556], [2557, 2568], [2569, 2576], [2577, 2579], [2580, 2581], [2582, 2589], [2590, 2597], [2597, 2598], [2599, 2601], [2602, 2606], [2607, 2611], [2612, 2613], [2614, 2621], [2622, 2628], [2629, 2634], [2635, 2642], [2643, 2646], [2647, 2651], [2652, 2660], [2661, 2664], [2665, 2672], [2673, 2680], [2681, 2685], [2685, 2686], [2687, 2691], [2692, 2694], [2695, 2698], [2699, 2702], [2703, 2713], [2714, 2716], [2717, 2720], [2721, 2728], [2729, 2740], [2741, 2745], [2746, 2754], [2755, 2767], [2768, 2772], [2773, 2776], [2777, 2780], [2781, 2788], [2788, 2789], [2790, 2792], [2793, 2798], [2799, 2802], [2803, 2806], [2807, 2811], [2812, 2817], [2817, 2818], [2819, 2822], [2823, 2825], [2826, 2834], [2835, 2837], [2838, 2842], [2843, 2845], [2846, 2849], [2850, 2853], [2854, 2862], [2863, 2874], [2875, 2879], [2880, 2883], [2884, 2890], [2891, 2898], [2899, 2901], [2902, 2911], [2912, 2916], [2917, 2920], [2921, 2929], [2929, 2930], [2931, 2933], [2934, 2940], [2941, 2942], [2942, 2943], [2944, 2946], [2947, 2950], [2951, 2954], [2955, 2956], [2957, 2967], [2968, 2970], [2971, 2974], [2975, 2985], [2986, 2993], [2994, 3000], [3000, 3001], [3002, 3007], [3008, 3016], [3017, 3020], [3021, 3024], [3025, 3030], [3030, 3031], [3031, 3034], [3035, 3037], [3038, 3043], [3044, 3052], [3052, 3053], [3054, 3061], [3062, 3065], [3066, 3074], [3075, 3078], [3078, 3079], [3080, 3082], [3083, 3088], [3089, 3093], [3094, 3097], [3098, 3100], [3101, 3106], [3107, 3113], [3114, 3121], [3122, 3124], [3125, 3129], [3130, 3137], [3138, 3143], [3144, 3147], [3148, 3152], [3153, 3157], [3157, 3158], [3159, 3161], [3162, 3164], [3165, 3170], [3171, 3174], [3175, 3182], [3183, 3187], [3188, 3194], [3195, 3198], [3199, 3203], [3204, 3213], [3214, 3217], [3218, 3221], [3222, 3225], [3226, 3232], [3233, 3238], [3238, 3239], [3240, 3242], [3243, 3247], [3248, 3252], [3253, 3257], [3258, 3261], [3262, 3264], [3265, 3268], [3269, 3276], [3277, 3288], [3289, 3293], [3294, 3296], [3297, 3305], [3306, 3312], [3313, 3318], [3319, 3322], [3323, 3331], [3332, 3338], [3339, 3346], [3346, 3347], [3348, 3354], [3355, 3356], [3356, 3357], [3358, 3368], [3369, 3376], [3377, 3385], [3386, 3391], [3391, 3392], [3392, 3395], [3396, 3398], [3399, 3402], [3402, 3403], [3403, 3407], [3408, 3417], [3418, 3422], [3423, 3429], [3429, 3430], [3431, 3437], [3437, 3438], [3439, 3445], [3446, 3449], [3450, 3456], [3457, 3466], [3467, 3473], [3474, 3484], [3485, 3489], [3490, 3492], [3493, 3504], [3505, 3509], [3510, 3514], [3515, 3519], [3520, 3522], [3523, 3526], [3527, 3531], [3531, 3532], [3533, 3535], [3536, 3539], [3540, 3548], [3549, 3553], [3554, 3562], [3563, 3571], [3572, 3581], [3582, 3586], [3587, 3590], [3591, 3594], [3595, 3599], [3600, 3602], [3603, 3606], [3607, 3616], [3617, 3623], [3624, 3625], [3625, 3627], [3627, 3629], [3630, 3634], [3635, 3642], [3643, 3646], [3647, 3651], [3652, 3655], [3656, 3661], [3662, 3664], [3665, 3673], [3674, 3680], [3681, 3682], [3683, 3690], [3691, 3699], [3700, 3707], [3708, 3715], [3716, 3721], [3722, 3734], [3735, 3741], [3742, 3747], [3748, 3750], [3751, 3763], [3764, 3766], [3767, 3770], [3771, 3782], [3782, 3783], [3784, 3787], [3788, 3795], [3796, 3808], [3809, 3812], [3813, 3824], [3825, 3827], [3828, 3837], [3838, 3842], [3843, 3847], [3848, 3853], [3853, 3854], [3855, 3858], [3859, 3862], [3863, 3869], [3870, 3872], [3873, 3876], [3877, 3882], [3883, 3885], [3886, 3889], [3890, 3895], [3896, 3898], [3899, 3908], [3909, 3917], [3917, 3918], [3919, 3927], [3927, 3928], [3929, 3933], [3934, 3936], [3937, 3940], [3941, 3945], [3946, 3950], [3951, 3960], [3961, 3964], [3965, 3968], [3969, 3971], [3972, 3978], [3979, 3986], [3987, 3989], [3990, 3997], [3998, 4001], [4002, 4006], [4006, 4007], [4008, 4010], [4011, 4014], [4015, 4019], [4020, 4024], [4025, 4027], [4028, 4032], [4033, 4035], [4036, 4039], [4040, 4044], [4045, 4052], [4053, 4061], [4061, 4062], [4063, 4067], [4068, 4070], [4071, 4075], [4076, 4080], [4081, 4092], [4093, 4098], [4099, 4103], [4104, 4113], [4114, 4116], [4117, 4121], [4122, 4124], [4125, 4129], [4130, 4135], [4135, 4136], [4137, 4142], [4143, 4155], [4156, 4161], [4162, 4168], [4169, 4172], [4173, 4181], [4182, 4187], [4188, 4190], [4191, 4195], [4196, 4200], [4201, 4207], [4208, 4212], [4213, 4218], [4219, 4221], [4222, 4224], [4225, 4229], [4229, 4230], [4231, 4235], [4236, 4245], [4246, 4253], [4254, 4258], [4259, 4264], [4265, 4274], [4275, 4279], [4280, 4284], [4285, 4290], [4291, 4292], [4292, 4294], [4294, 4296], [4296, 4297], [4298, 4300], [4301, 4310], [4311, 4313], [4314, 4319], [4320, 4324], [4325, 4336], [4337, 4339], [4340, 4345], [4346, 4355], [4356, 4360], [4360, 4361], [4362, 4364], [4365, 4367], [4368, 4379], [4380, 4383], [4384, 4389], [4390, 4395], [4396, 4398], [4399, 4402], [4403, 4405], [4406, 4412], [4412, 4413], [4414, 4420], [4421, 4424], [4425, 4433], [4434, 4439], [4440, 4444], [4445, 4453], [4454, 4463], [4464, 4467], [4468, 4472], [4473, 4479], [4479, 4480], [4481, 4484], [4485, 4487], [4488, 4492], [4493, 4499], [4500, 4502], [4503, 4507], [4508, 4511], [4512, 4519], [4520, 4523], [4524, 4528], [4528, 4529], [4530, 4537], [4538, 4541], [4542, 4546], [4547, 4551], [4552, 4556], [4557, 4559], [4560, 4563], [4564, 4576], [4577, 4585], [4586, 4592], [4592, 4593], [4594, 4601], [4602, 4606], [4607, 4615], [4616, 4621], [4622, 4626], [4627, 4628], [4629, 4633], [4634, 4636], [4637, 4640], [4641, 4645], [4646, 4650], [4651, 4654], [4655, 4659], [4660, 4668], [4669, 4671], [4672, 4675], [4676, 4682], [4683, 4690], [4690, 4691], [4692, 4697], [4698, 4706], [4707, 4715], [4716, 4728], [4729, 4731], [4732, 4735], [4736, 4742], [4743, 4744], [4745, 4752], [4752, 4753], [4754, 4757], [4758, 4766], [4767, 4771], [4772, 4774], [4775, 4781], [4782, 4787], [4788, 4795], [4796, 4800], [4801, 4810], [4811, 4817], [4817, 4818], [4819, 4822], [4823, 4825], [4826, 4834], [4835, 4847], [4848, 4852], [4853, 4856], [4857, 4866], [4867, 4876], [4876, 4877], [4877, 4880], [4881, 4884], [4885, 4894], [4894, 4895], [4895, 4898], [4899, 4900], [4900, 4905], [4906, 4908], [4909, 4915], [4916, 4917], [4917, 4919], [4920, 4922], [4923, 4928], [4929, 4932], [4933, 4942], [4943, 4946], [4947, 4954], [4955, 4957], [4958, 4961], [4962, 4968], [4968, 4969], [4970, 4974], [4975, 4978], [4979, 4985], [4986, 4991], [4992, 4994], [4995, 4999], [5000, 5002], [5003, 5006], [5006, 5007], [5008, 5014], [5015, 5016], [5016, 5017], [5018, 5021], [5022, 5030], [5031, 5043], [5043, 5044], [5044, 5046], [5047, 5049], [5050, 5057], [5058, 5061], [5062, 5070], [5071, 5075], [5076, 5078], [5079, 5082], [5083, 5091], [5092, 5096], [5097, 5103], [5104, 5105], [5106, 5108], [5109, 5115], [5116, 5120], [5121, 5127], [5128, 5129], [5129, 5134], [5135, 5137], [5138, 5144], [5145, 5146], [5146, 5148], [5149, 5151], [5152, 5158], [5159, 5163], [5164, 5167], [5168, 5176], [5177, 5180], [5181, 5189], [5190, 5194], [5195, 5196], [5197, 5200], [5201, 5207], [5208, 5210], [5211, 5214], [5215, 5217], [5218, 5225], [5226, 5235], [5236, 5239], [5240, 5244], [5245, 5247], [5248, 5251], [5252, 5257], [5257, 5258], [5259, 5267], [5268, 5271], [5272, 5279], [5280, 5285], [5286, 5288], [5289, 5293], [5294, 5297], [5298, 5302], [5303, 5310], [5311, 5321], [5321, 5322], [5323, 5329], [5330, 5331], [5331, 5332], [5333, 5339], [5340, 5348], [5349, 5359], [5360, 5368], [5369, 5371], [5372, 5375], [5376, 5384], [5385, 5389], [5389, 5390], [5390, 5393], [5394, 5396], [5397, 5399], [5400, 5404], [5405, 5409], [5410, 5413], [5414, 5425], [5426, 5432], [5433, 5436], [5437, 5440], [5440, 5441], [5442, 5444], [5445, 5456], [5457, 5460], [5461, 5465], [5466, 5469], [5470, 5474], [5475, 5477], [5478, 5481], [5482, 5487], [5488, 5493], [5494, 5496], [5497, 5504], [5505, 5514], [5515, 5523], [5524, 5526], [5527, 5530], [5531, 5539], [5540, 5541], [5541, 5546], [5547, 5549], [5550, 5557], [5558, 5559], [5560, 5563], [5564, 5565], [5565, 5566], [5567, 5572], [5572, 5574], [5575, 5578], [5579, 5588], [5589, 5593], [5594, 5596], [5597, 5600], [5601, 5609], [5610, 5614], [5615, 5617], [5618, 5623], [5624, 5630], [5631, 5636], [5637, 5639], [5640, 5643], [5644, 5649], [5650, 5655], [5656, 5659], [5660, 5667], [5668, 5675], [5676, 5679], [5680, 5692], [5693, 5695], [5696, 5701], [5702, 5708], [5709, 5712], [5713, 5719], [5719, 5720], [5721, 5728], [5728, 5729], [5730, 5737], [5738, 5740], [5741, 5744], [5745, 5753], [5754, 5766], [5766, 5767], [5768, 5775], [5776, 5783], [5784, 5792], [5793, 5802], [5803, 5808], [5809, 5811], [5812, 5816], [5817, 5819], [5820, 5823], [5824, 5828], [5829, 5833], [5834, 5836], [5837, 5841], [5841, 5842], [5843, 5849], [5850, 5851], [5851, 5852], [5853, 5861], [5862, 5867], [5868, 5873], [5873, 5874], [5874, 5880], [5881, 5882], [5882, 5883], [5884, 5892], [5893, 5898], [5899, 5904], [5904, 5905], [5905, 5915], [5916, 5919], [5920, 5930], [5931, 5938], [5939, 5943], [5944, 5947], [5948, 5950], [5951, 5953], [5954, 5959], [5960, 5964], [5965, 5975], [5976, 5983], [5984, 5987], [5988, 5996], [5997, 5999], [6000, 6005], [6005, 6006], [6007, 6017], [6018, 6027], [6028, 6030], [6031, 6033], [6034, 6042], [6043, 6048], [6049, 6057], [6058, 6068], [6069, 6072], [6073, 6078], [6079, 6085], [6086, 6088], [6089, 6096], [6097, 6101], [6101, 6102], [6103, 6106], [6107, 6111], [6112, 6116], [6117, 6119], [6120, 6124], [6125, 6133], [6134, 6136], [6137, 6139], [6140, 6146], [6147, 6151], [6152, 6161], [6162, 6175], [6175, 6176], [6177, 6180], [6181, 6183], [6184, 6189], [6190, 6193], [6194, 6201], [6202, 6213], [6214, 6216], [6217, 6220], [6221, 6226], [6227, 6232], [6233, 6242], [6243, 6245], [6246, 6252], [6253, 6264], [6265, 6269], [6270, 6274], [6275, 6276], [6277, 6283], [6284, 6286], [6287, 6295], [6295, 6296], [6297, 6302], [6303, 6305], [6306, 6310], [6311, 6315], [6316, 6323], [6324, 6328], [6329, 6332], [6333, 6340], [6340, 6341], [6342, 6346], [6347, 6351], [6352, 6354], [6355, 6364], [6365, 6369], [6370, 6373], [6374, 6384], [6385, 6390], [6391, 6399], [6400, 6408], [6409, 6411], [6412, 6420], [6421, 6428], [6428, 6429], [6430, 6433], [6434, 6436], [6437, 6440], [6441, 6443], [6444, 6447], [6448, 6458], [6459, 6463], [6464, 6467], [6468, 6470], [6471, 6474], [6475, 6485], [6486, 6498], [6499, 6502], [6503, 6506], [6506, 6507], [6508, 6513], [6514, 6517], [6518, 6525], [6526, 6528], [6529, 6531], [6532, 6538], [6539, 6546], [6547, 6558], [6559, 6561], [6562, 6569], [6570, 6575], [6575, 6576], [6577, 6579], [6580, 6585], [6586, 6588], [6589, 6591], [6592, 6601], [6602, 6611], [6612, 6613], [6613, 6615], [6616, 6619], [6620, 6630], [6630, 6631], [6632, 6636], [6637, 6639], [6640, 6653], [6654, 6660], [6661, 6664], [6665, 6668], [6669, 6672], [6673, 6681], [6682, 6690], [6691, 6700], [6701, 6704], [6705, 6709], [6710, 6720], [6721, 6725], [6726, 6734], [6735, 6743], [6744, 6756], [6756, 6757], [6758, 6763], [6764, 6767], [6768, 6777], [6778, 6786], [6787, 6789], [6790, 6798], [6799, 6801], [6802, 6811], [6812, 6815], [6816, 6821], [6822, 6826], [6827, 6835], [6836, 6844], [6845, 6848], [6849, 6853], [6853, 6854], [6855, 6858], [6859, 6863], [6864, 6867], [6868, 6874], [6875, 6883], [6884, 6886], [6887, 6894], [6895, 6904], [6905, 6908], [6909, 6918], [6919, 6926], [6927, 6929], [6930, 6931], [6932, 6935], [6936, 6940], [6941, 6951], [6952, 6955], [6956, 6964], [6965, 6974], [6975, 6977], [6978, 6983], [6984, 6990], [6990, 6991], [6992, 6999], [6999, 7000], [7001, 7003], [7004, 7009], [7010, 7019], [7020, 7022], [7023, 7026], [7027, 7034], [7035, 7039], [7040, 7042], [7043, 7047], [7048, 7052], [7053, 7059], [7059, 7060], [7061, 7063], [7064, 7069], [7070, 7073], [7073, 7074], [7074, 7075], [7076, 7080], [7081, 7085], [7086, 7095], [7096, 7099], [7100, 7108], [7109, 7118], [7118, 7119], [7120, 7122], [7123, 7125], [7126, 7129], [7130, 7133], [7134, 7137], [7138, 7145], [7146, 7152], [7153, 7158], [7159, 7167], [7168, 7170], [7171, 7174], [7175, 7179], [7180, 7183], [7184, 7191], [7192, 7198], [7198, 7199], [7200, 7210], [7211, 7217], [7218, 7221], [7222, 7228], [7229, 7232], [7233, 7243], [7244, 7252], [7252, 7253], [7254, 7256], [7257, 7261], [7262, 7263], [7264, 7268], [7269, 7275], [7276, 7280], [7281, 7283], [7284, 7293], [7293, 7294], [7295, 7304], [7304, 7305], [7306, 7308], [7309, 7315], [7316, 7319], [7320, 7322], [7323, 7328], [7329, 7333], [7334, 7337], [7338, 7345], [7346, 7352], [7353, 7354], [7354, 7356], [7357, 7362], [7363, 7365], [7366, 7372], [7373, 7374], [7374, 7375], [7376, 7379], [7380, 7382], [7383, 7393], [7394, 7405], [7406, 7412], [7413, 7417], [7418, 7424], [7425, 7433], [7434, 7439], [7440, 7443], [7444, 7446], [7446, 7447], [7448, 7451], [7452, 7456], [7457, 7464], [7465, 7469], [7470, 7473], [7474, 7484], [7485, 7490], [7491, 7493], [7494, 7498], [7499, 7500], [7501, 7509], [7510, 7512], [7513, 7516], [7517, 7519], [7520, 7525], [7526, 7538], [7538, 7539], [7540, 7543], [7544, 7547], [7548, 7552], [7553, 7555], [7556, 7560], [7560, 7561], [7562, 7567], [7568, 7570], [7571, 7577], [7578, 7584], [7585, 7587], [7588, 7595], [7596, 7602], [7603, 7609], [7610, 7612], [7613, 7616], [7617, 7625], [7626, 7635], [7635, 7636], [7637, 7639], [7640, 7645], [7646, 7655], [7656, 7664], [7665, 7668], [7669, 7677], [7678, 7683], [7684, 7688], [7689, 7692], [7693, 7695], [7696, 7699], [7700, 7709], [7710, 7713], [7714, 7721], [7722, 7724], [7725, 7728], [7729, 7740], [7740, 7741], [7742, 7745], [7746, 7750], [7751, 7755], [7756, 7758], [7759, 7763], [7763, 7764], [7765, 7767], [7768, 7772], [7773, 7778], [7778, 7779], [7780, 7784], [7785, 7787], [7788, 7793], [7794, 7800], [7801, 7804], [7805, 7813], [7814, 7823], [7823, 7824], [7825, 7827], [7828, 7833], [7834, 7838], [7839, 7841], [7842, 7851], [7852, 7859], [7860, 7865], [7866, 7870], [7871, 7875], [7876, 7883], [7884, 7886], [7887, 7890], [7891, 7901], [7901, 7902], [7903, 7905], [7906, 7910], [7911, 7915], [7916, 7922], [7923, 7932], [7933, 7936], [7937, 7943], [7944, 7953], [7954, 7957], [7958, 7966], [7967, 7976], [7976, 7977], [7978, 7981], [7982, 7986], [7987, 7993], [7993, 7994], [7995, 7997], [7998, 8003], [8004, 8006], [8007, 8012], [8013, 8026], [8027, 8034], [8035, 8037], [8038, 8042], [8043, 8047], [8048, 8051], [8052, 8060], [8061, 8067], [8067, 8068], [8069, 8072], [8073, 8080], [8081, 8086], [8087, 8090], [8091, 8100], [8101, 8103], [8104, 8107], [8108, 8116], [8117, 8121], [8122, 8125], [8126, 8135], [8136, 8140], [8141, 8150], [8151, 8153], [8154, 8160], [8160, 8161], [8162, 8165], [8166, 8172], [8173, 8183], [8183, 8184], [8185, 8189], [8190, 8194], [8195, 8203], [8204, 8206], [8206, 8209], [8210, 8214], [8215, 8216], [8217, 8220], [8221, 8223], [8224, 8231], [8232, 8240], [8241, 8245], [8246, 8252], [8252, 8253], [8253, 8254], [8255, 8264], [8264, 8265], [8266, 8269], [8270, 8272], [8272, 8275], [8276, 8280], [8281, 8285], [8286, 8293], [8294, 8304], [8304, 8305], [8306, 8309], [8310, 8313], [8313, 8314], [8314, 8317], [8318, 8328], [8329, 8336], [8337, 8346], [8347, 8352], [8353, 8358], [8359, 8363], [8364, 8373], [8374, 8381], [8382, 8384], [8385, 8390], [8391, 8393], [8394, 8397], [8398, 8400], [8401, 8411], [8412, 8415], [8416, 8418], [8419, 8422], [8423, 8432], [8433, 8440], [8441, 8443], [8444, 8445], [8446, 8449], [8450, 8456], [8457, 8460], [8461, 8471], [8472, 8474], [8475, 8478], [8479, 8486], [8486, 8487], [8488, 8490], [8491, 8496], [8497, 8500], [8501, 8506], [8507, 8516], [8517, 8522], [8523, 8525], [8526, 8529], [8530, 8534], [8535, 8541], [8542, 8554], [8555, 8565], [8566, 8569], [8570, 8579], [8580, 8589], [8590, 8596], [8597, 8600], [8601, 8609], [8609, 8610], [8611, 8615], [8616, 8619], [8620, 8630], [8631, 8635], [8636, 8643], [8644, 8651], [8652, 8656], [8657, 8660], [8661, 8665], [8666, 8674], [8675, 8678], [8679, 8684], [8685, 8691], [8691, 8692], [8693, 8697], [8698, 8700], [8701, 8708], [8709, 8713], [8714, 8717], [8718, 8722], [8723, 8728], [8729, 8731], [8732, 8737], [8738, 8745], [8745, 8746], [8747, 8749], [8750, 8752], [8753, 8767], [8767, 8768], [8769, 8771], [8772, 8774], [8775, 8783], [8783, 8784], [8785, 8787], [8788, 8794], [8794, 8795], [8796, 8798], [8799, 8803], [8804, 8807], [8808, 8812], [8813, 8818], [8819, 8822], [8823, 8832], [8833, 8836], [8837, 8844], [8845, 8848], [8849, 8851], [8852, 8855], [8856, 8863], [8864, 8868], [8869, 8872], [8873, 8880], [8881, 8885], [8886, 8887], [8888, 8909], [8910, 8918], [8918, 8919], [8920, 8923], [8924, 8931], [8932, 8936], [8937, 8941], [8942, 8944], [8945, 8949], [8950, 8954], [8955, 8965], [8966, 8968], [8969, 8978], [8979, 8982], [8983, 8993], [8994, 8997], [8998, 9010], [9010, 9011], [9012, 9016], [9017, 9021], [9022, 9030], [9031, 9033], [9034, 9044], [9045, 9048], [9049, 9052], [9053, 9058], [9059, 9061], [9062, 9066], [9067, 9069], [9070, 9073], [9074, 9080], [9081, 9086], [9087, 9097], [9098, 9102], [9102, 9103], [9104, 9107], [9108, 9113], [9113, 9114], [9115, 9119], [9120, 9122], [9123, 9127], [9128, 9138], [9139, 9141], [9142, 9146], [9147, 9152], [9153, 9156], [9157, 9162], [9163, 9168], [9169, 9171], [9172, 9175], [9176, 9178], [9179, 9182], [9183, 9192], [9193, 9207], [9207, 9208], [9209, 9212], [9213, 9221], [9222, 9227], [9228, 9233], [9234, 9240], [9241, 9244], [9245, 9249], [9250, 9257], [9258, 9260], [9261, 9263], [9264, 9270], [9271, 9275], [9276, 9279], [9280, 9291], [9292, 9295], [9296, 9301], [9302, 9311], [9312, 9315], [9316, 9319], [9320, 9323], [9324, 9333], [9334, 9338], [9339, 9348], [9349, 9352], [9353, 9356], [9357, 9360], [9360, 9361], [9361, 9364], [9365, 9375], [9376, 9381], [9382, 9389], [9390, 9397], [9398, 9411], [9412, 9413], [9413, 9416], [9416, 9418], [9419, 9425], [9426, 9428], [9429, 9433], [9434, 9438], [9439, 9443], [9444, 9453], [9454, 9460], [9460, 9461], [9462, 9467], [9468, 9472], [9473, 9474], [9475, 9480], [9481, 9487], [9488, 9490], [9491, 9494], [9495, 9505], [9505, 9506], [9507, 9510], [9511, 9521], [9522, 9526], [9527, 9529], [9530, 9533], [9533, 9534], [9534, 9537], [9538, 9548], [9549, 9551], [9552, 9557], [9558, 9569], [9569, 9570], [9571, 9578], [9579, 9583], [9584, 9591], [9592, 9595], [9596, 9601], [9602, 9608], [9609, 9612], [9613, 9616], [9617, 9623], [9624, 9630], [9631, 9633], [9634, 9643], [9644, 9646], [9647, 9655], [9656, 9660], [9661, 9665], [9665, 9667], [9668, 9680], [9681, 9684], [9685, 9693], [9694, 9703], [9704, 9708], [9709, 9711], [9712, 9719], [9720, 9724], [9725, 9729], [9730, 9733], [9734, 9738], [9738, 9739], [9740, 9744], [9745, 9749], [9750, 9758], [9759, 9762], [9763, 9772], [9772, 9773], [9774, 9783], [9784, 9787], [9788, 9795], [9796, 9805], [9806, 9812], [9813, 9819], [9820, 9822], [9823, 9828], [9829, 9831], [9832, 9838], [9839, 9843], [9844, 9848], [9849, 9851], [9852, 9855], [9856, 9859], [9860, 9870], [9871, 9880], [9881, 9882], [9883, 9887], [9888, 9897], [9897, 9898], [9899, 9901], [9902, 9905], [9906, 9910], [9911, 9913], [9914, 9916], [9917, 9926], [9927, 9941], [9942, 9956], [9957, 9958], [9958, 9963], [9963, 9964], [9965, 9968], [9969, 9977], [9978, 9980], [9981, 9988], [9989, 9991], [9992, 9994], [9995, 10000], [10001, 10008], [10009, 10015], [10016, 10023], [10024, 10026], [10027, 10032], [10033, 10035], [10036, 10042], [10043, 10044], [10044, 10045], [10046, 10052], [10053, 10054], [10054, 10055], [10056, 10065], [10066, 10076], [10077, 10089], [10090, 10093], [10094, 10101], [10102, 10111], [10112, 10115], [10116, 10118], [10119, 10122], [10123, 10133], [10133, 10134], [10134, 10136], [10137, 10140], [10141, 10145], [10146, 10148], [10149, 10150], [10151, 10165], [10166, 10167], [10167, 10169], [10169, 10170], [10171, 10180], [10180, 10181], [10182, 10192], [10193, 10195], [10196, 10206], [10207, 10210], [10211, 10215], [10216, 10225], [10225, 10226], [10227, 10230], [10231, 10235], [10236, 10240], [10241, 10251], [10252, 10262], [10263, 10264], [10265, 10275], [10276, 10282], [10282, 10283], [10284, 10291], [10291, 10292], [10293, 10296], [10297, 10301], [10302, 10308], [10309, 10315], [10316, 10319], [10320, 10322], [10323, 10333], [10334, 10336], [10337, 10341], [10342, 10346], [10347, 10349], [10350, 10359], [10360, 10363], [10364, 10374], [10375, 10381], [10382, 10385], [10386, 10389], [10390, 10396], [10397, 10400], [10401, 10407], [10408, 10414], [10415, 10421], [10421, 10422], [10423, 10426], [10427, 10437], [10438, 10444], [10445, 10451], [10452, 10454], [10455, 10457], [10458, 10463], [10464, 10466], [10467, 10473], [10473, 10474], [10475, 10482], [10483, 10490], [10491, 10502], [10503, 10510], [10510, 10511], [10512, 10514], [10515, 10525], [10526, 10530], [10531, 10535], [10536, 10539], [10540, 10550], [10551, 10557], [10558, 10560], [10561, 10564], [10565, 10571], [10571, 10572], [10572, 10575], [10576, 10583], [10584, 10586], [10587, 10593], [10594, 10602], [10603, 10605], [10606, 10609], [10610, 10617], [10618, 10620], [10620, 10621], [10622, 10625], [10626, 10629], [10630, 10640], [10641, 10648], [10649, 10651], [10652, 10658], [10658, 10659], [10660, 10662], [10663, 10666], [10667, 10670], [10671, 10673], [10674, 10679], [10680, 10687], [10688, 10690], [10691, 10695], [10696, 10699], [10700, 10702], [10703, 10710], [10711, 10719], [10720, 10723], [10724, 10728], [10728, 10729], [10730, 10732], [10733, 10740], [10741, 10744], [10745, 10750], [10751, 10759], [10760, 10762], [10763, 10767], [10768, 10773], [10774, 10778], [10779, 10785], [10786, 10789], [10790, 10792], [10793, 10802], [10803, 10806], [10807, 10816], [10817, 10822], [10823, 10825], [10826, 10833], [10834, 10836], [10837, 10843], [10843, 10844], [10845, 10847], [10848, 10850], [10851, 10859], [10860, 10862], [10863, 10870], [10871, 10874], [10875, 10878], [10878, 10879], [10880, 10884], [10885, 10888], [10889, 10891], [10892, 10904], [10905, 10909], [10909, 10910], [10911, 10914], [10915, 10922], [10922, 10923], [10924, 10926], [10927, 10935], [10936, 10942], [10943, 10946], [10947, 10954], [10955, 10962], [10963, 10976], [10976, 10977], [10978, 10983], [10984, 10989], [10990, 10991], [10992, 10998], [10999, 11008], [11009, 11011], [11012, 11015], [11016, 11023], [11023, 11024], [11025, 11026], [11027, 11034], [11035, 11043], [11044, 11047], [11048, 11050], [11051, 11062], [11063, 11065], [11066, 11075], [11076, 11081], [11082, 11087], [11088, 11093], [11094, 11099], [11100, 11109], [11110, 11113], [11114, 11118], [11119, 11122], [11123, 11126], [11127, 11137], [11137, 11138], [11139, 11143], [11144, 11146], [11147, 11154], [11154, 11155], [11156, 11158], [11159, 11166], [11167, 11173], [11173, 11174], [11175, 11180], [11181, 11189], [11190, 11200], [11201, 11207], [11208, 11210], [11211, 11218], [11219, 11222], [11223, 11230], [11230, 11231], [11232, 11234], [11235, 11240], [11241, 11243], [11244, 11250], [11251, 11252], [11252, 11253], [11254, 11260], [11261, 11262], [11262, 11263], [11264, 11273], [11274, 11280], [11281, 11286], [11287, 11290], [11291, 11297], [11298, 11301], [11301, 11302], [11302, 11307], [11308, 11312], [11313, 11316], [11317, 11331], [11332, 11339], [11340, 11344], [11345, 11347], [11348, 11355], [11356, 11359], [11360, 11367], [11368, 11375], [11376, 11383], [11384, 11387], [11388, 11397], [11398, 11402], [11403, 11406], [11407, 11413], [11414, 11420], [11421, 11428], [11429, 11430], [11431, 11434], [11435, 11444], [11444, 11445], [11446, 11458], [11458, 11459], [11460, 11463], [11464, 11468], [11469, 11475], [11476, 11480], [11481, 11490], [11490, 11491], [11491, 11497], [11498, 11505], [11506, 11507], [11508, 11515], [11516, 11518], [11519, 11526], [11527, 11531], [11532, 11542], [11543, 11556], [11557, 11559], [11560, 11569], [11570, 11574], [11575, 11582], [11582, 11583], [11584, 11591], [11592, 11595], [11596, 11606], [11607, 11611], [11612, 11621], [11622, 11625], [11625, 11627], [11628, 11632], [11633, 11634], [11635, 11639], [11640, 11642], [11643, 11644], [11645, 11649], [11650, 11655], [11656, 11663], [11664, 11666], [11667, 11668], [11669, 11675], [11676, 11680], [11681, 11688], [11689, 11691], [11692, 11695], [11696, 11703], [11704, 11710], [11711, 11719], [11719, 11720], [11721, 11724], [11725, 11731], [11732, 11734], [11735, 11741], [11742, 11744], [11745, 11746], [11747, 11753], [11754, 11761], [11762, 11764], [11765, 11771], [11771, 11772], [11773, 11778], [11779, 11788], [11789, 11792], [11793, 11797], [11798, 11803], [11804, 11808], [11809, 11810], [11811, 11817], [11818, 11822], [11823, 11830], [11831, 11838], [11839, 11844], [11845, 11850], [11850, 11851], [11852, 11854], [11855, 11857], [11858, 11862], [11863, 11866], [11867, 11875], [11876, 11883], [11884, 11891], [11892, 11894], [11895, 11904], [11905, 11908], [11909, 11916], [11917, 11920], [11921, 11930], [11931, 11934], [11934, 11935], [11935, 11938], [11939, 11943], [11944, 11948], [11949, 11953], [11954, 11963], [11964, 11966], [11967, 11970], [11971, 11979], [11980, 11988], [11988, 11989], [11990, 11992], [11993, 11999], [12000, 12002], [12003, 12007], [12008, 12010], [12011, 12014], [12015, 12018], [12019, 12022], [12023, 12032], [12033, 12040], [12041, 12043], [12044, 12047], [12048, 12054], [12055, 12059], [12060, 12067], [12068, 12075], [12075, 12076], [12077, 12086], [12087, 12090], [12091, 12101], [12102, 12106], [12106, 12107], [12108, 12111], [12112, 12118], [12119, 12125], [12126, 12131], [12132, 12135], [12136, 12139], [12140, 12146], [12147, 12153], [12154, 12157], [12158, 12162], [12163, 12165], [12166, 12172], [12173, 12175], [12176, 12177], [12178, 12186], [12187, 12191], [12192, 12198], [12199, 12203], [12204, 12213], [12214, 12222], [12222, 12223], [12224, 12226], [12227, 12232], [12233, 12237], [12238, 12242], [12242, 12243], [12244, 12257], [12258, 12279], [12280, 12299], [12300, 12302], [12303, 12310], [12311, 12314], [12315, 12325], [12326, 12330], [12331, 12333], [12334, 12343], [12343, 12344], [12345, 12347], [12348, 12352], [12353, 12355], [12356, 12359], [12360, 12363], [12364, 12370], [12371, 12374], [12374, 12375], [12375, 12386], [12386, 12387], [12388, 12393], [12394, 12396], [12397, 12400], [12401, 12405], [12406, 12413], [12414, 12417], [12418, 12425], [12426, 12430], [12430, 12431], [12432, 12435], [12436, 12443], [12443, 12444], [12445, 12454], [12455, 12457], [12458, 12471], [12471, 12472], [12472, 12476], [12477, 12479], [12480, 12481], [12481, 12484], [12484, 12485], [12485, 12496], [12496, 12497], [12497, 12508], [12508, 12509], [12509, 12513], [12513, 12514], [12515, 12520], [12521, 12528], [12529, 12532], [12533, 12540], [12541, 12542], [12542, 12546], [12546, 12547], [12548, 12550], [12551, 12560], [12560, 12561], [12562, 12565], [12566, 12569], [12570, 12579], [12580, 12584], [12585, 12589], [12590, 12592], [12593, 12602], [12602, 12603], [12604, 12607], [12608, 12610], [12611, 12614], [12615, 12618], [12619, 12622], [12623, 12627], [12628, 12634], [12635, 12637], [12638, 12641], [12642, 12645], [12646, 12655], [12656, 12661], [12662, 12669], [12669, 12670], [12671, 12675], [12676, 12678], [12679, 12684], [12685, 12687], [12688, 12694], [12695, 12696], [12696, 12697], [12698, 12704], [12705, 12706], [12706, 12707], [12708, 12717], [12718, 12723], [12724, 12731], [12731, 12732], [12732, 12734], [12735, 12742], [12743, 12744], [12745, 12748], [12749, 12751], [12751, 12752], [12753, 12755], [12756, 12759], [12760, 12763], [12764, 12767], [12768, 12781], [12782, 12784], [12785, 12788], [12789, 12795], [12796, 12800], [12801, 12808], [12809, 12816], [12816, 12817], [12818, 12824], [12825, 12826], [12826, 12827], [12828, 12841], [12842, 12844], [12845, 12848], [12849, 12855], [12856, 12860], [12861, 12868], [12869, 12876], [12876, 12877], [12877, 12883], [12884, 12886], [12886, 12887], [12888, 12898], [12899, 12903], [12904, 12908], [12909, 12915], [12916, 12920], [12921, 12928], [12928, 12929], [12929, 12933], [12934, 12937], [12938, 12947], [12948, 12955], [12955, 12956], [12957, 12959], [12960, 12963], [12964, 12969], [12970, 12974], [12975, 12982], [12983, 12992], [12993, 12996], [12997, 13007], [13008, 13012], [13013, 13018], [13019, 13020], [13021, 13030], [13031, 13037], [13037, 13039], [13040, 13047], [13048, 13061], [13061, 13062], [13063, 13073], [13074, 13076], [13077, 13081], [13082, 13086], [13087, 13089], [13090, 13094], [13095, 13104], [13105, 13108], [13109, 13118], [13119, 13123], [13124, 13129], [13130, 13134], [13135, 13139], [13140, 13142], [13143, 13149], [13150, 13153], [13154, 13162], [13163, 13174], [13174, 13175], [13176, 13178], [13179, 13184], [13185, 13194], [13195, 13197], [13198, 13206], [13207, 13212], [13212, 13213], [13214, 13226], [13227, 13229], [13230, 13240], [13241, 13243], [13244, 13257], [13258, 13267], [13268, 13272], [13273, 13275], [13276, 13281], [13282, 13284], [13285, 13292], [13293, 13295], [13296, 13299], [13300, 13302], [13303, 13306], [13307, 13314], [13315, 13324], [13325, 13332], [13332, 13333], [13334, 13341], [13342, 13345], [13346, 13357], [13358, 13366], [13366, 13367], [13368, 13371], [13372, 13384], [13385, 13393], [13394, 13401], [13402, 13404], [13405, 13409], [13410, 13412], [13413, 13414], [13415, 13423], [13423, 13424], [13425, 13431], [13432, 13442], [13443, 13451], [13452, 13463], [13464, 13467], [13468, 13475], [13476, 13478], [13479, 13480], [13481, 13492], [13493, 13503], [13504, 13515], [13516, 13518], [13519, 13526], [13526, 13527], [13528, 13532], [13533, 13537], [13538, 13540], [13541, 13545], [13545, 13546], [13547, 13552], [13553, 13557], [13558, 13562], [13563, 13566], [13567, 13576], [13577, 13581], [13582, 13585], [13586, 13594], [13595, 13607], [13608, 13611], [13612, 13616], [13617, 13620], [13621, 13623], [13624, 13632], [13633, 13641], [13641, 13642], [13643, 13647], [13648, 13658], [13659, 13668], [13668, 13669], [13670, 13672], [13673, 13676], [13677, 13685], [13686, 13689], [13690, 13700], [13701, 13706], [13707, 13709], [13710, 13717], [13718, 13722], [13723, 13732], [13733, 13737], [13738, 13747], [13748, 13751], [13752, 13760], [13761, 13770], [13770, 13771], [13772, 13776], [13777, 13780], [13781, 13784], [13784, 13785], [13785, 13788], [13789, 13799], [13799, 13800], [13801, 13803], [13804, 13808], [13809, 13819], [13820, 13824], [13825, 13828], [13829, 13832], [13832, 13833], [13833, 13836], [13837, 13851], [13852, 13854], [13855, 13856], [13857, 13860], [13861, 13865], [13866, 13871], [13872, 13882], [13883, 13885], [13886, 13893], [13894, 13901], [13901, 13902], [13903, 13907], [13908, 13913], [13913, 13914], [13915, 13917], [13918, 13924], [13925, 13929], [13930, 13932], [13933, 13937], [13938, 13941], [13941, 13942], [13943, 13948], [13949, 13952], [13953, 13958], [13959, 13962], [13963, 13970], [13971, 13974], [13975, 13977], [13978, 13982], [13983, 13986], [13987, 13994], [13995, 13999], [14000, 14004], [14005, 14009], [14010, 14014], [14015, 14017], [14018, 14021], [14022, 14026], [14027, 14038], [14039, 14043], [14044, 14049], [14050, 14054], [14055, 14060], [14061, 14063], [14064, 14068], [14069, 14071], [14072, 14075], [14076, 14088], [14089, 14097], [14098, 14100], [14101, 14111], [14112, 14118], [14119, 14124], [14125, 14129], [14130, 14139], [14140, 14144], [14145, 14148], [14149, 14155], [14156, 14164], [14165, 14168], [14169, 14171], [14172, 14177], [14178, 14180], [14180, 14181], [14182, 14192], [14193, 14195], [14196, 14206], [14207, 14211], [14211, 14214], [14215, 14219], [14220, 14284], [14285, 14295], [14296, 14360], [14361, 14367], [14368, 14376], [14377, 14381], [14382, 14446], [14447, 14455], [14456, 14457], [14457, 14460], [14461, 14471], [14471, 14472], [14476, 14479], [14480, 14487], [14488, 14492], [14494, 14498], [14499, 14503], [14504, 14512], [14512, 14513], [14514, 14518], [14519, 14521], [14522, 14524], [14525, 14532], [14533, 14536], [14537, 14543], [14544, 14548], [14548, 14549], [14550, 14555], [14556, 14562], [14563, 14575], [14576, 14579], [14580, 14588], [14589, 14593], [14594, 14596]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 14597, "lparker", "content", "human gold"]]}, {"type": "Non-Application Layer Protocol (T1095)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[757, 828]]}, {"type": "Process Injection (T1055)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4301, 4412]]}, {"type": "Software Packing (T1027.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[7222, 7253]]}, {"type": "Web Protocols (T1071.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[8491, 8534], [11831, 11850], [12019, 12040], [12566, 12584]]}, {"type": "Symmetric Cryptography (T1573.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[9264, 9375]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[11211, 11231], [11360, 11383], [12593, 12602], [12642, 12670]]}, {"type": "Obfuscated Files or Information (T1027)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[11348, 11355], [12019, 12040], [12566, 12584]]}, {"type": "Ingress Tool Transfer (T1105)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[11779, 11838]]}], "version": 2}