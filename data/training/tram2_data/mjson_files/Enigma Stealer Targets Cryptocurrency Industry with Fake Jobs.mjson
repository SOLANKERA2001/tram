{"signal": "title: Enigma Stealer Targets Cryptocurrency Industry with Fake Jobs\nurl: https://www.trendmicro.com/en_us/research/23/b/enigma-stealer-targets-cryptocurrency-industry-with-fake-jobs.html\n\nMalware\nEnigma Stealer Targets Cryptocurrency Industry with Fake Jobs\nWe discovered an active campaign targeting Eastern Europeans in the cryptocurrency industry using fake job lures.\nBy: Aliakbar Zahravi, Peter Girnus\n\t\t\n\t\t\tFebruary 09, 2023Read time:  ( words)\n\t\n\n\n\n\n\n\n\n\n\n\nSave to Folio\n\n\n\n\n\n Subscribe\n\n\n\n\n\n\n\n\n\n\nWe recently found an active campaign that uses a fake employment pretext targeting Eastern Europeans in the cryptocurrency industry to install an information stealer. In this campaign, the suspected Russian threat actors, use several highly obfuscated and underdevelopment custom loaders in order to infect those involved in the cryptocurrency industry with Enigma stealer (detected as TrojanSpy.MSIL.ENGIMASTEALER.YXDBC), which is a modified version of the Stealerium information stealer. In addition to these loaders, the attacker also exploits CVE-2015-2291, an Intel driver vulnerability, to load a malicious driver designed to reduce the token integrity of Microsoft Defender.\nStealerium, the original information stealer which serves as the base for Enigma Stealer, is an open-source project written in C# and markets itself as a stealer, clipper, and keylogger with logging capabilities using the Telegram API. Security teams and individual users are advised to continuously update the security solutions of their systems and remain vigilant against threat actors who perform social engineering via job opportunity or salary increase-related lures.\nAttack Chain\n\n\n\n\n\nFigure 1. The Attack kill chain used by Enigma Stealer operator (click the image for a larger version)\n\n\n\nUsing fake cryptocurrency interviews to lure victims\nThe infection chain starts with a malicious RAR archive — in this instance, contract.rar (SHA256: 658725fb5e75ebbcb03bc46d44f048a0f145367eff66c8a1a9dc84eef777a9cc) — which is distributed to victims via phishing attempts or through social media. The archive contains the files, Interview questions.txt, and Interview conditions.word.exe.\n\n\n\n\n\nFigure 2. The files found inside the malicious RAR archive\n\n\nThese files set up the pretext for a fake cryptocurrency role or job opening. One file, Interview questions.txt (SHA256: 3a1eb6fabf45d18869de4ffd773ae82949ef80f89105e5f96505de810653ed73) contains sample interview questions written in Cyrillic. This serves to further legitimize the package in the eyes of the victim and draw attention away from the malicious binary.\n\n\n\n\n\nFigure 3. A machine translation of Interview questions.txt\n\n\nThe other file Interview conditions.word.exe (SHA256: 03b9d7296b01e8f3fb3d12c4d80fe8a1bb0ab2fd76f33c5ce11b40729b75fb23) contains the first stage Enigma loader. This file, which also masquerades as a legitimate word document, is designed to lure unsuspecting victims into executing the loader. Once executed, the Enigma loader begins the registration and downloading of the second-stage payload.\nAnalysis of the Enigma infrastructure\nEnigma uses two servers in its operation. The first utilizes Telegram for delivering payloads, sending commands, and receiving the payload heartbeat. The second server 193[.]56[.]146[.]29 is used for DevOps and logging purposes. At each stage the payload sends its execution log to the logging server. Since this malware is under continuous development the attacker potentially uses the logging server to improve malware performance. We have also identified the Amadey C2 panel on 193[.]56[.]146[.]29 which has only one sample (95b4de74daadf79f0e0eef7735ce80bc) communicating with it. \n\n\n\n\n\nFigure 4. Amadey C&C login page\n\n\nAmadey is a popular botnet that is sold on Russian speaking forums, but its source code has been leaked online. Amadey offers threat actors polling and reconnaissance services.\n\n\n\n\n\nFigure 5. The exposed info.php page of the threat actors’ command-and-control (C&C) infrastructure\n\n\nThis server has a unique Linux distribution only referenced in Russian Linux forums.\n\n\n\n\n\nFigure 6. The default time zone of the C&C server\n\n\nThe default time zone on this server is set to Europe/Moscow. This server registers a newly infected host when Interview conditions.word.exe is executed by the victim.\nStage 1: EnigmaDownloader_s001\n\n\n\n\nMD5\n\nSHA-1\n\nSHA-256\n\nFile size\n\n1693D0A858B8FF3B83852C185880E459\n\n5F1536F573D9BFEF21A4E15273B5A9852D3D81F1\n\n03B9D7296B01E8F3FB3D12C4D80FE8A1BB0AB2FD76F33C5CE11B40729B75FB23\n\n367.00 KB (375808 bytes)\n\n\n\n\n\nThe initial stage of Enigma, Interview conditions.word.exe, is a downloader written in C++. Its primary objective is to download, deobfuscate, decompress, and launch the secondary stage payload. The malware incorporates multiple tactics to avoid detection and complicate reverse engineering, such as API hashing, string encryption, and irrelevant code.\nBefore delving into the analysis of \"EngimaDownloader_s001,\" let's first examine how the malware decrypts strings and resolves hashed Windows APIs. By understanding this, we can implement an automated system to help us retrieve encrypted data and streamline the analysis process. Please be advised that to enhance code legibility, we have substituted all hashes with the corresponding function names.\nEngimaDownloader_s001 API Hashing:\nAPI hashing is a technique employed by malware to conceal the utilization of potentially suspicious APIs (functions) from static detection. This technique helps the malware disguise its activities and evade detection.\nIt involves replacing the human-readable names of functions (such as \"CreateMutexW\") with a hash value, such as 0x0FD43765A. The hash value is then used in the code to call the corresponding API function, rather than using the human-readable name. The purpose of this technique is to make the process of understanding the code more time-consuming and difficult.\nFor API Hashing the EnigmaDownloader_s001 uses the following custom MurmurHash:\n\n\n\n\n\nFigure 7. Custom implementation of murmur hash\n\n\nThe malware employs dynamic API resolving to conceal its API imports and make static analysis more difficult. This technique involves storing the names or hashes of the APIs needed, then importing them dynamically at runtime.\nThe Windows API offers LoadLibrary and GetProcAddress functions to facilitate this. LoadLibrary accepts the name of a DLL and returns a handle, which is then passed to GetProcAddress along with a function name to obtain a pointer to that function. To further evade detection, the malware author even implemented their own custom version of GetProcAddress to retrieve the address of functions such as LoadLibrary and others. The use of standard methods like GetProcAddress and LoadLibrary might raise a red flag, so the custom implementation helps to avoid detection.\n\n\n\n\n\nFigure 8. Dynamic API loading\n\n\nThe following is a list of API hash values along with the names of functions that have been used in this sample (Please note that the hash value might be different in other variants since the malware author changed some of the constant values in the hash generator function).\n0xE04A219 : kernel32_HeapCreate\n 0xA1ADA36 : kernel32_lstrcpyA\n 0x5097BB4 : kernel32_RegOpenKeyExA\n 0x750EFAB : kernel32_GetLastError\n 0x4CB039A : kernel32_RegQueryValueExA\n 0xAAF4498 : kernel32_RegCloseKey\n 0xFAD2A34 : kernel32_lstrcmpiA\n 0x11A198F : combase_CoCreateGuid\n 0xE94A809 : kernel32_RtlZeroMemory\n 0x6A6A154 : kernel32_lstrcatA\n 0x8150471 : ntdll_RtlAllocateHeap\n 0x4CF4539 : user32_wvsprintfW\n 0x663555F : kernel32_WideCharToMultiByte\n 0x59CADCE : ntdll_RtlFreeHeap\n 0x1CE543C : cabinet_CloseDecompressor\n 0x11CF0A2 : wininet_InternetGetConnectedState\n 0x675C7B2 : kernel32_Sleep\n 0xDC75FF2 : wininet_InternetCheckConnectionA\n 0x5CC35B1 : wininet_InternetSetOptionA\n 0xF9E8859 : wininet_InternetOpenA\n 0x6F05A9E : wininet_InternetConnectA\n 0xBAEECD9 : wininet_HttpOpenRequestA\n 0xAD9A77C : wininet_HttpSendRequestA\n 0x835FA71 : wininet_HttpQueryInfoA\n 0xBFA9532 : wininet_InternetReadFile\n 0x99D029C : wininet_InternetCloseHandle\n 0x8DABD38 : kernel32_GetFileAttributesW\n 0x44E1C18 : kernel32_DeleteFileW\n 0xAB69596 : kernel32_CreateFileW\n 0x2CF38A1 : kernel32_WriteFile\n 0x1CE43DE : kernel32_CloseHandle\n 0x548C5A4 : Rpcrt4_RpcStringBindingComposeW\n 0x7B0F79F : Rpcrt4_RpcBindingFromStringBindingW\n 0x69A2B62 : Rpcrt4_RpcStringFreeW\n 0xD2CD112 : advapi32_CreateWellKnownSid\n 0xEFBC2E9 : kernel32_LocalFree\n 0x60EDB01 : Rpcrt4_RpcBindingFree\n 0x7A7DAA0 : Rpcrt4_RpcAsyncInitializeHandle\n 0xB3F16FA : kernel32_CreateEventW\n 0x1C23B4F : Rpcrt4_NdrAsyncClientCall\n 0x8C1F37 : kernel32_WaitForSingleObject\n 0x7831640 : Rpcrt4_RpcRaiseException\n 0xF2FCCFE : Rpcrt4_RpcAsyncCompleteCall\n 0x816F545 : kernel32_SetLastError\n 0xFBE2D99 : oleaut32_SysAllocString\n 0x393ACB : oleaut32_SysFreeString\n 0xC9FEF5F : kernel32_ExpandEnvironmentStringsW\n 0x74D51D3 : kernel32_CreateProcessW\n 0xCDE9EC27 : wininet_HttpWebSocketClose\n 0x80C8449 : kernel32_TerminateProcess\n 0x418B4E7E : wininet_AppCacheCheckManifest\n 0x44E65EB : kernel32_WaitForDebugEvent\n 0x81C3F46 : kernel32_ContinueDebugEvent\n 0x1FB9EB2 : kernel32_LoadLibraryW\n 0x1071970 : kernel32_GetProcAddress\n 0xDAE6C9B : combase_CoInitializeEx\n 0xFD43765 : kernel32_CreateMutexW\n 0x73861029 : kernel32_BasepSetFileEncryptionCompression\n 0xA3FE987 : advapi32_RegDeleteKeyW\n 0x1CA6703 : advapi32_RegCreateKeyA\n 0x24EBD39 : kernel32_lstrlenA\n 0x69F38C6 : kernel32_RegSetValueExA\n 0xC2D33DC : ntdll_RtlGetVersion\n 0xBD5D03A : kernel32_GetNativeSystemInfo\n 0x10BEDD60 : wininet_CreateMD5SSOHash \nTo resolve the API hash, the malware first passes two arguments to the \"mw_resolveAPI\" function. The first argument is the specific library name index number (in this case 0xA = Kernel32.dll), while the second argument is the export function name hashed value (which, in this example, is 0xFD43765A)\nThe mw_resolveAPI function first finds the specific index, jumps to it, and decrypts the corresponding library name value as shown in the bottom image of Figure 9.\n\n\n\n\n\n\n\n\n\nFigure 9. Resolving API hashes\n\n\nThe following is the list of decrypted library names:\nWinInet.dll\nuserenv.dll\npsapi.dll\nnetapi32.dll\nmpr.dll\nwtsapi32.dll\napi-ms-win-core-processthreads-l1-1-0.dll\nntoskrnl.exe\nRpcrt4.dll\nUser32.dll\napi-ms-win-core-com-l1-1-0.dll\nCabinet.dll\nshell32.dll\nOleAut32.dll\nOle32.dll\nntdll.dll\nmscoree.dll\nkernel32.dll\nadvapi32.dll\nThe library name and export function name hashed value is then passed to GetExportAddressByHash, which is responsible for opening the handle to the library, creating a hash for each export function name, and comparing it with the passed argument. Once the match is found, the malware returns the function address and calls it. \n\n\n\n\n\nFigure 10. Retrieving the address of an API\n\n\nThe code snippet in Figure 11 demonstrates how mw_GetExportAddressByHash resolves the given API hash and retrieves the address of an exported function. The techniques used to decrypt strings and resolve API hashes in both the stage 1 and stage 2 payloads are identical.\n\n\n\n\n\nFigure 11. Custom implementation of GetProcAddress\n\n\nWith an understanding of this process, we can then proceed with our analysis.\nUpon execution, the malware creates the mutual exclusion object (mutex) to mark its presence in the system and retrieves the MachineGuid of the infected system from the SOFTWARE\\Microsoft\\Cryptography\\MachineGuid registry key, which it uses as a unique identifier to register the system with its C&C server and track its infection.\n\n\n\n\n\nFigure 12. Constructing a unique system identifier and creating a mutex\n\n\nIt then deletes the HKCU\\SOFTWARE\\Intel registry key and recreates it with two values, HWID and ID, as shown in Figure 13.\n\n\n\n\n\nFigure 13. Recreating HKCU\\SOFTWARE\\Inte\n\n\nIt then collects information about the .NET Framework Setup on the infected system and sends it to its C&C server as shown in Figure 14.\n\n\n\n\n\nFigure 14. Constructing first debug message\n\n\n\nFigure 15. An example of the first debug message\n\n\nThere are two C&C servers that were used in this attack chain. The first one ,193[.]56[.]146[.]29, is used to send program execution DEBUG and Telegram to deliver payloads and send commands.\nTo download the next stage payload, the malware first sends a request to the attacker-controlled Telegram channel https://api[.]telegram[.]org/bot{token}/getFile to obtain the file_path. This approach allows the attacker to continuously update and eliminates reliance on fixed file names.\n\n\n\n\n\nFigure 16. Payload “file_path” request from Telegram\n\n\nNote that in this case, the next stage payload was file_17.pack. However, this file and other stage names were changed multiple times during our investigation. \nUpon obtaining the file_path, the malware then sends a request to download the next stage binary file (shown in Figure 17)\n\n\n\n\n\nFigure 17. Payload download request from Telegram\n\n\n\nFigure 18. The code responsible for decrypting the next stage payload file_id and Telegram token\n\n\nIf the file's download, deobfuscation, and decompression are successful, the malware sends the message \"bot getted\" to the debug server.\n\n\n\n\n\nFigure 19. Successful payload retrieval debug message\n\n\nTo decompress the payload, the malware uses Microsoft Cabinet's Compressapi with the compression algorithm (\"COMPRESS_RAW  | COMPRESS_ALGORITHM_LZMS\"). The code snippet in Figure 20 demonstrates how the malware downloads, deobfuscates, and decompresses  file_17.pack (UpdateTask.dll).\n\n\n\n\n\nFigure 20. Code responsible for downloading, deobfuscating, decompressing, and renaming the downloaded payload\n\n\n\nFigure 21. Payload deobfuscation and decompression\n\n\nBefore executing the payload, the malware attempts to elevate its privileges by executing the mw_UAC_bypass function, which is part of an open-source project. This technique, Calling Local Windows RPC Servers from .NET (which was unveiled in 2019 by Project Zero), allows a user to bypass user account control (UAC) using only two remote procedure call (RPC) requests instead of DLL hijacking.\n\n\n\n\n\nFigure 22. Successful UAC bypass execution debug message\n\n\nThe malware requires elevated privileges for the subsequent stage payload, which involves loading the malicious driver by exploiting CVE-2015-2291.\nFinally, the malware executes an export function called \"Entry\" from UpdateTask.dll via rundll32.exe as shown in Figure 23. \n\n\n\n\n\nFigure 23. Running the stage 2 payload through rundll32.exe\n\n\nStage 2: EngimaDownloader_s002\n\n\n\n\nMD5\n\nSHA-1\n\nSHA-256\n\nFile size\n\n377f617ccd4aa09287d5221d5d8e1228\n\n288358deaa053b30596100c9841a7d6d1616908d\n\nf1623c2f7c00affa3985cf7b9cdf25e39320700fa9d69f9f9426f03054b4b712\n\n497.50 KB (509440 bytes)\n\n\n\n\n\nThe second stage payload, UpdatTask.dll, is a dynamic-link library (DLL) written in C++ that comprises two export functions (DllEntryPoint and Entry). The malicious code is executed in the Entry export function, which is triggered by the first stage routine. The primary objective of this malware is to disable Microsoft Defender by deploying a malicious kernel mode driver (“bring your own vulnerable driver” or BYOVD method) via exploiting a vulnerable Intel driver (CVE-2015-2291) and then downloading and executing the third-stage payload.\nPlease note that the first, second, and third-stage payloads all obtain the infected system's MachineGuid at the start and use it to identify the machine in debug message network traffic, enabling the adversary to track the infected system's malware execution state.\nUpon execution, the malware creates the mutex to mark its presence on the system and retrieves the MachineGuid of the infected system from the \"SOFTWARE\\Microsoft\\Cryptography\\MachineGuid\" registry key.\n\n\n\n\n\nFigure 24. Constructing a unique system identifier and creating a mutex\n\n\nNext, the malware will determine if it is running as an account with administrator privileges or simply as a regular user using the GetTokenInformation API. If the malware fails to obtain elevated privileges, it will bypass the disablement of Windows Defender and proceed to download and execute the next stage of its attack.\n\n\n\n\n\nFigure 25. Checking the process privileges\n\n\nIf the process successfully obtains elevated privileges, it proceeds to drop the files shown in Figure 26. \n\n\n\n\n\nFigure 26. Stage 2 embedded binary files\n\n\nName\n\nMD5\n\nSHA-1\n\nSHA-256\n\niQVW64.SYS (CVE-2015-2291)\n \nVulnerable Intel driver, used for kernel exploitation\n\n1898ceda3247213c084f43637ef163b3\n\nd04e5db5b6c848a29732bfd52029001f23c3da75\n\n4429f32db1cc70567919d7d47b844a91cf1329a6cd116f582305f3b7b60cd60b\n\nDriver.SYS\nMalicious drivers reduce the token integrity of Microsoft defender (MsMpEng.exe)\n\n28ca7a21de60671f3b528a9e08a44e1c\n\n21F1CFD310633863BABAAFE7E5E892AE311B42F6\n\nD5B4C2C95D9610623E681301869B1643E4E2BF0ADCA42EAC5D4D773B024FA442\n\n\n\n\n\nThe malware uses an open-source project called KDMapper to manually map non-signed/self-signed drivers in memory by exploiting the iqvw64e.sys Intel driver. Testing on this has reportedly been conducted on Windows 10 version 1607 to Windows 11 version 22449.1. The functions intel_driver::Load() and kdmapper::MapDriver() are both responsible for achieving this task.\nThe following snippet demonstrates the debug message related to drive loading and installation:\n \n\n\n\n\n\nFigure 27. Debug message for loading the driver and providing execution status\n\n\nThe malware then establishes persistence on the targeted system by creating scheduled tasks.  \n\n\n\n\n\nFigure 28. Malware persistence is achieved via scheduled tasks (click the image for a larger version)\n\n\nFinally, the EngimaDownloader_s002 downloads and executes the next-stage payload on the infected system. To achieve this task, it employs similar techniques as those used in the first stage — the only difference, in this case, is that the malware is executing a .NET Assembly from C++ in memory using the CLR (Common Language Runtime) hosting technique. \n\n\n\n\n\nFigure 29. The stage 3 .NET binary is executed via CLR hosting\n\n\nStage 2.1: Engima Driver analysis\n\n\n\n\nName\n\nMD5\n\nSHA-1\n\nSHA-256\n\nDriver.SYS\n\n28ca7a21de60671f3b528a9e08a44e1c\n\n21F1CFD310633863BABAAFE7E5E892AE311B42F6\n\nD5B4C2C95D9610623E681301869B1643E4E2BF0ADCA42EAC5D4D773B024FA442\n\n\n\n\n\nThe driver's sole purpose is to patch the integrity level of the Microsoft defender (MsMpEng.exe) and forcibly reduce it from system to untrusted integrity. The reduction of the integrity level to untrusted impedes the process of accessing secure resources on the system for the victim, silently disabling it without terminating the process. \n\n\n\n\n\nFigure 30. Microsoft defender token integrity modification before and after executing Enigma Driver\n\n\nThe code snippets in Figure 31 demonstrate how the malware performs these operations.\n\n\n\n\n\nFigure 31. Integrity level patching\n\n\n\nFigure 32. Details of the vulnerable Intel driver binary \n\n\n\n\n\n\n\nFigure 33. Details of the certificate of the vulnerable driver (top) and Enigma Driver (bottom)\t\t\t\t\t\t\t\t\t\t\n\n\nStage 3: EngimaDownloader_s003\nThe following table shows the details of Enigma.Bot.Net.exe.\n\n\n\n\nMD5\n\nSHA-1\n\nSHA-256\n\nFile size\n\n50949ad2b39796411a4c7a88df0696c8\n\n67a502395fc4193721c2cfc39e31be11e124e02c\n\n8dc192914e55cf9f90841098ab0349dbe31825996de99237f35a1aab6d7905bb\n\n10.50 KB (10752 bytes)\n\n\n\n\n\nEngimaDownloader_s003 is a third-stage downloader written in C#. It is responsible for downloading, decompressing, and executing the final stealer payload on an infected system. The malware also accepts commands from a Telegram channel, though these commands may vary between variants.\nstop\n alive\n runassembly\nUpon launch, the malware sends a \"Bot started\" message to both the Debug server and the Telegram channel, indicating its successful execution.\n\n\n\n\n\nFigure 34. Stage 3 payload initialization\n\n\nIt then sends a GET request to  https://api[.]telegram[.]org/bot{token}/getUpdates to retrieve the command. Upon receiving the runassembly command, the malware downloads the next part of the final stage payload (file_19.pack), decompresses it using the GZipStream API, and executes it.\n\n\n\n\n\nFigure 35. Stage 3 payload commands \n\n\n\nFigure 36. An example of network communication between EngimaDownloader_s003 and the attacker’s Telegram channel.\n\n\nStage 4: Enigma Stealer\n\n\n\n\nMD5\n\nSHA-1\n\nSHA-256\n\nFile size\n\n4DC2D57D9DB430235B21D7FB735ADF36\n\n98BF3080A85743AB933511D402E94D1BCEE0C545\n\n4D2FB518C9E23C5C70E70095BA3B63580CAFC4B03F7E6DCE2931C54895F13B2C\n\n2954.75 KB (2954752 bytes)\n\n\n\n\n\nThe final stage is the Enigma Stealer which, as we previously mentioned, is a modified version of an open-source information stealer project called Stealerium.\nUpon execution, the malware initializes configuration and sets up its working directory.\n\n\n\n\n\nFigure 37. Engima Stealer initialization\n\n\nThe malware configuration is as follows:\npublic static string Version = \"0.05.01\";\n public static string DebugMode = \"0\";\n public static string Mutex = \"6C0560CE-2E75-4BB4-A26E-F08592A1D56D\";\n public static string AntiAnalysis = \"0\";\n public static string Autorun = \"1\";\n public static string StartDelay = \"0\";\n public static string WebcamScreenshot = \"1\";\n public static string KeyloggerModule = \"0\";\n public static string ClipperModule = \"0\";\n public static string GrabberModule = \"0\";\n public static string TelegramToken = \"5894962737:AAHAFZnz2AkLAyHC0G-7S2je9JMWWLJHGsU\";\n public static string TelegramChatID = \"5661436914\";\nIt then starts to collect system information and steals user information, tokens, and passwords from various web browsers and applications such as Google Chrome, Microsoft Edge, Microsoft Outlook, Telegram, Signal, OpenVPN and others. It captures screenshots and extracts clipboard content and VPN configurations. \n\n\n\n\n\nFigure 38. Enigma Stealer exfiltrating sensitive data\n\n\nThe collected information is then compressed and exfiltrated to the attacker via Telegram. \n\n\n\n\n\nFigure 39. An example of data exfiltrated from the victim’s system\n\n\n\nFigure 40. Data upload logic\n\n\nFigure 41 illustrates a sample of the network traffic generated by the malware.\n\n\n\n\n\nFigure 41. Network traffic of data upload to the attacker's telegram channel\n\n\n\nFigure 42. Enigma Stealer capabilities\n\n\nIt's worth mentioning that some strings, such as web browser paths and Geolocation API services URLs, are encrypted with the AES algorithm in cipher-block chaining (CBC) mode.\n\n\n\n\n\nFigure 43. String encryption logic\n\n\nList of decrypted strings:\n\\Chromium\\User Data\\\n \\Google\\Chrome\\User Data\\\n \\Google(x86)\\Chrome\\User Data\\\n \\Opera Software\\\n \\MapleStudio\\ChromePlus\\User Data\\\n \\Iridium\\User Data\\\n 7Star\\7Star\\User Data\n //CentBrowser\\User Data\n //Chedot\\User Data\n Vivaldi\\User Data\n Kometa\\User Data\n Elements Browser\\User Data\n Epic Privacy Browser\\User Data\n uCozMedia\\Uran\\User Data\n Fenrir Inc\\Sleipnir5\\setting\\modules\\ChromiumViewer\n CatalinaGroup\\Citrio\\User Data\n Coowon\\Coowon\\User Data\n liebao\\User Data\n QIP Surf\\User Data\n Orbitum\\User Data\n Comodo\\Dragon\\User Data\n Amigo\\User\\User Data\n Torch\\User Data\n Yandex\\YandexBrowser\\User Data\n Comodo\\User Data\n 360Browser\\Browser\\User Data\n Maxthon3\\User Data\n K-Melon\\User Data\n CocCoc\\Browser\\User Data\n BraveSoftware\\Brave-Browser\\User Data\n Microsoft\\Edge\\User Data\n http://ip-api.com/line/?fields=hosting\n https://api.mylnikov.org/geolocation/wifi?v=1.1&bssid=\n https://discordapp.com/api/v6/users/@me\nConclusion\nSimilar to previous campaigns involving groups such as Lazarus, this campaign demonstrates a persistent and lucrative attack vector for various advanced persistent threat (APT) groups and threat actors. Through the use of employment lures, these actors can target individuals and organizations across the cryptocurrency and Web 3 sphere. Furthermore, this case highlights the evolving nature of modular malware that employ highly obfuscated and evasive techniques along with the utilization of continuous integration and continuous delivery (CI/CD) principles for continuous malware development.\nOrganizations can protect themselves by remaining vigilant against phishing attacks. Furthermore, individuals are advised to remain cautious of social media posts or phishing attempts that offer job opportunities unless they are sure of their legitimacy. Due to current economic conditions, threat actors can be expected to continue to heavily deploy employment lures to target those seeking employment.\nMeanwhile, organizations should also consider cutting edge multilayered defensive strategy and  comprehensive security solutions such as Trend Micro:trade_mark: XDR that can detect, scan, and block malicious URLs across the modern threat landscape.\nIndicators of Compromise (IOCs)\nThe indicators of compromise for this entry can be found here.\n\n\n\n\n\t\n\t\tAuthors\n\t\n\n\n\nAliakbar Zahravi\nStaff Researcher\n\n\n\n\nPeter Girnus\nSr. Threat Researcher\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 24809, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 13], [14, 21], [22, 29], [30, 44], [45, 53], [54, 58], [59, 63], [64, 68], [69, 72], [72, 73], [74, 79], [79, 82], [82, 85], [85, 86], [86, 96], [96, 97], [97, 100], [100, 101], [101, 106], [106, 107], [107, 115], [115, 116], [116, 118], [118, 119], [119, 120], [120, 121], [121, 182], [182, 183], [183, 187], [189, 196], [197, 203], [204, 211], [212, 219], [220, 234], [235, 243], [244, 248], [249, 253], [254, 258], [259, 261], [262, 272], [273, 275], [276, 282], [283, 291], [292, 301], [302, 309], [310, 319], [320, 322], [323, 326], [327, 341], [342, 350], [351, 356], [357, 361], [362, 365], [366, 371], [371, 372], [373, 375], [375, 376], [377, 385], [386, 393], [393, 394], [395, 400], [401, 407], [414, 422], [423, 425], [425, 426], [427, 435], [436, 440], [440, 441], [443, 444], [445, 450], [450, 451], [464, 468], [469, 471], [472, 477], [484, 493], [504, 506], [507, 515], [516, 521], [522, 524], [525, 531], [532, 540], [541, 545], [546, 550], [551, 552], [553, 557], [558, 568], [569, 576], [577, 586], [587, 594], [595, 604], [605, 607], [608, 611], [612, 626], [627, 635], [636, 638], [639, 646], [647, 649], [650, 661], [662, 669], [669, 670], [671, 673], [674, 678], [679, 687], [687, 688], [689, 692], [693, 702], [703, 710], [711, 717], [718, 724], [724, 725], [726, 729], [730, 737], [738, 744], [745, 755], [756, 759], [760, 776], [777, 783], [784, 791], [792, 794], [795, 800], [801, 803], [804, 810], [811, 816], [817, 825], [826, 828], [829, 832], [833, 847], [848, 856], [857, 861], [862, 868], [869, 876], [877, 878], [878, 886], [887, 889], [890, 899], [899, 900], [900, 904], [904, 905], [905, 918], [918, 919], [919, 924], [924, 926], [927, 932], [933, 935], [936, 937], [938, 946], [947, 954], [955, 957], [958, 961], [962, 972], [973, 984], [985, 992], [992, 993], [994, 996], [997, 1005], [1006, 1008], [1009, 1014], [1015, 1022], [1022, 1023], [1024, 1027], [1028, 1036], [1037, 1041], [1042, 1050], [1051, 1055], [1055, 1064], [1064, 1065], [1066, 1068], [1069, 1074], [1075, 1081], [1082, 1095], [1095, 1096], [1097, 1099], [1100, 1104], [1105, 1106], [1107, 1116], [1117, 1123], [1124, 1132], [1133, 1135], [1136, 1142], [1143, 1146], [1147, 1152], [1153, 1162], [1163, 1165], [1166, 1175], [1176, 1184], [1184, 1185], [1186, 1196], [1196, 1197], [1198, 1201], [1202, 1210], [1211, 1222], [1223, 1230], [1231, 1236], [1237, 1243], [1244, 1246], [1247, 1250], [1251, 1255], [1256, 1259], [1260, 1266], [1267, 1274], [1274, 1275], [1276, 1278], [1279, 1281], [1282, 1293], [1294, 1301], [1302, 1309], [1310, 1312], [1313, 1315], [1316, 1319], [1320, 1327], [1328, 1334], [1335, 1337], [1338, 1339], [1340, 1347], [1347, 1348], [1349, 1356], [1356, 1357], [1358, 1361], [1362, 1371], [1372, 1376], [1377, 1384], [1385, 1397], [1398, 1403], [1404, 1407], [1408, 1416], [1417, 1420], [1420, 1421], [1422, 1430], [1431, 1436], [1437, 1440], [1441, 1451], [1452, 1457], [1458, 1461], [1462, 1469], [1470, 1472], [1473, 1485], [1486, 1492], [1493, 1496], [1497, 1505], [1506, 1515], [1516, 1518], [1519, 1524], [1525, 1532], [1533, 1536], [1537, 1543], [1544, 1552], [1553, 1560], [1561, 1567], [1568, 1574], [1575, 1578], [1579, 1586], [1587, 1593], [1594, 1605], [1606, 1609], [1610, 1613], [1614, 1625], [1626, 1628], [1629, 1635], [1636, 1652], [1653, 1658], [1658, 1659], [1660, 1666], [1667, 1672], [1678, 1684], [1685, 1686], [1686, 1687], [1688, 1691], [1692, 1698], [1699, 1703], [1704, 1709], [1710, 1714], [1715, 1717], [1718, 1724], [1725, 1732], [1733, 1741], [1742, 1743], [1743, 1748], [1749, 1752], [1753, 1758], [1759, 1762], [1763, 1764], [1765, 1771], [1772, 1779], [1779, 1780], [1784, 1789], [1790, 1794], [1795, 1809], [1810, 1820], [1821, 1823], [1824, 1828], [1829, 1836], [1837, 1840], [1841, 1850], [1851, 1856], [1857, 1863], [1864, 1868], [1869, 1870], [1871, 1880], [1881, 1884], [1885, 1892], [1893, 1894], [1895, 1897], [1898, 1902], [1903, 1911], [1911, 1912], [1913, 1921], [1921, 1922], [1922, 1925], [1926, 1927], [1927, 1933], [1933, 1934], [1935, 1999], [1999, 2000], [2001, 2002], [2003, 2008], [2009, 2011], [2012, 2023], [2024, 2026], [2027, 2034], [2035, 2038], [2039, 2047], [2048, 2056], [2057, 2059], [2060, 2067], [2068, 2074], [2075, 2080], [2080, 2081], [2082, 2085], [2086, 2093], [2094, 2102], [2103, 2106], [2107, 2112], [2112, 2113], [2114, 2123], [2124, 2133], [2133, 2134], [2134, 2137], [2137, 2138], [2139, 2142], [2143, 2152], [2153, 2163], [2163, 2164], [2164, 2168], [2168, 2169], [2169, 2172], [2172, 2173], [2179, 2185], [2186, 2187], [2187, 2188], [2189, 2192], [2193, 2198], [2199, 2204], [2205, 2211], [2212, 2215], [2216, 2225], [2226, 2229], [2230, 2237], [2240, 2245], [2246, 2251], [2252, 2255], [2256, 2258], [2259, 2262], [2263, 2270], [2271, 2274], [2275, 2276], [2277, 2281], [2282, 2296], [2297, 2301], [2302, 2304], [2305, 2308], [2309, 2316], [2316, 2317], [2318, 2321], [2322, 2326], [2326, 2327], [2328, 2337], [2338, 2347], [2347, 2348], [2348, 2351], [2352, 2353], [2353, 2359], [2359, 2360], [2361, 2425], [2425, 2426], [2427, 2435], [2436, 2442], [2443, 2452], [2453, 2462], [2463, 2470], [2471, 2473], [2474, 2482], [2482, 2483], [2484, 2488], [2489, 2495], [2496, 2498], [2499, 2506], [2507, 2517], [2518, 2521], [2522, 2529], [2530, 2532], [2533, 2536], [2537, 2541], [2542, 2544], [2545, 2548], [2549, 2555], [2556, 2559], [2560, 2564], [2565, 2574], [2575, 2579], [2580, 2584], [2585, 2588], [2589, 2598], [2599, 2605], [2605, 2606], [2612, 2618], [2619, 2620], [2620, 2621], [2622, 2623], [2624, 2631], [2632, 2643], [2644, 2646], [2647, 2656], [2657, 2666], [2666, 2667], [2667, 2670], [2673, 2676], [2677, 2682], [2683, 2687], [2688, 2697], [2698, 2708], [2708, 2709], [2709, 2713], [2713, 2714], [2714, 2717], [2718, 2719], [2719, 2725], [2725, 2726], [2727, 2791], [2791, 2792], [2793, 2801], [2802, 2805], [2806, 2811], [2812, 2817], [2818, 2824], [2825, 2831], [2831, 2832], [2833, 2837], [2838, 2842], [2842, 2843], [2844, 2849], [2850, 2854], [2855, 2866], [2867, 2869], [2870, 2871], [2872, 2882], [2883, 2887], [2888, 2896], [2896, 2897], [2898, 2900], [2901, 2909], [2910, 2912], [2913, 2917], [2918, 2930], [2931, 2938], [2939, 2943], [2944, 2953], [2954, 2957], [2958, 2964], [2964, 2965], [2966, 2970], [2971, 2979], [2979, 2980], [2981, 2984], [2985, 2991], [2992, 2998], [2999, 3005], [3006, 3009], [3010, 3022], [3023, 3026], [3027, 3038], [3039, 3041], [3042, 3045], [3046, 3058], [3059, 3066], [3066, 3067], [3068, 3076], [3077, 3079], [3080, 3083], [3084, 3090], [3091, 3105], [3106, 3112], [3113, 3117], [3118, 3121], [3122, 3129], [3130, 3132], [3133, 3136], [3137, 3146], [3146, 3147], [3148, 3151], [3152, 3157], [3158, 3166], [3167, 3175], [3176, 3179], [3180, 3190], [3191, 3199], [3199, 3200], [3201, 3208], [3209, 3217], [3217, 3218], [3219, 3222], [3223, 3232], [3233, 3236], [3237, 3244], [3245, 3254], [3254, 3255], [3256, 3259], [3260, 3266], [3267, 3273], [3274, 3277], [3277, 3280], [3280, 3282], [3282, 3285], [3285, 3288], [3288, 3291], [3291, 3293], [3294, 3296], [3297, 3301], [3302, 3305], [3306, 3312], [3313, 3316], [3317, 3324], [3325, 3333], [3333, 3334], [3335, 3337], [3338, 3342], [3343, 3348], [3349, 3352], [3353, 3360], [3361, 3366], [3367, 3370], [3371, 3380], [3381, 3384], [3385, 3387], [3388, 3391], [3392, 3399], [3400, 3406], [3406, 3407], [3408, 3413], [3414, 3418], [3419, 3426], [3427, 3429], [3430, 3435], [3436, 3446], [3447, 3458], [3459, 3462], [3463, 3471], [3472, 3483], [3484, 3488], [3489, 3492], [3493, 3500], [3501, 3507], [3508, 3510], [3511, 3518], [3519, 3526], [3527, 3538], [3538, 3539], [3540, 3542], [3543, 3547], [3548, 3552], [3553, 3563], [3564, 3567], [3568, 3574], [3575, 3577], [3578, 3583], [3584, 3586], [3587, 3590], [3590, 3593], [3593, 3595], [3595, 3598], [3598, 3601], [3601, 3604], [3604, 3606], [3607, 3612], [3613, 3616], [3617, 3621], [3622, 3625], [3626, 3632], [3633, 3634], [3634, 3666], [3666, 3667], [3668, 3681], [3682, 3686], [3687, 3689], [3689, 3690], [3697, 3703], [3704, 3705], [3705, 3706], [3707, 3713], [3714, 3717], [3718, 3723], [3724, 3728], [3731, 3737], [3738, 3740], [3741, 3742], [3743, 3750], [3751, 3757], [3758, 3762], [3763, 3765], [3766, 3770], [3771, 3773], [3774, 3781], [3782, 3790], [3791, 3797], [3797, 3798], [3799, 3802], [3803, 3806], [3807, 3813], [3814, 3818], [3819, 3822], [3823, 3827], [3828, 3834], [3835, 3841], [3841, 3842], [3843, 3849], [3850, 3856], [3857, 3863], [3864, 3870], [3871, 3878], [3879, 3882], [3883, 3897], [3898, 3906], [3906, 3907], [3913, 3919], [3920, 3921], [3921, 3922], [3923, 3926], [3927, 3934], [3935, 3939], [3939, 3940], [3940, 3943], [3944, 3948], [3949, 3951], [3952, 3955], [3956, 3962], [3963, 3970], [3971, 3990], [3991, 3992], [3992, 3995], [3995, 3996], [3997, 4011], [4014, 4018], [4019, 4025], [4026, 4029], [4030, 4031], [4032, 4038], [4039, 4044], [4045, 4057], [4058, 4062], [4063, 4073], [4074, 4076], [4077, 4084], [4085, 4090], [4091, 4097], [4097, 4098], [4104, 4110], [4111, 4112], [4112, 4113], [4114, 4117], [4118, 4125], [4126, 4130], [4131, 4135], [4136, 4138], [4139, 4142], [4143, 4146], [4147, 4153], [4156, 4159], [4160, 4167], [4168, 4172], [4173, 4177], [4178, 4180], [4181, 4185], [4186, 4192], [4193, 4195], [4196, 4199], [4200, 4202], [4203, 4209], [4209, 4210], [4210, 4216], [4216, 4217], [4218, 4222], [4223, 4229], [4230, 4239], [4240, 4241], [4242, 4247], [4248, 4256], [4257, 4261], [4262, 4266], [4267, 4276], [4277, 4287], [4287, 4288], [4288, 4292], [4292, 4293], [4293, 4296], [4297, 4299], [4300, 4308], [4309, 4311], [4312, 4315], [4316, 4322], [4322, 4323], [4324, 4329], [4330, 4331], [4331, 4332], [4333, 4354], [4359, 4362], [4364, 4368], [4368, 4369], [4371, 4375], [4375, 4378], [4380, 4384], [4385, 4389], [4391, 4423], [4425, 4465], [4467, 4531], [4533, 4539], [4540, 4542], [4543, 4544], [4544, 4550], [4551, 4556], [4556, 4557], [4563, 4566], [4567, 4574], [4575, 4580], [4581, 4583], [4584, 4590], [4590, 4591], [4592, 4601], [4602, 4612], [4612, 4613], [4613, 4617], [4617, 4618], [4618, 4621], [4621, 4622], [4623, 4625], [4626, 4627], [4628, 4638], [4639, 4646], [4647, 4649], [4650, 4651], [4651, 4654], [4655, 4658], [4659, 4666], [4667, 4676], [4677, 4679], [4680, 4682], [4683, 4691], [4691, 4692], [4693, 4704], [4704, 4705], [4706, 4716], [4716, 4717], [4718, 4721], [4722, 4728], [4729, 4732], [4733, 4742], [4743, 4748], [4749, 4756], [4756, 4757], [4758, 4761], [4762, 4769], [4770, 4782], [4783, 4791], [4792, 4799], [4800, 4802], [4803, 4808], [4809, 4818], [4819, 4822], [4823, 4833], [4834, 4841], [4842, 4853], [4853, 4854], [4855, 4859], [4860, 4862], [4863, 4866], [4867, 4874], [4874, 4875], [4876, 4882], [4883, 4893], [4893, 4894], [4895, 4898], [4899, 4909], [4910, 4914], [4914, 4915], [4916, 4922], [4923, 4930], [4931, 4935], [4936, 4939], [4940, 4948], [4949, 4951], [4952, 4953], [4953, 4974], [4974, 4976], [4977, 4980], [4980, 4982], [4983, 4988], [4989, 4996], [4997, 5000], [5001, 5004], [5005, 5012], [5013, 5021], [5022, 5029], [5030, 5033], [5034, 5042], [5043, 5049], [5050, 5057], [5058, 5062], [5062, 5063], [5064, 5066], [5067, 5080], [5081, 5085], [5085, 5086], [5087, 5089], [5090, 5093], [5094, 5103], [5104, 5106], [5107, 5116], [5117, 5123], [5124, 5126], [5127, 5131], [5132, 5134], [5135, 5143], [5144, 5153], [5154, 5158], [5159, 5162], [5163, 5173], [5174, 5177], [5178, 5186], [5187, 5194], [5194, 5195], [5196, 5202], [5203, 5205], [5206, 5213], [5214, 5218], [5219, 5221], [5222, 5229], [5230, 5234], [5235, 5245], [5245, 5246], [5247, 5249], [5250, 5254], [5255, 5266], [5267, 5270], [5271, 5277], [5278, 5282], [5283, 5286], [5287, 5300], [5301, 5309], [5310, 5315], [5315, 5316], [5317, 5338], [5339, 5342], [5343, 5350], [5350, 5351], [5352, 5355], [5356, 5363], [5364, 5366], [5367, 5368], [5369, 5378], [5379, 5387], [5388, 5390], [5391, 5398], [5399, 5401], [5402, 5409], [5410, 5413], [5414, 5425], [5426, 5428], [5429, 5440], [5441, 5451], [5452, 5456], [5457, 5458], [5458, 5467], [5467, 5468], [5469, 5473], [5474, 5480], [5481, 5490], [5490, 5491], [5492, 5496], [5497, 5506], [5507, 5512], [5513, 5516], [5517, 5524], [5525, 5533], [5534, 5537], [5538, 5548], [5549, 5552], [5553, 5558], [5559, 5568], [5568, 5569], [5570, 5572], [5573, 5581], [5582, 5591], [5592, 5595], [5596, 5610], [5611, 5616], [5617, 5619], [5620, 5629], [5630, 5631], [5631, 5635], [5636, 5638], [5639, 5640], [5640, 5652], [5652, 5654], [5655, 5659], [5660, 5661], [5662, 5666], [5667, 5672], [5672, 5673], [5674, 5678], [5679, 5681], [5682, 5693], [5693, 5694], [5695, 5698], [5699, 5703], [5704, 5709], [5710, 5712], [5713, 5717], [5718, 5722], [5723, 5725], [5726, 5729], [5730, 5734], [5735, 5737], [5738, 5742], [5743, 5746], [5747, 5760], [5761, 5764], [5765, 5773], [5773, 5774], [5775, 5781], [5782, 5786], [5787, 5792], [5793, 5796], [5797, 5811], [5812, 5816], [5816, 5817], [5818, 5821], [5822, 5829], [5830, 5832], [5833, 5837], [5838, 5847], [5848, 5850], [5851, 5853], [5854, 5858], [5859, 5862], [5863, 5870], [5871, 5873], [5874, 5887], [5888, 5891], [5892, 5896], [5897, 5901], [5902, 5916], [5917, 5920], [5921, 5930], [5930, 5931], [5932, 5935], [5936, 5939], [5940, 5947], [5948, 5951], [5952, 5973], [5974, 5978], [5979, 5982], [5983, 5992], [5993, 5999], [6000, 6010], [6010, 6011], [6017, 6023], [6024, 6025], [6025, 6026], [6027, 6033], [6034, 6048], [6049, 6051], [6052, 6058], [6059, 6063], [6066, 6069], [6070, 6077], [6078, 6085], [6086, 6093], [6094, 6097], [6098, 6107], [6108, 6110], [6111, 6118], [6119, 6122], [6123, 6126], [6127, 6134], [6135, 6138], [6139, 6143], [6144, 6150], [6151, 6159], [6160, 6164], [6165, 6174], [6174, 6175], [6176, 6180], [6181, 6190], [6191, 6199], [6200, 6207], [6208, 6211], [6212, 6217], [6218, 6220], [6221, 6227], [6228, 6230], [6231, 6234], [6235, 6239], [6240, 6246], [6246, 6247], [6248, 6252], [6253, 6262], [6263, 6267], [6268, 6279], [6280, 6282], [6283, 6290], [6290, 6291], [6292, 6295], [6296, 6303], [6304, 6307], [6308, 6314], [6315, 6326], [6327, 6330], [6331, 6345], [6346, 6355], [6356, 6358], [6359, 6369], [6370, 6374], [6374, 6375], [6376, 6387], [6388, 6395], [6396, 6399], [6400, 6404], [6405, 6407], [6408, 6409], [6410, 6413], [6414, 6417], [6418, 6425], [6426, 6427], [6428, 6434], [6434, 6435], [6436, 6441], [6442, 6444], [6445, 6449], [6450, 6456], [6457, 6459], [6460, 6474], [6475, 6480], [6481, 6485], [6486, 6487], [6488, 6496], [6497, 6501], [6502, 6504], [6505, 6511], [6512, 6513], [6514, 6521], [6522, 6524], [6525, 6529], [6530, 6538], [6538, 6539], [6540, 6542], [6543, 6550], [6551, 6556], [6557, 6566], [6566, 6567], [6568, 6571], [6572, 6579], [6580, 6586], [6587, 6591], [6592, 6603], [6604, 6609], [6610, 6613], [6614, 6620], [6621, 6628], [6629, 6631], [6632, 6646], [6647, 6649], [6650, 6658], [6659, 6662], [6663, 6670], [6671, 6673], [6674, 6683], [6684, 6688], [6689, 6691], [6692, 6703], [6704, 6707], [6708, 6714], [6714, 6715], [6716, 6719], [6720, 6723], [6724, 6726], [6727, 6735], [6736, 6743], [6744, 6748], [6749, 6763], [6764, 6767], [6768, 6779], [6780, 6785], [6786, 6791], [6792, 6793], [6794, 6797], [6798, 6802], [6802, 6803], [6804, 6806], [6807, 6810], [6811, 6817], [6818, 6832], [6833, 6838], [6839, 6841], [6842, 6847], [6848, 6857], [6857, 6858], [6864, 6870], [6871, 6872], [6872, 6873], [6874, 6881], [6882, 6885], [6886, 6893], [6896, 6899], [6900, 6909], [6910, 6912], [6913, 6914], [6915, 6919], [6920, 6922], [6923, 6926], [6927, 6931], [6932, 6938], [6939, 6944], [6945, 6949], [6950, 6953], [6954, 6959], [6960, 6962], [6963, 6972], [6973, 6977], [6978, 6982], [6983, 6987], [6988, 6992], [6993, 6995], [6996, 7000], [7001, 7007], [7008, 7009], [7009, 7015], [7016, 7020], [7021, 7025], [7026, 7029], [7030, 7034], [7035, 7040], [7041, 7046], [7047, 7049], [7050, 7059], [7060, 7062], [7063, 7068], [7069, 7077], [7078, 7083], [7084, 7087], [7088, 7095], [7096, 7102], [7103, 7110], [7111, 7115], [7116, 7118], [7119, 7122], [7123, 7131], [7132, 7138], [7139, 7141], [7142, 7145], [7146, 7150], [7151, 7160], [7161, 7169], [7169, 7171], [7172, 7181], [7182, 7183], [7184, 7203], [7205, 7214], [7215, 7216], [7217, 7234], [7236, 7245], [7246, 7247], [7248, 7270], [7272, 7281], [7282, 7283], [7284, 7305], [7307, 7316], [7317, 7318], [7319, 7344], [7346, 7355], [7356, 7357], [7358, 7378], [7380, 7389], [7390, 7391], [7392, 7410], [7412, 7421], [7422, 7423], [7424, 7444], [7446, 7455], [7456, 7457], [7458, 7480], [7482, 7491], [7492, 7493], [7494, 7511], [7513, 7522], [7523, 7524], [7525, 7546], [7548, 7557], [7558, 7559], [7560, 7577], [7579, 7588], [7589, 7590], [7591, 7619], [7621, 7630], [7631, 7632], [7633, 7650], [7652, 7661], [7662, 7663], [7664, 7689], [7691, 7700], [7701, 7702], [7703, 7736], [7738, 7747], [7748, 7749], [7750, 7764], [7766, 7775], [7776, 7777], [7778, 7810], [7812, 7821], [7822, 7823], [7824, 7850], [7852, 7861], [7862, 7863], [7864, 7885], [7887, 7896], [7897, 7898], [7899, 7923], [7925, 7934], [7935, 7936], [7937, 7961], [7963, 7972], [7973, 7974], [7975, 7999], [8001, 8010], [8011, 8012], [8013, 8035], [8037, 8046], [8047, 8048], [8049, 8073], [8075, 8084], [8085, 8086], [8087, 8114], [8116, 8125], [8126, 8127], [8128, 8155], [8157, 8166], [8167, 8168], [8169, 8189], [8191, 8200], [8201, 8202], [8203, 8223], [8225, 8234], [8235, 8236], [8237, 8255], [8257, 8266], [8267, 8268], [8269, 8289], [8291, 8300], [8301, 8302], [8303, 8334], [8336, 8345], [8346, 8347], [8348, 8383], [8385, 8394], [8395, 8396], [8397, 8418], [8420, 8429], [8430, 8431], [8432, 8459], [8461, 8470], [8471, 8472], [8473, 8491], [8493, 8502], [8503, 8504], [8505, 8526], [8528, 8537], [8538, 8539], [8540, 8571], [8573, 8582], [8583, 8584], [8585, 8606], [8608, 8617], [8618, 8619], [8620, 8645], [8647, 8655], [8656, 8657], [8658, 8686], [8688, 8697], [8698, 8699], [8700, 8724], [8726, 8735], [8736, 8737], [8738, 8765], [8767, 8776], [8777, 8778], [8779, 8800], [8802, 8811], [8812, 8813], [8814, 8837], [8839, 8847], [8848, 8849], [8850, 8872], [8874, 8883], [8884, 8885], [8886, 8920], [8922, 8931], [8932, 8933], [8934, 8957], [8959, 8969], [8970, 8971], [8972, 8998], [9000, 9009], [9010, 9011], [9012, 9037], [9039, 9049], [9050, 9051], [9052, 9081], [9083, 9092], [9093, 9094], [9095, 9121], [9123, 9132], [9133, 9134], [9135, 9162], [9164, 9173], [9174, 9175], [9176, 9197], [9199, 9208], [9209, 9210], [9211, 9234], [9236, 9245], [9246, 9247], [9248, 9270], [9272, 9281], [9282, 9283], [9284, 9305], [9307, 9317], [9318, 9319], [9320, 9362], [9364, 9373], [9374, 9375], [9376, 9398], [9400, 9409], [9410, 9411], [9412, 9434], [9436, 9445], [9446, 9447], [9448, 9465], [9467, 9476], [9477, 9478], [9479, 9502], [9504, 9513], [9514, 9515], [9516, 9535], [9537, 9546], [9547, 9548], [9549, 9577], [9579, 9589], [9590, 9591], [9592, 9617], [9618, 9620], [9621, 9628], [9629, 9632], [9633, 9636], [9637, 9641], [9641, 9642], [9643, 9646], [9647, 9654], [9655, 9660], [9661, 9667], [9668, 9671], [9672, 9681], [9682, 9684], [9685, 9688], [9689, 9690], [9690, 9703], [9703, 9704], [9705, 9713], [9713, 9714], [9715, 9718], [9719, 9724], [9725, 9733], [9734, 9736], [9737, 9740], [9741, 9749], [9750, 9757], [9758, 9762], [9763, 9768], [9769, 9775], [9776, 9777], [9777, 9779], [9780, 9784], [9785, 9789], [9790, 9793], [9794, 9795], [9796, 9804], [9804, 9805], [9805, 9808], [9808, 9810], [9811, 9816], [9817, 9820], [9821, 9827], [9828, 9836], [9837, 9839], [9840, 9843], [9844, 9850], [9851, 9859], [9860, 9864], [9865, 9871], [9872, 9877], [9878, 9879], [9879, 9884], [9884, 9885], [9886, 9888], [9889, 9893], [9894, 9901], [9901, 9902], [9903, 9905], [9906, 9916], [9916, 9917], [9918, 9921], [9922, 9935], [9936, 9944], [9945, 9950], [9951, 9956], [9957, 9960], [9961, 9969], [9970, 9975], [9975, 9976], [9977, 9982], [9983, 9985], [9986, 9988], [9988, 9989], [9990, 9993], [9994, 10002], [10003, 10006], [10007, 10020], [10021, 10028], [10029, 10033], [10034, 10039], [10040, 10042], [10043, 10048], [10049, 10051], [10052, 10055], [10056, 10062], [10063, 10068], [10069, 10071], [10072, 10078], [10079, 10080], [10080, 10081], [10091, 10097], [10098, 10099], [10099, 10100], [10101, 10110], [10111, 10114], [10115, 10121], [10124, 10127], [10128, 10137], [10138, 10140], [10141, 10144], [10145, 10149], [10150, 10152], [10153, 10162], [10163, 10170], [10171, 10176], [10176, 10177], [10178, 10185], [10185, 10186], [10186, 10189], [10190, 10197], [10197, 10198], [10198, 10201], [10202, 10207], [10207, 10208], [10208, 10211], [10212, 10220], [10220, 10221], [10221, 10224], [10225, 10228], [10228, 10229], [10229, 10232], [10233, 10241], [10241, 10242], [10242, 10245], [10246, 10278], [10278, 10283], [10283, 10284], [10284, 10287], [10288, 10296], [10296, 10297], [10297, 10300], [10301, 10307], [10307, 10308], [10308, 10311], [10312, 10318], [10318, 10319], [10319, 10322], [10323, 10344], [10344, 10349], [10349, 10350], [10350, 10353], [10354, 10361], [10361, 10362], [10362, 10365], [10366, 10373], [10373, 10374], [10374, 10377], [10378, 10386], [10386, 10387], [10387, 10390], [10391, 10396], [10396, 10397], [10397, 10400], [10401, 10406], [10406, 10407], [10407, 10410], [10411, 10418], [10418, 10419], [10419, 10422], [10423, 10431], [10431, 10432], [10432, 10435], [10436, 10444], [10444, 10445], [10445, 10448], [10449, 10452], [10453, 10460], [10461, 10465], [10466, 10469], [10470, 10476], [10477, 10485], [10486, 10490], [10491, 10497], [10498, 10503], [10504, 10506], [10507, 10511], [10512, 10518], [10519, 10521], [10522, 10544], [10544, 10545], [10546, 10551], [10552, 10554], [10555, 10566], [10567, 10570], [10571, 10578], [10579, 10582], [10583, 10589], [10590, 10592], [10593, 10596], [10597, 10604], [10604, 10605], [10606, 10614], [10615, 10616], [10617, 10621], [10622, 10625], [10626, 10630], [10631, 10637], [10638, 10646], [10647, 10651], [10651, 10652], [10653, 10656], [10657, 10666], [10667, 10669], [10670, 10674], [10675, 10678], [10679, 10685], [10686, 10694], [10694, 10695], [10696, 10700], [10701, 10704], [10705, 10710], [10711, 10713], [10714, 10719], [10719, 10720], [10721, 10724], [10725, 10732], [10733, 10740], [10741, 10744], [10745, 10753], [10754, 10761], [10762, 10765], [10766, 10771], [10772, 10774], [10774, 10775], [10782, 10788], [10789, 10791], [10791, 10792], [10793, 10803], [10804, 10807], [10808, 10815], [10816, 10818], [10819, 10821], [10822, 10825], [10828, 10831], [10832, 10836], [10837, 10844], [10845, 10847], [10848, 10854], [10855, 10857], [10858, 10870], [10871, 10874], [10875, 10900], [10901, 10909], [10910, 10913], [10914, 10919], [10920, 10923], [10924, 10928], [10929, 10932], [10933, 10942], [10943, 10946], [10947, 10954], [10955, 10957], [10958, 10960], [10961, 10969], [10970, 10978], [10978, 10979], [10980, 10983], [10984, 10994], [10995, 10999], [11000, 11002], [11003, 11010], [11011, 11018], [11019, 11022], [11023, 11030], [11031, 11034], [11035, 11041], [11042, 11044], [11045, 11049], [11050, 11053], [11054, 11059], [11060, 11061], [11062, 11065], [11066, 11071], [11072, 11073], [11074, 11082], [11083, 11086], [11087, 11096], [11096, 11097], [11103, 11109], [11110, 11112], [11112, 11113], [11114, 11120], [11121, 11135], [11136, 11138], [11139, 11153], [11156, 11160], [11161, 11163], [11164, 11177], [11178, 11180], [11181, 11185], [11186, 11193], [11193, 11194], [11195, 11197], [11198, 11201], [11202, 11206], [11207, 11214], [11215, 11219], [11220, 11223], [11224, 11232], [11232, 11233], [11234, 11238], [11239, 11248], [11248, 11249], [11250, 11253], [11254, 11261], [11262, 11269], [11270, 11273], [11274, 11280], [11281, 11290], [11291, 11297], [11298, 11299], [11299, 11304], [11304, 11305], [11306, 11308], [11309, 11313], [11314, 11317], [11318, 11326], [11327, 11329], [11330, 11333], [11334, 11340], [11341, 11344], [11345, 11354], [11355, 11358], [11359, 11370], [11371, 11373], [11374, 11377], [11378, 11386], [11387, 11393], [11394, 11398], [11399, 11402], [11403, 11446], [11447, 11455], [11456, 11459], [11459, 11460], [11461, 11466], [11467, 11469], [11470, 11474], [11475, 11477], [11478, 11479], [11480, 11486], [11487, 11497], [11498, 11500], [11501, 11509], [11510, 11513], [11514, 11520], [11521, 11525], [11526, 11529], [11530, 11533], [11534, 11540], [11541, 11544], [11545, 11550], [11551, 11554], [11555, 11564], [11564, 11565], [11571, 11577], [11578, 11580], [11580, 11581], [11582, 11594], [11595, 11596], [11597, 11603], [11604, 11610], [11611, 11621], [11622, 11625], [11626, 11634], [11635, 11636], [11637, 11642], [11645, 11647], [11648, 11652], [11653, 11660], [11661, 11664], [11665, 11684], [11685, 11693], [11694, 11697], [11698, 11701], [11702, 11711], [11712, 11714], [11715, 11719], [11720, 11723], [11724, 11730], [11730, 11731], [11732, 11736], [11737, 11740], [11741, 11743], [11743, 11744], [11745, 11747], [11748, 11753], [11754, 11756], [11757, 11763], [11764, 11766], [11766, 11767], [11773, 11779], [11780, 11782], [11782, 11783], [11784, 11794], [11795, 11813], [11816, 11818], [11819, 11823], [11824, 11832], [11833, 11844], [11845, 11850], [11851, 11854], [11855, 11856], [11856, 11859], [11860, 11869], [11870, 11875], [11876, 11878], [11879, 11882], [11883, 11891], [11892, 11898], [11899, 11902], [11903, 11908], [11909, 11911], [11912, 11914], [11915, 11918], [11919, 11922], [11923, 11929], [11930, 11932], [11933, 11938], [11939, 11941], [11942, 11948], [11949, 11951], [11951, 11952], [11958, 11964], [11965, 11967], [11967, 11968], [11969, 11981], [11982, 11987], [11988, 11993], [11994, 12001], [12005, 12011], [12012, 12014], [12014, 12015], [12016, 12018], [12019, 12026], [12027, 12029], [12030, 12033], [12034, 12039], [12040, 12045], [12046, 12053], [12056, 12061], [12062, 12065], [12066, 12069], [12070, 12073], [12074, 12081], [12082, 12086], [12087, 12091], [12092, 12096], [12097, 12099], [12100, 12104], [12105, 12111], [12112, 12117], [12117, 12118], [12119, 12122], [12123, 12128], [12129, 12132], [12133, 12137], [12137, 12140], [12140, 12142], [12142, 12145], [12145, 12148], [12148, 12151], [12151, 12153], [12153, 12154], [12155, 12157], [12158, 12162], [12163, 12165], [12166, 12170], [12171, 12178], [12179, 12188], [12189, 12194], [12195, 12198], [12199, 12207], [12208, 12210], [12211, 12218], [12219, 12227], [12228, 12231], [12232, 12236], [12237, 12245], [12245, 12246], [12247, 12249], [12250, 12258], [12259, 12262], [12263, 12267], [12268, 12273], [12274, 12281], [12281, 12282], [12283, 12286], [12287, 12294], [12295, 12300], [12301, 12306], [12307, 12308], [12309, 12316], [12317, 12319], [12320, 12323], [12324, 12343], [12344, 12352], [12353, 12360], [12361, 12366], [12366, 12369], [12369, 12373], [12373, 12375], [12375, 12384], [12384, 12386], [12386, 12389], [12389, 12390], [12390, 12393], [12393, 12394], [12394, 12399], [12399, 12401], [12401, 12408], [12409, 12411], [12412, 12418], [12419, 12422], [12423, 12432], [12432, 12433], [12434, 12438], [12439, 12447], [12448, 12454], [12455, 12458], [12459, 12467], [12468, 12470], [12471, 12483], [12484, 12490], [12491, 12494], [12495, 12505], [12506, 12514], [12515, 12517], [12518, 12523], [12524, 12528], [12529, 12534], [12534, 12535], [12541, 12547], [12548, 12550], [12550, 12551], [12552, 12559], [12560, 12571], [12572, 12579], [12580, 12584], [12585, 12593], [12596, 12600], [12601, 12605], [12606, 12608], [12609, 12613], [12614, 12618], [12618, 12619], [12620, 12623], [12624, 12628], [12629, 12634], [12635, 12642], [12643, 12646], [12647, 12654], [12654, 12655], [12655, 12659], [12659, 12660], [12661, 12668], [12668, 12669], [12670, 12674], [12675, 12679], [12680, 12683], [12684, 12689], [12690, 12695], [12696, 12701], [12702, 12706], [12707, 12714], [12715, 12723], [12724, 12729], [12730, 12736], [12737, 12740], [12741, 12754], [12754, 12755], [12757, 12761], [12762, 12771], [12772, 12775], [12776, 12785], [12785, 12786], [12787, 12790], [12791, 12798], [12799, 12803], [12804, 12809], [12810, 12811], [12812, 12819], [12820, 12822], [12823, 12831], [12832, 12835], [12836, 12840], [12841, 12846], [12847, 12853], [12854, 12858], [12859, 12860], [12860, 12865], [12866, 12868], [12869, 12875], [12876, 12878], [12878, 12879], [12885, 12891], [12892, 12894], [12894, 12895], [12896, 12903], [12904, 12912], [12913, 12920], [12921, 12925], [12926, 12934], [12938, 12944], [12945, 12947], [12947, 12948], [12949, 12952], [12953, 12957], [12958, 12969], [12970, 12973], [12974, 12984], [12985, 12988], [12989, 12993], [12994, 12999], [13000, 13007], [13008, 13015], [13016, 13019], [13020, 13028], [13029, 13034], [13037, 13039], [13040, 13043], [13044, 13048], [13048, 13050], [13051, 13059], [13059, 13060], [13061, 13074], [13074, 13075], [13076, 13079], [13080, 13093], [13094, 13097], [13098, 13108], [13108, 13109], [13110, 13113], [13114, 13121], [13122, 13127], [13128, 13131], [13132, 13139], [13140, 13141], [13141, 13144], [13145, 13151], [13151, 13152], [13153, 13155], [13156, 13159], [13160, 13165], [13166, 13172], [13172, 13173], [13179, 13185], [13186, 13188], [13188, 13189], [13190, 13200], [13201, 13208], [13209, 13218], [13219, 13224], [13225, 13232], [13235, 13237], [13238, 13248], [13249, 13252], [13253, 13260], [13260, 13261], [13262, 13265], [13266, 13273], [13274, 13278], [13279, 13288], [13289, 13296], [13296, 13298], [13299, 13310], [13311, 13315], [13316, 13319], [13320, 13331], [13332, 13341], [13342, 13344], [13344, 13357], [13358, 13359], [13360, 13383], [13383, 13386], [13387, 13390], [13391, 13395], [13396, 13403], [13404, 13406], [13407, 13413], [13414, 13416], [13417, 13429], [13430, 13433], [13434, 13437], [13438, 13445], [13446, 13455], [13455, 13456], [13457, 13469], [13469, 13470], [13471, 13474], [13475, 13488], [13489, 13496], [13496, 13497], [13497, 13501], [13502, 13503], [13503, 13513], [13513, 13514], [13514, 13517], [13517, 13519], [13525, 13531], [13532, 13534], [13534, 13535], [13536, 13540], [13541, 13552], [13553, 13556], [13557, 13568], [13568, 13569], [13570, 13583], [13583, 13584], [13585, 13598], [13598, 13599], [13600, 13603], [13604, 13612], [13613, 13616], [13617, 13627], [13628, 13635], [13639, 13645], [13646, 13648], [13648, 13649], [13650, 13657], [13658, 13671], [13672, 13675], [13676, 13689], [13692, 13698], [13699, 13708], [13709, 13712], [13713, 13720], [13720, 13721], [13722, 13725], [13726, 13733], [13734, 13742], [13743, 13745], [13746, 13753], [13754, 13757], [13758, 13768], [13769, 13771], [13772, 13781], [13782, 13785], [13786, 13799], [13800, 13808], [13808, 13809], [13810, 13815], [13816, 13818], [13819, 13823], [13824, 13826], [13827, 13829], [13830, 13841], [13842, 13849], [13849, 13850], [13851, 13855], [13856, 13865], [13865, 13866], [13867, 13874], [13875, 13880], [13881, 13888], [13889, 13892], [13893, 13900], [13901, 13905], [13906, 13907], [13907, 13910], [13911, 13912], [13912, 13917], [13918, 13921], [13922, 13930], [13931, 13933], [13934, 13938], [13939, 13941], [13942, 13949], [13950, 13954], [13954, 13956], [13957, 13963], [13964, 13965], [13966, 13970], [13971, 13973], [13974, 13980], [13981, 13985], [13986, 13993], [13994, 14001], [14002, 14003], [14003, 14006], [14006, 14007], [14008, 14013], [14014, 14018], [14019, 14022], [14023, 14029], [14030, 14039], [14040, 14044], [14045, 14046], [14046, 14049], [14049, 14050], [14051, 14059], [14060, 14067], [14068, 14070], [14071, 14074], [14075, 14084], [14084, 14085], [14091, 14097], [14098, 14100], [14100, 14101], [14102, 14112], [14113, 14116], [14117, 14123], [14124, 14133], [14134, 14139], [14140, 14147], [14150, 14153], [14154, 14161], [14162, 14170], [14171, 14179], [14180, 14190], [14191, 14194], [14195, 14198], [14199, 14209], [14210, 14215], [14216, 14223], [14223, 14224], [14225, 14230], [14231, 14239], [14240, 14247], [14248, 14251], [14252, 14261], [14262, 14268], [14269, 14271], [14272, 14282], [14283, 14287], [14287, 14296], [14296, 14297], [14298, 14305], [14305, 14306], [14307, 14310], [14311, 14318], [14319, 14327], [14328, 14330], [14331, 14337], [14338, 14346], [14347, 14353], [14354, 14355], [14355, 14360], [14360, 14361], [14362, 14366], [14367, 14377], [14377, 14378], [14378, 14381], [14382, 14385], [14386, 14394], [14394, 14395], [14395, 14398], [14399, 14401], [14402, 14407], [14408, 14410], [14411, 14417], [14418, 14420], [14420, 14421], [14428, 14434], [14435, 14437], [14437, 14438], [14439, 14446], [14447, 14450], [14451, 14456], [14457, 14458], [14459, 14466], [14467, 14474], [14475, 14483], [14483, 14484], [14484, 14487], [14490, 14495], [14496, 14497], [14497, 14498], [14499, 14520], [14525, 14528], [14530, 14534], [14534, 14535], [14537, 14541], [14541, 14544], [14546, 14550], [14551, 14555], [14557, 14589], [14591, 14631], [14633, 14697], [14699, 14705], [14706, 14708], [14709, 14710], [14710, 14716], [14717, 14722], [14722, 14723], [14729, 14732], [14733, 14739], [14740, 14745], [14746, 14753], [14753, 14754], [14755, 14764], [14764, 14765], [14765, 14768], [14768, 14769], [14770, 14772], [14773, 14774], [14775, 14787], [14788, 14795], [14796, 14797], [14797, 14800], [14800, 14801], [14802, 14809], [14810, 14812], [14813, 14814], [14814, 14816], [14817, 14821], [14822, 14831], [14832, 14835], [14836, 14842], [14843, 14852], [14853, 14854], [14854, 14867], [14868, 14871], [14872, 14877], [14877, 14879], [14880, 14883], [14884, 14893], [14894, 14898], [14899, 14901], [14902, 14910], [14911, 14913], [14914, 14917], [14918, 14923], [14924, 14930], [14931, 14939], [14939, 14940], [14941, 14946], [14947, 14949], [14950, 14959], [14960, 14962], [14963, 14966], [14967, 14972], [14973, 14978], [14979, 14986], [14986, 14987], [14988, 14991], [14992, 14999], [15000, 15009], [15010, 15012], [15013, 15017], [15018, 15025], [15026, 15028], [15029, 15031], [15032, 15039], [15040, 15049], [15050, 15058], [15059, 15061], [15062, 15071], [15072, 15073], [15074, 15083], [15084, 15090], [15091, 15095], [15096, 15102], [15103, 15104], [15104, 15110], [15111, 15115], [15116, 15119], [15120, 15130], [15131, 15138], [15139, 15141], [15142, 15147], [15148, 15154], [15154, 15155], [15156, 15159], [15160, 15170], [15171, 15172], [15173, 15183], [15184, 15189], [15190, 15196], [15197, 15198], [15198, 15202], [15202, 15211], [15211, 15212], [15213, 15216], [15217, 15221], [15222, 15233], [15234, 15237], [15238, 15247], [15248, 15251], [15252, 15263], [15264, 15271], [15271, 15272], [15273, 15279], [15280, 15284], [15285, 15289], [15290, 15293], [15294, 15299], [15299, 15300], [15301, 15307], [15307, 15308], [15309, 15312], [15313, 15324], [15325, 15333], [15334, 15337], [15338, 15344], [15345, 15348], [15349, 15357], [15358, 15364], [15364, 15366], [15367, 15378], [15379, 15381], [15382, 15385], [15386, 15391], [15392, 15395], [15396, 15399], [15400, 15402], [15403, 15405], [15406, 15414], [15415, 15418], [15419, 15426], [15427, 15429], [15430, 15435], [15436, 15443], [15444, 15451], [15452, 15459], [15459, 15460], [15461, 15469], [15470, 15473], [15474, 15483], [15484, 15486], [15487, 15492], [15493, 15496], [15497, 15505], [15506, 15512], [15512, 15514], [15515, 15522], [15523, 15532], [15533, 15538], [15538, 15539], [15540, 15544], [15545, 15554], [15554, 15555], [15556, 15559], [15560, 15567], [15568, 15575], [15576, 15579], [15580, 15585], [15586, 15588], [15589, 15593], [15594, 15597], [15598, 15606], [15607, 15609], [15610, 15613], [15614, 15620], [15621, 15624], [15625, 15634], [15635, 15638], [15639, 15650], [15651, 15653], [15654, 15657], [15658, 15666], [15667, 15673], [15674, 15678], [15679, 15682], [15683, 15684], [15684, 15727], [15727, 15728], [15729, 15737], [15738, 15741], [15741, 15742], [15748, 15754], [15755, 15757], [15757, 15758], [15759, 15771], [15772, 15773], [15774, 15780], [15781, 15787], [15788, 15798], [15799, 15802], [15803, 15811], [15812, 15813], [15814, 15819], [15822, 15826], [15826, 15827], [15828, 15831], [15832, 15839], [15840, 15844], [15845, 15854], [15855, 15857], [15858, 15860], [15861, 15863], [15864, 15871], [15872, 15874], [15875, 15877], [15878, 15885], [15886, 15890], [15891, 15904], [15905, 15915], [15916, 15918], [15919, 15925], [15926, 15928], [15929, 15930], [15931, 15938], [15939, 15943], [15944, 15949], [15950, 15953], [15954, 15973], [15974, 15977], [15977, 15978], [15979, 15981], [15982, 15985], [15986, 15993], [15994, 15999], [16000, 16002], [16003, 16009], [16010, 16018], [16019, 16029], [16029, 16030], [16031, 16033], [16034, 16038], [16039, 16045], [16046, 16049], [16050, 16061], [16062, 16064], [16065, 16072], [16073, 16081], [16082, 16085], [16086, 16093], [16094, 16096], [16097, 16105], [16106, 16109], [16110, 16117], [16118, 16121], [16122, 16126], [16127, 16132], [16133, 16135], [16136, 16139], [16140, 16146], [16146, 16147], [16153, 16159], [16160, 16162], [16162, 16163], [16164, 16172], [16173, 16176], [16177, 16184], [16185, 16195], [16198, 16200], [16201, 16204], [16205, 16212], [16213, 16225], [16226, 16233], [16234, 16242], [16243, 16253], [16253, 16254], [16255, 16257], [16258, 16266], [16267, 16269], [16270, 16274], [16275, 16278], [16279, 16284], [16285, 16290], [16291, 16293], [16294, 16300], [16301, 16303], [16303, 16304], [16311, 16317], [16318, 16320], [16320, 16321], [16322, 16327], [16328, 16329], [16330, 16338], [16339, 16345], [16346, 16351], [16354, 16358], [16360, 16363], [16365, 16369], [16369, 16370], [16372, 16376], [16376, 16379], [16381, 16387], [16387, 16388], [16388, 16391], [16392, 16393], [16393, 16397], [16397, 16406], [16406, 16407], [16410, 16420], [16421, 16426], [16427, 16433], [16433, 16434], [16435, 16439], [16440, 16443], [16444, 16450], [16451, 16463], [16465, 16497], [16499, 16539], [16541, 16605], [16607, 16613], [16613, 16614], [16614, 16617], [16618, 16627], [16628, 16635], [16636, 16642], [16643, 16646], [16647, 16652], [16653, 16662], [16663, 16665], [16666, 16675], [16676, 16684], [16685, 16686], [16686, 16693], [16693, 16694], [16694, 16697], [16697, 16698], [16700, 16732], [16734, 16774], [16776, 16840], [16846, 16849], [16850, 16857], [16858, 16862], [16863, 16865], [16866, 16877], [16878, 16885], [16886, 16892], [16893, 16901], [16902, 16904], [16905, 16913], [16914, 16917], [16918, 16928], [16928, 16929], [16929, 16940], [16941, 16948], [16949, 16951], [16952, 16958], [16959, 16961], [16962, 16972], [16973, 16976], [16977, 16984], [16984, 16985], [16985, 16988], [16989, 16994], [16995, 17001], [17001, 17002], [17003, 17010], [17011, 17013], [17014, 17018], [17019, 17022], [17023, 17033], [17034, 17038], [17039, 17048], [17049, 17051], [17052, 17059], [17060, 17062], [17063, 17070], [17071, 17075], [17076, 17078], [17079, 17086], [17087, 17089], [17090, 17097], [17098, 17105], [17105, 17106], [17107, 17110], [17111, 17120], [17121, 17133], [17133, 17135], [17135, 17139], [17139, 17141], [17142, 17145], [17146, 17154], [17154, 17156], [17156, 17165], [17165, 17167], [17168, 17171], [17172, 17176], [17177, 17188], [17189, 17192], [17193, 17202], [17203, 17207], [17208, 17212], [17212, 17213], [17214, 17217], [17218, 17227], [17228, 17235], [17236, 17248], [17249, 17252], [17253, 17258], [17259, 17266], [17267, 17274], [17275, 17277], [17278, 17283], [17284, 17291], [17292, 17295], [17296, 17308], [17308, 17309], [17317, 17323], [17324, 17326], [17326, 17327], [17328, 17333], [17334, 17341], [17342, 17345], [17346, 17353], [17354, 17357], [17358, 17364], [17365, 17368], [17369, 17378], [17379, 17388], [17389, 17395], [17398, 17401], [17402, 17409], [17410, 17414], [17415, 17426], [17427, 17438], [17439, 17441], [17442, 17445], [17446, 17454], [17455, 17461], [17462, 17464], [17465, 17473], [17474, 17483], [17484, 17489], [17489, 17490], [17498, 17504], [17505, 17507], [17507, 17508], [17509, 17516], [17517, 17528], [17529, 17531], [17532, 17540], [17541, 17544], [17545, 17554], [17555, 17560], [17561, 17562], [17562, 17567], [17568, 17571], [17572, 17577], [17578, 17581], [17582, 17583], [17584, 17590], [17591, 17598], [17598, 17599], [17602, 17609], [17609, 17610], [17611, 17614], [17615, 17636], [17637, 17646], [17647, 17650], [17651, 17659], [17660, 17663], [17664, 17674], [17675, 17682], [17683, 17685], [17686, 17689], [17690, 17698], [17699, 17705], [17705, 17706], [17707, 17709], [17710, 17717], [17718, 17722], [17723, 17727], [17727, 17728], [17729, 17731], [17732, 17739], [17740, 17747], [17748, 17758], [17759, 17761], [17762, 17767], [17768, 17772], [17773, 17775], [17776, 17779], [17780, 17785], [17786, 17791], [17792, 17793], [17794, 17797], [17798, 17802], [17803, 17813], [17813, 17814], [17815, 17817], [17818, 17822], [17823, 17827], [17827, 17828], [17829, 17831], [17832, 17836], [17837, 17840], [17841, 17848], [17849, 17851], [17852, 17861], [17862, 17863], [17864, 17865], [17865, 17868], [17869, 17877], [17878, 17882], [17883, 17884], [17884, 17886], [17887, 17889], [17890, 17896], [17897, 17902], [17903, 17906], [17907, 17910], [17911, 17912], [17912, 17918], [17919, 17927], [17928, 17935], [17935, 17936], [17937, 17944], [17945, 17954], [17954, 17955], [17962, 17968], [17969, 17971], [17971, 17972], [17973, 17976], [17977, 17982], [17983, 17984], [17985, 17986], [17986, 17989], [17990, 17996], [17997, 17999], [18000, 18008], [18009, 18012], [18013, 18016], [18017, 18024], [18027, 18032], [18033, 18036], [18036, 18037], [18037, 18044], [18045, 18051], [18052, 18060], [18065, 18069], [18071, 18074], [18076, 18080], [18080, 18081], [18083, 18087], [18087, 18090], [18092, 18098], [18098, 18099], [18099, 18102], [18104, 18136], [18138, 18178], [18180, 18244], [18250, 18253], [18254, 18260], [18260, 18262], [18263, 18267], [18268, 18275], [18276, 18278], [18279, 18281], [18282, 18287], [18288, 18291], [18292, 18301], [18302, 18307], [18308, 18310], [18311, 18314], [18315, 18324], [18325, 18333], [18334, 18335], [18335, 18342], [18342, 18343], [18343, 18346], [18346, 18347], [18347, 18351], [18352, 18360], [18361, 18367], [18368, 18370], [18371, 18375], [18376, 18382], [18383, 18385], [18386, 18395], [18396, 18405], [18405, 18406], [18407, 18410], [18411, 18420], [18421, 18423], [18424, 18427], [18428, 18437], [18438, 18443], [18444, 18446], [18447, 18456], [18457, 18464], [18465, 18468], [18469, 18476], [18477, 18479], [18480, 18489], [18490, 18496], [18497, 18506], [18507, 18509], [18510, 18513], [18514, 18520], [18521, 18524], [18525, 18528], [18529, 18535], [18535, 18536], [18537, 18545], [18546, 18555], [18556, 18558], [18559, 18566], [18567, 18578], [18579, 18582], [18583, 18590], [18590, 18591], [18598, 18604], [18605, 18607], [18607, 18608], [18609, 18618], [18619, 18627], [18628, 18633], [18634, 18643], [18644, 18656], [18657, 18663], [18664, 18667], [18668, 18673], [18674, 18683], [18684, 18690], [18691, 18697], [18700, 18703], [18704, 18708], [18709, 18717], [18718, 18720], [18721, 18727], [18728, 18730], [18731, 18742], [18743, 18746], [18747, 18750], [18751, 18758], [18759, 18767], [18768, 18773], [18774, 18784], [18784, 18785], [18791, 18797], [18798, 18800], [18800, 18801], [18802, 18811], [18812, 18817], [18818, 18826], [18830, 18836], [18837, 18839], [18839, 18840], [18841, 18848], [18849, 18851], [18852, 18855], [18856, 18866], [18867, 18872], [18873, 18879], [18880, 18886], [18895, 18901], [18902, 18904], [18904, 18905], [18906, 18913], [18914, 18916], [18917, 18920], [18921, 18932], [18933, 18935], [18936, 18939], [18940, 18950], [18951, 18957], [18958, 18959], [18959, 18962], [18962, 18963], [18964, 18967], [18968, 18974], [18975, 18981], [18982, 18983], [18983, 18989], [18989, 18990], [19003, 19008], [19009, 19010], [19010, 19011], [19012, 19033], [19034, 19037], [19038, 19047], [19048, 19053], [19054, 19059], [19060, 19063], [19064, 19071], [19072, 19074], [19075, 19081], [19081, 19082], [19082, 19085], [19085, 19086], [19086, 19089], [19089, 19090], [19090, 19093], [19093, 19094], [19099, 19102], [19104, 19108], [19108, 19109], [19111, 19115], [19115, 19118], [19120, 19124], [19125, 19129], [19131, 19163], [19165, 19205], [19207, 19271], [19273, 19278], [19279, 19281], [19282, 19283], [19283, 19288], [19289, 19294], [19294, 19295], [19301, 19322], [19323, 19325], [19326, 19327], [19328, 19339], [19340, 19350], [19351, 19358], [19359, 19361], [19362, 19364], [19364, 19365], [19366, 19368], [19369, 19371], [19372, 19383], [19384, 19387], [19388, 19399], [19399, 19400], [19401, 19414], [19414, 19415], [19416, 19419], [19420, 19429], [19430, 19433], [19434, 19439], [19440, 19447], [19448, 19455], [19456, 19458], [19459, 19461], [19462, 19470], [19471, 19477], [19477, 19478], [19479, 19482], [19483, 19490], [19491, 19495], [19496, 19503], [19504, 19512], [19513, 19517], [19518, 19519], [19520, 19528], [19529, 19536], [19536, 19537], [19538, 19544], [19545, 19550], [19551, 19559], [19560, 19563], [19564, 19568], [19569, 19576], [19577, 19585], [19585, 19586], [19587, 19591], [19593, 19598], [19600, 19611], [19612, 19616], [19617, 19623], [19623, 19624], [19625, 19628], [19629, 19636], [19637, 19642], [19643, 19644], [19645, 19646], [19646, 19649], [19650, 19657], [19657, 19658], [19659, 19666], [19667, 19669], [19670, 19674], [19675, 19678], [19679, 19684], [19685, 19691], [19692, 19695], [19696, 19699], [19700, 19708], [19709, 19716], [19716, 19717], [19718, 19728], [19729, 19732], [19733, 19743], [19744, 19753], [19753, 19754], [19760, 19766], [19767, 19769], [19769, 19770], [19771, 19776], [19777, 19778], [19779, 19786], [19787, 19801], [19804, 19806], [19807, 19811], [19812, 19817], [19818, 19819], [19820, 19823], [19824, 19831], [19832, 19835], [19836, 19841], [19841, 19844], [19844, 19848], [19848, 19850], [19850, 19859], [19859, 19861], [19861, 19864], [19864, 19865], [19865, 19868], [19868, 19869], [19869, 19874], [19874, 19876], [19876, 19886], [19887, 19889], [19890, 19898], [19899, 19902], [19903, 19910], [19910, 19911], [19912, 19916], [19917, 19926], [19927, 19930], [19931, 19942], [19943, 19950], [19950, 19951], [19952, 19955], [19956, 19963], [19964, 19973], [19974, 19977], [19978, 19982], [19983, 19987], [19988, 19990], [19991, 19994], [19995, 20000], [20001, 20006], [20007, 20014], [20015, 20016], [20016, 20023], [20023, 20024], [20024, 20028], [20028, 20030], [20031, 20043], [20044, 20046], [20047, 20052], [20053, 20056], [20057, 20067], [20068, 20071], [20071, 20072], [20073, 20076], [20077, 20085], [20086, 20088], [20088, 20089], [20095, 20101], [20102, 20104], [20104, 20105], [20106, 20111], [20112, 20113], [20114, 20121], [20122, 20130], [20135, 20141], [20142, 20144], [20144, 20145], [20146, 20148], [20149, 20156], [20157, 20159], [20160, 20167], [20168, 20181], [20182, 20189], [20190, 20211], [20212, 20215], [20216, 20219], [20220, 20230], [20231, 20239], [20240, 20247], [20247, 20248], [20251, 20256], [20257, 20258], [20258, 20259], [20260, 20266], [20267, 20274], [20279, 20282], [20284, 20288], [20288, 20289], [20291, 20295], [20295, 20298], [20300, 20304], [20305, 20309], [20311, 20343], [20345, 20385], [20387, 20451], [20453, 20460], [20461, 20463], [20464, 20465], [20465, 20472], [20473, 20478], [20478, 20479], [20485, 20488], [20489, 20494], [20495, 20500], [20501, 20503], [20504, 20507], [20508, 20514], [20515, 20522], [20523, 20528], [20528, 20529], [20530, 20532], [20533, 20535], [20536, 20546], [20547, 20556], [20556, 20557], [20558, 20560], [20561, 20562], [20563, 20571], [20572, 20579], [20580, 20582], [20583, 20585], [20586, 20597], [20598, 20609], [20610, 20617], [20618, 20625], [20626, 20632], [20633, 20643], [20643, 20644], [20645, 20649], [20650, 20659], [20659, 20660], [20661, 20664], [20665, 20672], [20673, 20684], [20685, 20698], [20699, 20702], [20703, 20707], [20708, 20710], [20711, 20714], [20715, 20722], [20723, 20732], [20732, 20733], [20739, 20745], [20746, 20748], [20748, 20749], [20750, 20756], [20757, 20764], [20765, 20779], [20782, 20785], [20786, 20793], [20794, 20807], [20808, 20810], [20811, 20813], [20814, 20821], [20821, 20822], [20823, 20829], [20830, 20836], [20837, 20843], [20844, 20851], [20852, 20853], [20854, 20855], [20855, 20862], [20862, 20864], [20866, 20872], [20873, 20879], [20880, 20886], [20887, 20896], [20897, 20898], [20899, 20900], [20900, 20901], [20901, 20903], [20905, 20911], [20912, 20918], [20919, 20925], [20926, 20931], [20932, 20933], [20934, 20935], [20935, 20943], [20943, 20945], [20945, 20948], [20948, 20950], [20950, 20953], [20953, 20955], [20955, 20958], [20958, 20960], [20960, 20971], [20971, 20973], [20975, 20981], [20982, 20988], [20989, 20995], [20996, 21008], [21009, 21010], [21011, 21012], [21012, 21013], [21013, 21015], [21017, 21023], [21024, 21030], [21031, 21037], [21038, 21045], [21046, 21047], [21048, 21049], [21049, 21050], [21050, 21052], [21054, 21060], [21061, 21067], [21068, 21074], [21075, 21085], [21086, 21087], [21088, 21089], [21089, 21090], [21090, 21092], [21094, 21100], [21101, 21107], [21108, 21114], [21115, 21131], [21132, 21133], [21134, 21135], [21135, 21136], [21136, 21138], [21140, 21146], [21147, 21153], [21154, 21160], [21161, 21176], [21177, 21178], [21179, 21180], [21180, 21181], [21181, 21183], [21185, 21191], [21192, 21198], [21199, 21205], [21206, 21219], [21220, 21221], [21222, 21223], [21223, 21224], [21224, 21226], [21228, 21234], [21235, 21241], [21242, 21248], [21249, 21262], [21263, 21264], [21265, 21266], [21266, 21267], [21267, 21269], [21271, 21277], [21278, 21284], [21285, 21291], [21292, 21305], [21306, 21307], [21308, 21309], [21309, 21319], [21319, 21320], [21320, 21338], [21338, 21340], [21340, 21355], [21355, 21357], [21359, 21365], [21366, 21372], [21373, 21379], [21380, 21394], [21395, 21396], [21397, 21398], [21398, 21408], [21408, 21410], [21411, 21413], [21414, 21418], [21419, 21425], [21426, 21428], [21429, 21436], [21437, 21443], [21444, 21455], [21456, 21459], [21460, 21466], [21467, 21471], [21472, 21483], [21483, 21484], [21485, 21491], [21491, 21492], [21493, 21496], [21497, 21506], [21507, 21511], [21512, 21519], [21520, 21523], [21524, 21532], [21533, 21536], [21537, 21549], [21550, 21554], [21555, 21557], [21558, 21564], [21565, 21571], [21571, 21572], [21573, 21582], [21583, 21587], [21587, 21588], [21589, 21598], [21599, 21606], [21606, 21607], [21608, 21616], [21616, 21617], [21618, 21624], [21624, 21625], [21626, 21633], [21634, 21637], [21638, 21644], [21644, 21645], [21646, 21648], [21649, 21657], [21658, 21669], [21670, 21673], [21674, 21682], [21683, 21692], [21693, 21700], [21701, 21704], [21705, 21708], [21709, 21723], [21723, 21724], [21731, 21737], [21738, 21740], [21740, 21741], [21742, 21748], [21749, 21756], [21757, 21769], [21770, 21779], [21780, 21784], [21787, 21790], [21791, 21800], [21801, 21812], [21813, 21815], [21816, 21820], [21821, 21831], [21832, 21835], [21836, 21847], [21848, 21850], [21851, 21854], [21855, 21863], [21864, 21867], [21868, 21876], [21876, 21877], [21884, 21890], [21891, 21893], [21893, 21894], [21895, 21897], [21898, 21905], [21906, 21908], [21909, 21913], [21914, 21925], [21926, 21930], [21931, 21934], [21935, 21943], [21944, 21950], [21954, 21960], [21961, 21963], [21963, 21964], [21965, 21969], [21970, 21976], [21977, 21982], [21985, 21991], [21992, 21994], [21995, 22006], [22007, 22008], [22009, 22015], [22016, 22018], [22019, 22022], [22023, 22030], [22031, 22038], [22039, 22048], [22049, 22051], [22052, 22055], [22056, 22063], [22063, 22064], [22070, 22076], [22077, 22079], [22079, 22080], [22081, 22088], [22089, 22096], [22097, 22099], [22100, 22104], [22105, 22111], [22112, 22114], [22115, 22118], [22119, 22127], [22127, 22129], [22130, 22138], [22139, 22146], [22150, 22156], [22157, 22159], [22159, 22160], [22161, 22167], [22168, 22175], [22176, 22188], [22191, 22193], [22193, 22195], [22196, 22201], [22202, 22212], [22213, 22217], [22218, 22222], [22223, 22230], [22230, 22231], [22232, 22236], [22237, 22239], [22240, 22243], [22244, 22251], [22252, 22257], [22258, 22261], [22262, 22273], [22274, 22277], [22278, 22286], [22287, 22291], [22291, 22292], [22293, 22296], [22297, 22306], [22307, 22311], [22312, 22315], [22316, 22319], [22320, 22329], [22330, 22332], [22333, 22345], [22346, 22354], [22355, 22356], [22356, 22359], [22359, 22360], [22361, 22365], [22365, 22366], [22372, 22378], [22379, 22381], [22381, 22382], [22383, 22389], [22390, 22400], [22401, 22406], [22409, 22413], [22414, 22416], [22417, 22426], [22427, 22434], [22434, 22435], [22436, 22450], [22451, 22456], [22458, 22477], [22478, 22483], [22485, 22492], [22492, 22493], [22493, 22496], [22496, 22497], [22497, 22509], [22510, 22515], [22517, 22523], [22524, 22533], [22535, 22563], [22564, 22569], [22571, 22584], [22585, 22590], [22592, 22608], [22609, 22613], [22615, 22617], [22617, 22633], [22634, 22638], [22640, 22642], [22642, 22653], [22654, 22658], [22660, 22672], [22673, 22677], [22679, 22690], [22691, 22695], [22697, 22705], [22706, 22718], [22719, 22723], [22725, 22729], [22730, 22737], [22738, 22750], [22751, 22755], [22757, 22776], [22777, 22781], [22783, 22789], [22790, 22834], [22836, 22861], [22862, 22866], [22868, 22886], [22887, 22891], [22893, 22904], [22905, 22909], [22911, 22914], [22915, 22924], [22925, 22929], [22931, 22943], [22944, 22948], [22950, 22968], [22969, 22973], [22975, 22990], [22991, 22995], [22997, 23007], [23008, 23012], [23014, 23039], [23040, 23044], [23046, 23057], [23058, 23062], [23064, 23087], [23088, 23092], [23094, 23107], [23108, 23112], [23114, 23126], [23127, 23131], [23133, 23152], [23153, 23157], [23159, 23191], [23192, 23196], [23198, 23217], [23218, 23222], [23224, 23228], [23228, 23231], [23231, 23237], [23237, 23238], [23238, 23241], [23241, 23242], [23242, 23246], [23246, 23248], [23248, 23262], [23264, 23269], [23269, 23272], [23272, 23275], [23275, 23276], [23276, 23284], [23284, 23285], [23285, 23288], [23288, 23289], [23289, 23300], [23300, 23301], [23301, 23305], [23305, 23306], [23306, 23309], [23309, 23311], [23311, 23318], [23320, 23325], [23325, 23328], [23328, 23338], [23338, 23339], [23339, 23342], [23342, 23343], [23343, 23346], [23346, 23347], [23347, 23349], [23349, 23350], [23350, 23355], [23355, 23356], [23356, 23359], [23360, 23370], [23371, 23378], [23379, 23381], [23382, 23390], [23391, 23400], [23401, 23410], [23411, 23417], [23418, 23422], [23423, 23425], [23426, 23433], [23433, 23434], [23435, 23439], [23440, 23448], [23449, 23461], [23462, 23463], [23464, 23474], [23475, 23478], [23479, 23488], [23489, 23495], [23496, 23502], [23503, 23506], [23507, 23514], [23515, 23523], [23524, 23534], [23535, 23541], [23542, 23543], [23543, 23546], [23546, 23547], [23548, 23554], [23555, 23558], [23559, 23565], [23566, 23572], [23572, 23573], [23574, 23581], [23582, 23585], [23586, 23589], [23590, 23592], [23593, 23603], [23604, 23609], [23609, 23610], [23611, 23616], [23617, 23623], [23624, 23627], [23628, 23634], [23635, 23646], [23647, 23650], [23651, 23664], [23665, 23671], [23672, 23675], [23676, 23690], [23691, 23694], [23695, 23698], [23699, 23700], [23701, 23707], [23707, 23708], [23709, 23720], [23720, 23721], [23722, 23726], [23727, 23731], [23732, 23742], [23743, 23746], [23747, 23755], [23756, 23762], [23763, 23765], [23766, 23773], [23774, 23781], [23782, 23786], [23787, 23793], [23794, 23800], [23801, 23811], [23812, 23815], [23816, 23823], [23824, 23834], [23835, 23840], [23841, 23845], [23846, 23849], [23850, 23861], [23862, 23864], [23865, 23875], [23876, 23887], [23888, 23891], [23892, 23902], [23903, 23911], [23912, 23913], [23913, 23915], [23915, 23916], [23916, 23918], [23918, 23919], [23920, 23930], [23931, 23934], [23935, 23945], [23946, 23953], [23954, 23965], [23965, 23966], [23967, 23980], [23981, 23984], [23985, 23992], [23993, 24003], [24004, 24006], [24007, 24016], [24017, 24025], [24026, 24033], [24034, 24042], [24043, 24050], [24050, 24051], [24052, 24063], [24063, 24064], [24065, 24076], [24077, 24080], [24081, 24088], [24089, 24091], [24092, 24098], [24099, 24107], [24108, 24110], [24111, 24117], [24118, 24123], [24124, 24129], [24130, 24132], [24133, 24141], [24142, 24150], [24151, 24155], [24156, 24161], [24162, 24165], [24166, 24179], [24180, 24186], [24187, 24191], [24192, 24195], [24196, 24200], [24201, 24203], [24204, 24209], [24210, 24220], [24220, 24221], [24222, 24225], [24226, 24228], [24229, 24236], [24237, 24245], [24246, 24256], [24256, 24257], [24258, 24264], [24265, 24271], [24272, 24275], [24276, 24278], [24279, 24287], [24288, 24290], [24291, 24299], [24300, 24302], [24303, 24310], [24311, 24317], [24318, 24328], [24329, 24334], [24335, 24337], [24338, 24344], [24345, 24350], [24351, 24358], [24359, 24369], [24369, 24370], [24371, 24380], [24380, 24381], [24382, 24395], [24396, 24402], [24403, 24407], [24408, 24416], [24417, 24424], [24425, 24429], [24430, 24442], [24443, 24452], [24453, 24461], [24462, 24466], [24467, 24480], [24481, 24489], [24490, 24499], [24500, 24504], [24505, 24507], [24508, 24513], [24514, 24519], [24519, 24520], [24520, 24530], [24530, 24531], [24531, 24535], [24536, 24540], [24541, 24544], [24545, 24551], [24551, 24552], [24553, 24557], [24557, 24558], [24559, 24562], [24563, 24568], [24569, 24578], [24579, 24583], [24584, 24590], [24591, 24594], [24595, 24601], [24602, 24608], [24609, 24618], [24618, 24619], [24620, 24630], [24631, 24633], [24634, 24644], [24645, 24646], [24646, 24650], [24650, 24651], [24652, 24655], [24656, 24666], [24667, 24669], [24670, 24680], [24681, 24684], [24685, 24689], [24690, 24695], [24696, 24699], [24700, 24702], [24703, 24708], [24709, 24713], [24713, 24714], [24723, 24730], [24736, 24744], [24745, 24752], [24753, 24758], [24759, 24769], [24774, 24779], [24780, 24786], [24787, 24790], [24791, 24797], [24798, 24808]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 24809, "lparker", "content", "human gold"]]}, {"type": "Obfuscated Files or Information (T1027)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[726, 791], [1871, 1892]]}, {"type": "Exploitation for Privilege Escalation (T1068)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1042, 1185], [15062, 15196]]}, {"type": "Data from Local System (T1005)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[639, 670], [1340, 1348]]}, {"type": "Keylogging (T1056.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1362, 1420]]}, {"type": "Spearphishing Attachment (T1566.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2012, 2056]]}, {"type": "Embedded Payloads (T1027.009)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[16330, 16351]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2086, 2113], [4693, 4717], [5013, 5029], [13061, 13093], [19401, 19414], [20031, 20072]]}, {"type": "Match Legitimate Name or Location (T1036.005)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2855, 2896], [2507, 2555]]}, {"type": "Malicious File (T1204.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2901, 2965], [4297, 4322]]}, {"type": "Ingress Tool Transfer (T1105)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3158, 3199], [4683, 4691], [12158, 12246], [19964, 19987]]}, {"type": "Non-Application Layer Protocol (T1095)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3158, 3255], [12232, 12246], [12301, 12360], [13122, 13173], [19496, 19537], [19659, 19717], [19812, 19910]]}, {"type": "Dynamic API Resolution (T1027.007)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4863, 4874], [5034, 5062], [5402, 5490], [5582, 5673], [5718, 5773], [6078, 6134], [6200, 6291], [9661, 9714], [10901, 10978], [10606, 10651]]}, {"type": "Stripped Payloads (T1027.008)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4876, 4894]]}, {"type": "Binary Padding (T1027.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[4899, 4914]]}, {"type": "Native API (T1106)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6315, 6355], [13299, 13310], [15954, 15978]]}, {"type": "Query Registry (T1012)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[11345, 11459], [15625, 15742]]}, {"type": "Modify Registry (T1112)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[11653, 11714]]}, {"type": "System Information Discovery (T1082)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[11824, 11875]]}, {"type": "Bypass User Account Control (T1548.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[13746, 13808], [13867, 13910], [13974, 14059]]}, {"type": "Rundll32 (T1218.011)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[14319, 14398], [14459, 14487]]}, {"type": "Disable or Modify Tools (T1562.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[15032, 15058], [18282, 18406]]}, {"type": "System Owner/User Discovery (T1033)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[15845, 15943]]}, {"type": "Scheduled Task (T1053.005)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[17465, 17489]]}, {"type": "Local Data Staging (T1074.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[20703, 20732], [21429, 21483]]}, {"type": "Valid Accounts (T1078)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[21485, 21549]]}, {"type": "Screen Capture (T1113)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[21649, 21669]]}, {"type": "Exfiltration Over C2 Channel (T1041)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[21821, 21876]]}, {"type": "Symmetric Cryptography (T1573.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[22218, 22365]]}], "version": 2}