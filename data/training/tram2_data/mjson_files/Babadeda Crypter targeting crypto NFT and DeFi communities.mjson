{"signal": "title: Babadeda Crypter targeting crypto, NFT, and DeFi communities\nurl: https://blog.morphisec.com/the-babadeda-crypter-targeting-crypto-nft-defi-communities\n\nThe cryptocurrency market is now worth more than $2.5 trillion. Unfortunately, this fact is not lost on threat actors. As well as using cryptocurrency themselves to extract ransoms, cybercriminals are now also tailoring malware to exploit the booming market for NFTs and crypto games. In a discovery of critical importance to anyone familiar with this space, Morphisec Labs has encountered a new campaign of malware targeting cryptocurrency enthusiasts through Discord. \nCrucially, the crypter that this campaign deploys, which we have termed Babadeda (a Russian language placeholder used by the crypter itself which translates to “Grandma-Grandpa”), is able to bypass signature-based antivirus solutions. Although some variants of this crypter have been noted by other vendors, Morphisec is the first to fully disclose how it works.\nFor victims, this makes infections highly likely — and dangerous. We know that this malware installer has been used in a variety of recent campaigns to deliver information stealers, RATs, and even LockBit ransomware. Fortunately, however, even as the threat level for cryptocurrency users rises, we also know that Morphisec’s Moving Target Defense technology is capable of both seeing and stopping Babadeda. \nIn this blog post, we will explore how Babadeda is being delivered, what an in-depth technical analysis of this malware tells us about it, and how it can be stopped.\nCrypto and NFT Communities Are Prime Targets\nSince May 2021, we have observed several malware distribution campaigns.  However, many of the recent infections we have seen appear to be related to a sophisticated campaign that exclusively targets the Crypto, NFT, and DeFi communities. It is precisely for this reason, as well as the fact that NFTs are rising in popularity, that we have decided to take a look at this particular campaign distribution in more detail.\nFor those who are not familiar with NFTs (Non-fungible token): the term refers to unique tokens that provide proof of ownership on data that is stored on the blockchain technology. In recent years, NFTs have exploded in popularity, and are now starting to enter the mainstream consciousness. Naturally, this growing trend in the crypto space has opened up a new vector for threat actors to exploit.  \nThe DElivery Chain\nThe vast majority of today's NFT and crypto communities are based on Discord (a group chatting platform) channels. Discord channels are publicly accessible and allow users to send private messages to one another within a channel. \nIn the campaign that we observed, a threat actor took advantage of these features in order to phish victims. The threat actor sent users a private message inviting them to download a related application that would supposedly grant the user access to new features and/or additional benefits. Because the actor created a Discord bot account on the official company discord channel, they were able to successfully impersonate the channel’s official account.\nBelow is an example of a phishing message that targeted users of “Mines of Dalarna”, a PC game built on the blockchain.\nFigure 1: Fake message on the discord channel.\nIf a user clicks on the URL within the message, it will direct them to a decoy site. There, the user will be encouraged to download a malicious installer that embeds the Crypter with the payload.\nFigure 2: Original and decoy sites comparison\nAs you can see from the example above, the threat actor took extended measures to ensure that the delivery chain looks legitimate even to technical users. Typically:\nCybersquatting - the domain names of the decoy sites look a lot like the domain names of the original sites  Threat actors will usually remove/add a letter from/to the domain name or change the top-level domain.\nThe domains are signed with a certificate (via LetsEncrypt), which enables an HTTPS connection.\nThe UI of the decoy pages is very similar to the UI of the original pages.\nUpon clicking “Download APP”, the site will generally navigate to /downland.php, which will redirect the download request to a different domain (this makes it less likely that someone will detect a decoy site).\nInterestingly, on one of these decoy sites, we noticed an HTML object written in Russian. This suggests that the threat actor's origins may be in a Russian-speaking country since they most likely forgot to translate the HTML object from their native language into English\nFigure 3: Lost in translation?\nDecoy site examples\nThe following table shows a few examples of the decoy sites used in the campaigns we have observed.\n\nOriginal Domain\nDecoy Domain\nDescription\nIP Resolved\nInstaller Name\nopensea.io\nopenseea[.]netopenseaio[.]net\nThe most popular NFT marketplace\n185.117.2[.]82\nOpenSea-App_v2.1-setup.exe\nlarvalabs.com\nlarvaslab[.]comlarva-labs[.]net\nThe creators of CryptoPunks - The most popular PFP NFTs\n185.117.2[.]81185.117.2[.]8245.142.182[.]160\nLarvaLabs-App_v2.1.1-setup.exe\nboredapeyachtclub.com\nboredpeyachtclub[.]com\nBAYC - one of the most popular PFP NFTs\n\n185.117.2[.]4\n185.212.130[.]64\n\nBAYC-App-v2.1-release.exe\n\nWe have identified at least 82 domains created between July 24, 2021, and November 17, 2021, with the following registration time distribution (credit to @msuiche).\n\nThe Payloads\nThe following table tracks the RATs used by this specific campaign’s threat actor:\n\nDates Observed\nRAT\nC2\n11 Nov 2021 - 22 Nov 2021\nRemcos\n65.21.127.164[:]4449\n14 Oct 2021 - 22 Oct 2021\nBitRAT\n135.181.6.215[:]7777\n09 Sep 2021 - 14 Oct 2021\nBitRAT\n135.181.140.153[:]7777\n24 Aug 2021 - 07 Sep 2021\nBitRAT\n135.181.140.182[:]7777\n\n \nTechnical Analysis of the Babadeda Crypter\nFigure 4: Execution flow diagram\nDuring our research, we found different variants of the same Crypter — all of which contain the same main execution flow (denoted by the figure above). While investigating the Crypter, we saw how important it was for the threat actor to hide its malicious intentions inside legitimate applications in order to avoid detection. The following figure emphasizes the complexity of the evasive techniques that are implemented in the Crypter.\n\nFigure 5: Low detection rate on VT\nThe Installer\nOnce downloaded and executed, the malicious installer copies its compressed files into a newly created folder with a legitimate-looking name  (i.e., IIS Application Health Monitor) in one of the following directory paths:\nC:\\Users\\<user>\\AppData\\Roaming\\C:\\Users\\<user>\\AppData\\Local\\\nThe malicious files are copied along with many other open-source or free application-related files. At first glance, the files within the directory may seem legitimate. However, looking at these files carefully it becomes apparent that some of them are suspicious and should be inspected, as shown by the figure below. \n \nFigure 6: The compressed files (malware files selected with stage numbers)\nCrypter Execution\nAfter dropping the mentioned files, the Installer starts execution via the main executable (number 1 in the figure above). \nWe have noticed that at this point, some variants display a fake error message that stops the execution until the user interacts with the message. This fake message might be used as a security solutions evasion technique. Alternatively, its role may be to deceive the user into thinking that the application has failed to execute, even as it silently continues the malicious execution in the background.\n\nFigure 7: Fake error message\nBy analyzing the two different variants, we can see the implementation of this message box:\nFigure 8: Comparison between variants\nAs we can see in the figure below, the function’s code is much longer compared to the actual DLL loading code. That’s because the actor has implanted its actions within a legitimate application code in order to confuse analysts, obfuscate its real intentions, and make it harder for antivirus solutions to detect.\n \n\nFigure 9: Left - the full function. Right - the DLL loading code\nThe Shellcode's Loader DLL\nThe threat actor generally embeds the next stages of the execution inside an additional file, usually an XML or a PDF file. Nonetheless, we have also observed additional file types such as JavaScript, Text, and PNG.\nHere, just like before, the actor embeds the malicious code inside different legitimate codes. We have extracted the relevant sections to clearly demonstrate the malware’s activity:\nFigure 10: Exported function logic\nThe malicious logic starts by reading the additional file (in this case an XML file) and calling kernel32!Sleep for 35 seconds (the duration changes between variants). Next, it loads this entire file to memory and starts its parsing task. \nThe first piece that is parsed from the file is a shellcode located in a pre-calculated offset (in this case, 0x88D8C and overwrites the executable at offset 0x1600).\nFigure 11: The shellcode bytes inside the XML file\nThe executable .text section’s characteristics are configured to RWE (Read-Write-Execute) -- that way the actor doesn't need to use VirtualAlloc or VirtualProtect in order to copy the shellcode and transfer the execution. This helps with evasion since those functions are highly monitored by security solutions. Once the shellcode is copied to the executable, the DLL calls to the shellcode’s entry point (shellcode_address).\nPersistency Implementation\nIf the crypter is configured to install persistence, the loader DLL will execute a new thread that loads another DLL (from the compressed files) that will handle this task.\n\nFigure 12: New thread creation for calling the persistent mechanism\nThe newly loaded DLL will either use one of the following logics or both of them to implement the persistency:\nWrite a.lnk file in the startup folder that executes the Crypter’s main executable.\nFigure 13: .lnk file persistence implementation\nWrite a registry Run key that executes the Crypter’s main executable.\n\nFigure 14: registry run key persistence implementation\nThe Decryption Shellcode\nThe XML file (or any other file type used by the crypter) contains the following components:\nThe first shellcode (referred to in this section).\nAn encrypted additional shellcode (referred to in the next section, the Loader shellcode)\nAn encrypted payload.\nThe Decryption shellcode has three main tasks: first, it extracts the Loader shellcode and the payload, then it decrypts them, and finally, it transfers the execution to the decrypted Loader shellcode.\nFigure 15: Decryption shellcode execution flow\nThe Decryption shellcode begins with dynamically locating the configuration structure by searching for a sequence of six or more identical bytes. This configuration holds pointers to the loader shellcode and the final payload; these are encrypted and split inside the XML.\n\nFigure 16: Configuration and XML file’s structures\nBased on this, we can identify the configuration inside the XML file:\n\nFigure 17: Configuration structure\nUsing this configuration the malware iterates over each chunk copies it, and decrypts it using the denoted decryption key (the configuration changes between samples).\nThen, the shellcode searches for two DWORD placeholders, 0xBABADEDA and 0xDEADBEAF. It replaces the first placeholder with the address of the decrypted payload and the latter with the size of the payload. This data is used in the next stage, the Loader shellcode.\nThe Loader Shellcode\nThe purpose of the Loader shellcode is to inject the decrypted payload within the currently running process (itself). \nWe can divide the loading mechanism into three stages: initialization, injection, and correction.\nInitialization\nThis stage is responsible for setting the relevant data that will be used during the injection and correction stages. \nFigure 18: Extracting the data for injection and correction stages\nTo start initializing, the Loader first saves the decrypted payload address and payload size according to the placeholder’s addresses. Next, it parses the PE headers of the payload to extract the image size and the entry point according to the current executable’s base address. The Loader parses the _PEB structure in order to find the base address of the current executable and the LDR_DATA_TABLE_ENTRY which will be used later. Finally, it dynamically loads the VirtualProtect function using a pre-calculated hash value (0xF1C25B45 in our case).\nInjection\nThis stage is pretty straightforward. Within it, the Loader overwrites the current PE with the final payload’s PE. It does so by copying the PE headers and each section according to the current executable’s base address.\nFigure 19: Change headers protection and clear memory bytes for the new PE\nOnce previous bytes have been cleared, the Loader copies the new PE headers to the base address and each section to the relevant location according to the IMAGE_SECTION_HEADER.\nCorrection\nThe final stage is responsible for fixing the import address table and relocation table of the newly injected PE.\nFigure 20: Fix tables and remove altering evidence\nmw_construct_IAT \nLoad GetModuleHandleA, LoadLibraryA and GetProcAddress functions by hash (0x9FE4FCE1, 0x85557334 and 0xF23B576D respectively).\nIterate over the IAT of the new PE.\nLoad each function and update its address.\nmw_construct_RELOC \nCalculate the delta between the previous image base and the current one.\nIterate over each entry in the relocation table.\nAdd the delta to the entry value.\nIn addition to fixing the import address and relocation tables, the Loader removes evidence of injection by using the following methods:\nUpdate the LDR data table entry to match the injected PE.\nRemove the injected PE headers from memory.\nThese steps attempt to evade memory scanners that seek mismatching LDR data and in-memory PEs.\nFinally, the malware jumps to the entry point of the newly injected PE with the original command-line arguments.\nConclusion\nAs demonstrated above, Babadeda is a highly dangerous crypter. Targeting cryptocurrency users through trusted attack vectors gives its distributors a fast-growing selection of potential victims. Once on a victim's machine, masquerading as a known application with a complex obfuscation also means that anyone relying on signature-based malware effectively has no way of knowing Babadeda is on their machine — or of stopping it from executing.\nMitigating the threat posed by Babadeda requires securing the device memory it targets. Morphisec does this through Moving Target Defence, a technology that morphs process memory trapping crypters like Babadeda before they are able to deploy. \n\nIOCs\nThe sample used in the blog post:\n\nFile\nSHA256\nInstaller\n99e6b46a1eba6fd60b9568622a2a27b4ae1ac02e55ab8b13709f38455345aaff\ndifserver.exe\n358211210e0bb34dd77073bb0de64bb80723f3434594caf1a95d0ed164ee87a1\nlibfont-0.6.dll\nce3758d494132e7bef7ea87bb8379bb9f4b0c82768d65881139e1ec1838f236c\nlibxml3.dll\n0ceead2afcdee2a35dfa14e2054806231325dd291f9aa714af44a0495b677efc\nmenu.xml\n080340cb4ced8a16cad2131dc2ac89e1516d0ebe5507d91b3e8fb341bfcfe7d8\n\n \nYARA Rule\nrule BABADEDA_Crypter\n{\n       meta:\n                description = \"Detects BABADEDA Crypter\"\n                author = \"Morphisec labs\"\n                reference = \"https://blog.morphisec.com/the-babadeda-crypter-targeting-crypto-nft--defi-communities\"\n       strings:\n                $entry_shellcode = {55 8B EC 83 EC 58 53 E8 F8 03 00 00 89 45 FC 8B 45 FC 83 C0 11 89 45 CC 8B 45 FC 8B 40 09 8B 4D CC 8D 04}\n          $placeholder_1 = {8138DADEBABA} \n          $placeholder_2 = {8138AFBEADDE}\n       condition:\n \n       $entry_shellcode and all of ($placeholder_*)\n}\n \nDecoy Domains\naave-v3[.]comabracodabra[.]netalchemixfi[.]comapeswaps[.]netapp.sushi-v3[.]comarbitrums[.]comartblocks[.]usastar-network[.]comavalanche-network[.]comavax-bridge[.]comavax-bridge[.]netavax-network[.]netavax.wallet-bridge[.]netavax.wallet-network[.]netavax.wallet-network[.]orgbabydogescoin[.]comboredpeyachtclub[.]combridge-avax[.]combridge-avax[.]netbridge-avax[.]usc-nft[.]netcasper-network[.]comcompoundfinance[.]netcryptoblade[.]netdecentralands[.]netdiviprojects[.]comdydxexchange[.]netgalagamesapp[.]comhedera[.]runilluviums[.]comkeep-network[.]netklimadao[.]netlarva-labs[.]netlarvaslab[.]comlooprings[.]netluckybuddhaluckyclub[.]commangomarkets[.]netmineofdalarnia[.]netmonstasinfinite[.]netmoonebeam[.]comnear-protocol[.]comnetwork-avax[.]netnetwork-avax[.]orgnft-opensee[.]comolympusdao[.]fundopenseaio[.]netopenseea[.]netoptinism[.]netpolkadot-network[.]comprojectseeds[.]netprojectsserum[.]netrareble[.]netrocketspool[.]netsecretswaps[.]netsia-tech[.]netsolanarts[.]comsolsoulnft[.]comsushi-app[.]comsushi-v3[.]comsushi-v3app[.]comterra-money[.]netthetatokenfund[.]comwallet-avalanche[.]comwallet-avalanche[.]netwallet-avalanche[.]orgwallet-avax[.]comwallet-avax[.]infowallet-avax[.]netwallet-bridge[.]netwallet-network[.]netwallet-network[.]orgwa let.bridge-avax[.]uswallet.network-avax[.]orgwonderlaned[.]comzed-run[.]net\nHashes\n0098b2c38a69132bfde02d329d6c1c6e2b529d32d7b775a2ac78a369c0d108530115ba0f26a7b7ca3748699f782538fa761f7be4845a9dc56a679acea7b76cd3062f019515bff366fcbf49cca3f776c21e2beb81c043a45eea81044a9391fd97112282b873bdbeb5614fc8658934a99d666ba06c4e2840a21cd4458b426a4cad120213353ac7bd835086e081fb85dfa4959f11d20466fd05789ded3bff30bb111252c9103805e02324d2aecb5219e6a071c77b72477eba961621cb09a2138972140d9a4a2ec5507edf7db37dcc58f2176a0e704e8f91c28a60a7f3773e85e1aa14da3566bc9f211528c1824330c46789396447c83c3c830bb91490d873025df818c01e1f6e0185752dbf8c9352d74ade56ac40d25ae701d4a5954b74d0c7aeea196ec622eb7d9420b1c04b3856467abeb3ca565d841f34c3c9a628afc10775c8214d6681f5d82d4fa43e7a8676935ef01ddab8d0847eb3018530aedffe7ebb552e5455e268cf12ebc0213aa5dacb2239358c316dda3ec0f99d0f36074f41fb092fc8dedf82997894bb31a0eca96ae3c589863ec9bf4d1e2af0a84f2e9c3ef3013270599801099d3b5399eb898f79d7b7ec0d728c71d5177244b8110757365ade39b4dc69dd29011135732a881152f99dc19310cb906b7255a3e9ef367258094d3c844e66f0dafdced0861a8e2ff54fd762ba170bf5082fb2c38cdbbac5a7fecb3e52c251dc8683e0f374bcbea27b4b700c05dc39db13336859acbbd32590fe7c3e6a29c04270a4b62375946fdb4c392a1c9b3f64ef391f85bdd67cb78426889f44e00bef4b6d3f03a845208b925c129a5fe1b9ef6ed8cd27144c5e94176aaa6e462f7543326630d209b6433936f0c54f8920d6b5505e88d802ee060320ea81064e6eed44594054ea42f9860c1e53744649a319788e2cb7f1f624e435cbdec43d54391ff27b632a36430889dda51cfa46b694badcae2f0ce952065642c94d89df6342d9c9e087945651b11cec4903f083a20d31182e0be5b2b6030df0a980ff6865363debbbb9a691838e823c34807a9770db30c2af616c5574231af2b16d6aef6e4d56a438062210ba8ca68dee690c1692960ff36936c96586f74ee194e1c8216f247a74aa62fea0577da869fda841170ce6f1fe0e1b9f3b0d8172d336bb7dc671d0c5b5916cc5f91370f42fbfd249795e7c40526ae204becdd20fe453b53e8d72df0397893e1ac981063fbcc0ad048543ba7143ba824f2bb0aa5dfb61538ce67c8242812137aad072fe1cb78d49d01187b869d43ebcfcd87eb590c1bc9f12467e827e1981d2ccaec16a5b646976b0d492d555a20b9ba5dd4ba0d605dfcab2f786b1cf4e6952db195842809ffd7e88e5fdaca8b2b2c0005e995d34cbe9d157ad8b9120fc400510de52fb5c6689f403e5c0aaba3ff58e2ee114286c2cf09615b58ce8c448b5958da3c59874594de428b783116d8c1cf440ab804633799d88af8e90faf9b85d96a09cb689be3a52669a58df2e9ea53b150a97d05de641e624f63495d226710f37a870a338344afac6350b48c5d70c7ac8518c42f694eb0f6aa7c59b132e1d883c4f513d4ac3a5735a28a1917cfde837ee4a4b632a66cce5aa8be2a2545370b390e52376d12776152aff9285b9b3fe6610d2f8dd24b11ccb14c5b3a2e090192bf0b3b00f5bbef0b81858bc17861fedd82e93f0ab6d60777ca6820eaf0c213a2cfb62e6a9ce788c3860c627e035401b75df7f60eb64d4f4bc196aa2b5fe6db30b741f515df94238c8d1a3c51a84fe72f218751c86a254801c3233eeb6dc8341fd38dacb7a2a38a14a21afbab8e7e3f31f2fd29f0bcd7d4eb83e203cbcaaab0cd2178acdf025c7f23f10ab01906a99aca5d07e3a7e261928f8f91695c21e2be7324afb67f1e5cf9fbc95dc346db2ec62d9d8db7b0da9377a00346f41c97893d936b5e1203fb926e7ab612ffd488578e9791f07be4a6eabc83645fb5bca70f7b046f5909f0134a1c465fda3794344f45055ba2dfa802623bd326fe5b6d360daf106314561e9ec57075dd4f544ad52680678a644e186758650a405b765d548c2e3479c6c7a20ffa8a8402aa00c45aaef24102daf5c94c54a8a6013f370d76e7a14ab20d3f28de1ecef803d8b1629ed077495db5ec7b7f5828ed33c684ede644e637da7cd117517b1bb96ee0f58131515013a322366d680f613afa31bc4e5f55a5ecd7315c9e028738ced66d42852569dd061e15610a054c2121c9ed4d9e99d32952bda84f32425681229ec544849156e479b7247e3e480f3a23a39c915f24492ceab91f70c3dd3c5040184dae3bc38804c872ae948ed1ee6906a890b16fb04bc486bf7b6574b5b7caf1ed4f1a21e9e7463adf312219f767a58e8fb2be1fde7bd78e2085f364e0eb145c77b57b8bfa5bacf6a3e6eaed4b9e3a97c065a80fde8ca7c729a25e723a3738a1b5520f29ef2100ba2d9a2739aa30176b039f511\n \nCrypter hashes\namadey stealer\n4d02224a7dadfc2d8a1343fdc51e4634a98bd073f867bfd091e667efd112108a384292cad1c05552ccbd691de48865ce75375f7e601db66b3f5cad0f8f294d6c5dd0e9ef811c199a06758d65b66d051d3b0057971b021df0928ede727fe17371e312af68203fd80a2dd86a69460941ce29709424310abffd66fd7323a2b8ef6e\nCryptbot\n83aa33a24f0751cae8342045071638739981304b37fc036da342f15ccebaf482c69fd2882bcda2ae6b24235babcc570f31774a45698edbaaea70e1b9d9fd315e58fba0f609b5363b1fbb792e0b2def924b770b2f57329f383cf691ef5988055e1a31f5a7bc1c5782ab9e7a401a2a474ee75e571adfa1f7685c13258653e8af7d2dc6785721bc9369090ce77d47b6b85eb4c9fba88d4c29675b5c98195c653f3c89d3acf2cfd33516f0aaaf901226c1c8936c33ded480115cbb56b4d11fc0d4053f3f0c883ada23e33685a015dbd59a08668fa80bf3248b4fbc3b00dac1fb430566b5d71b2ae6f7569b050130ccb548785925d4ff14ccfd5fa9738e8b444cbd97d2fc2159debd0a2222673cdc028c5f88ca5cc6c72f5665d60c5d27806757cff28e113203dd97f0f33562db9086b0eadeb5ea1242738abd80ae872ac3552a259958b3a4ec25d09191c9f5cb064a4ac4ea35a51cf1dd5e26e5d5bc63662c49c2ce3fdd54336ae1400d16fd36013844953d8cbfa2982516f3d40ed2a18f58f826092b7425ae37127535adf331bdba2e4b126dc7a67890f2974fa95624b06b3ff248a49d63a099d6499875e6b46268054b63d582303c7eac93a65ff00537ab22f487d69e8d0678be5a8da741058f0ae2a6f99ffb8e3326ac50fda54336b23a546fc6e51597f0749cbb7b8b53795383f891158ab7a5af350d803f8bba787ba1d3af87240e6edb33f1d5578084bd8422792770d3bafea1581b58e45eb6f89a889f41bddd5f6a8a3f255be6e5b8c7402be7059298bcfea15931752e10ea0be59ad080633b0cf91645b6ac772fc518bd5d145db4e7750af4e8239cc46734350ddf4595bd85c2e909efb713bdb2fb402dd380ada3bcc5ff92776ab95cafaeda7e47ea6dc494f8745d09bc73fa393b77c944bb7230fc68235fd5049c32c31612eb31747224fe828cf68e77f09d903d17e4318e585ca5753b5cc1a8e7fdb081244ee6e2946436cba5140248916ece6706fee52c892e7284b8c1dde007b273cf8adf1e2565ae979a0dd895e91925b1664d6e475f5046c1b0243a9999b6d15c96480437ddf93165a1fe7f19a41fbf7ac6196d5e54900558c948603a86de7e49201295562937237c34b54d3dd6d4b36587667cb52201ca8412ec23e0a6d062cceddb703104d0c9ca00f9b232a297b1896a96c01b4835cafa0b050d62b6b891b74d6c799e6e6d263f6c89a650f439f01b2435425946f5b5eab475da42ee04088fd552bc59644613fd274f7faace98d5660ea1a13dd74cade60626bf10cc5e4a66c0c76d8e018ad8496e1715c87a07b92d9214810bcd3fc6880b88b93246e94ad9421f34340766606ff84a220c1f0d6c078de2bc9961dcda11ea21eabebc86576798f5d1a0548e113d59fa24db23fb548796b2632a3c94ea6be2c2a64236b470bcbcb5bfc6e1d9158a217e632ef9f099bae955699c9eb497c6227a642486f64c903a336fdd0f3ac503b9c509e7ff704be0431c541a3571360b52edac361b3d9ce627b4e93c53be17bbe8ee94ed612d25d1378980dbe529ad018f1a2ed0521c0621f81ae54bc2d516c885a22bdd7d046c4a616e639cc91dc94cabb972108bdc2d9540fcbe393241d11ef9df7881ad13c6865aa6161390df6580eb648c3c05a35db706c7b5d7a238f56009bf01b6ede3fd35ef88aee476c1cb77ed32c54fd467b2d6173b59af8510c2d90f581c543cba58332c5c67e2a464387142e72bb9d6960bcc9dd52ef2a948f4db9b014740b96a6b7e277cf456a19260533dadf8b36652d05e374b098c93f63cdf7f07f9b0c6ff27b0011f3a6daa5ca4b73f554b6a1ed319dce05919c3c4e18cdc5ffac866a06926359e00872ce7cc7b85d2ddf09abdc3371ac101be4e7ed46e98110cbc2802dc27b9d9fe5ba5ceeece06cf3ed93974dfeb1ce26f2b5c43e23c75837a43d3df5f8ec3117279edcfc255c69be9aaf2eed9d0d3cc98bf3b06ae01ae0cd5b88a754affa47410a0fa9d9b38582c21b8e06c32273206fa15551efdb3beb4c0c6486545826c2ec5fa5ba44d02abeb20558e55f47c51366523cacdde2750f424ee3a86842df558da44cc247fd7bd4d1d7bf5439b8732883aa840a9fceb0bf886695f19c711bd63d145518301270e247830259eb29c83bd0ee135f53ee7aa2e234a48e1f19d8dfd1885aa7ea0c73b1d22faee0f3b208dc65762e6ba374d49caac5d027dadb4db266ac999842ed7ea10b245750f8b31af738b4bfdcc5ade464f8fc360e64cdf07c837d5911f93b60cb99ee0ff531ffb0422652c7d6124d60ef94ff905ef764a4aab4cc90d657dd681b434e13df35c01c6473ee3813dd34e64b451280c906afb57198e787eaa18780abd3932bc7cf3742a5e58ccb1ccf204\nlockbit\n778eb09cac51aa75b6e3c32e78adfe0e9292af40d0f800fb3ae569198945a9ef5b9e6d9275e9523aa3945be891745442a07b936ee5236e23934250ba3844f65f17c6f4e45d44bd4c06212139f521976b87ed5a6ddcd0e4e5e978e64dabb3883f237bc833db8c72cedf0a09bd642567aa31cc74dd6bcfe5b67871f375d617ec85446736e381fa8942f8d32cb4f2ae8fb6a9245fa0e70b7f7298ee7a5cb6fe9f32668434940877f747a5d3adc745548bcfdcc881418f02e705204df2ad54a311cb74b4d14d2d1af6642d5867eb89c277aa02f5e4ac667d87b5aca380f40eabe1bfc920b2de025019e9a406e9b2f0ac2cbbfc18d65eac15f59ca8921c5fb4bfa240d25116f1fe5c9a22fcf73c4c7358f93f1ad445bb9a602d18ff69f8fa29d0be0fe80579baf175626787070bf61f75b4b810eb9d9bdb653972ad40797ee5ff82cc1ee311c3f24397de3f6671b67a263206e78f8040f5ac2fc0182d0ee171c532284b3a396f8230fc87b7fc47aa1d7ed19c78867f3dd43fd570ea93748390be58d5\nursnif\n04595c3111276f02b6dc2ece0778cb5829c086484aeafa24e0aac3d8479deb4be2c83783d6ab57ac91d99bfb9d607d0b5537e305661406bbf2347c3af92d3464676a540a91b9ffb4a18af0f4355561f3579ee4cbbf0740a80e482af92e8cdc07716ce7fe411f352686b4071074aa96e1456ab7a67445b3cf1c475e18a4e5ac25ceba6a7f9a2c25a35090470c6209aefed808786c47194a18415a7898390c20cbe203345d8120bd6d29e667bbceb92083ebb55e36b21cd22d669aa2f91830a656\nsmokeloader\n79ae89733257378139cf3bdce3a30802818ca1a12bb2343e0b9d0f51f8af1f101ae5c809ea8fabce9c699c87416d73ba5ab619accef6deeb26c2c38f39323181ee8f0ff6b0ee6072a30d45c135228108d4c032807810006ec77f2bf72856e04a\nfickerstealer\nbd8d1264a88d5cdd701a4ee909b70beaec39d216c988b33bfb30f25aee3540ee1f53d6f4fb02c8663b9d377570953d07c56df297674b7c3847d1697f0e5f8165cf88923b7d0287884870af999a8d64f90c7deeb4c4d09feed406472ff259b30d\nMetasploit Reverse HTTP\nb8990f204ca595e23562aa8063fd163651771626ba4acf45890f25315616fc1e\nquasarrat\ne8a8581cd3594a3937762f90d20ab889e7868bb88e9249f96222bd48643d7dea\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 25985, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 15], [16, 23], [24, 33], [34, 40], [40, 41], [42, 45], [45, 46], [47, 50], [51, 55], [56, 67], [68, 71], [71, 72], [73, 78], [78, 81], [81, 85], [85, 86], [86, 95], [95, 96], [96, 99], [99, 100], [100, 158], [160, 163], [164, 178], [179, 185], [186, 188], [189, 192], [193, 198], [199, 203], [204, 208], [209, 213], [214, 222], [222, 223], [224, 237], [237, 238], [239, 243], [244, 248], [249, 251], [252, 255], [256, 260], [261, 263], [264, 270], [271, 277], [277, 278], [279, 281], [282, 286], [287, 289], [290, 295], [296, 310], [311, 321], [322, 324], [325, 332], [333, 340], [340, 341], [342, 356], [357, 360], [361, 364], [365, 369], [370, 379], [380, 387], [388, 390], [391, 398], [399, 402], [403, 410], [411, 417], [418, 421], [422, 426], [427, 430], [431, 437], [438, 443], [443, 444], [445, 447], [448, 449], [450, 459], [460, 462], [463, 471], [472, 482], [483, 485], [486, 492], [493, 501], [502, 506], [507, 511], [512, 517], [517, 518], [519, 528], [529, 533], [534, 549], [550, 551], [552, 555], [556, 564], [565, 567], [568, 575], [576, 585], [586, 600], [601, 612], [613, 620], [621, 628], [628, 629], [631, 640], [640, 641], [642, 645], [646, 653], [654, 658], [659, 663], [664, 672], [673, 680], [680, 681], [682, 687], [688, 690], [691, 695], [696, 702], [703, 711], [712, 713], [713, 714], [715, 722], [723, 731], [732, 743], [744, 748], [749, 751], [752, 755], [756, 763], [764, 770], [771, 776], [777, 787], [788, 790], [791, 799], [799, 807], [807, 808], [808, 810], [811, 813], [814, 818], [819, 821], [822, 828], [829, 844], [845, 854], [855, 864], [864, 865], [866, 874], [875, 879], [880, 888], [889, 891], [892, 896], [897, 904], [905, 909], [910, 914], [915, 920], [921, 923], [924, 929], [930, 937], [937, 938], [939, 948], [949, 951], [952, 955], [956, 961], [962, 964], [965, 970], [971, 979], [980, 983], [984, 986], [987, 992], [992, 993], [994, 997], [998, 1005], [1005, 1006], [1007, 1011], [1012, 1017], [1018, 1028], [1029, 1035], [1036, 1042], [1043, 1044], [1045, 1048], [1049, 1058], [1058, 1059], [1060, 1062], [1063, 1067], [1068, 1072], [1073, 1077], [1078, 1085], [1086, 1095], [1096, 1099], [1100, 1104], [1105, 1109], [1110, 1112], [1113, 1114], [1115, 1122], [1123, 1125], [1126, 1132], [1133, 1142], [1143, 1145], [1146, 1153], [1154, 1165], [1166, 1174], [1174, 1175], [1176, 1180], [1180, 1181], [1182, 1185], [1186, 1190], [1191, 1198], [1199, 1209], [1209, 1210], [1211, 1222], [1222, 1223], [1224, 1231], [1231, 1232], [1233, 1237], [1238, 1240], [1241, 1244], [1245, 1251], [1252, 1257], [1258, 1261], [1262, 1276], [1277, 1282], [1283, 1288], [1288, 1289], [1290, 1292], [1293, 1297], [1298, 1302], [1303, 1307], [1308, 1319], [1320, 1326], [1327, 1333], [1334, 1341], [1342, 1352], [1353, 1355], [1356, 1363], [1364, 1366], [1367, 1371], [1372, 1378], [1379, 1382], [1383, 1391], [1392, 1400], [1400, 1401], [1403, 1405], [1406, 1410], [1411, 1415], [1416, 1420], [1420, 1421], [1422, 1424], [1425, 1429], [1430, 1437], [1438, 1441], [1442, 1450], [1451, 1453], [1454, 1459], [1460, 1469], [1469, 1470], [1471, 1475], [1476, 1478], [1479, 1487], [1488, 1497], [1498, 1506], [1507, 1509], [1510, 1514], [1515, 1522], [1523, 1528], [1529, 1531], [1532, 1537], [1538, 1540], [1540, 1541], [1542, 1545], [1546, 1549], [1550, 1552], [1553, 1556], [1557, 1559], [1560, 1567], [1567, 1568], [1569, 1575], [1576, 1579], [1580, 1583], [1584, 1595], [1596, 1599], [1600, 1605], [1606, 1613], [1614, 1619], [1620, 1623], [1624, 1628], [1628, 1629], [1630, 1632], [1633, 1637], [1638, 1646], [1647, 1654], [1655, 1662], [1663, 1675], [1676, 1685], [1685, 1686], [1688, 1695], [1695, 1696], [1697, 1701], [1702, 1704], [1705, 1708], [1709, 1715], [1716, 1726], [1727, 1729], [1730, 1734], [1735, 1739], [1740, 1746], [1747, 1749], [1750, 1752], [1753, 1760], [1761, 1763], [1764, 1765], [1766, 1779], [1780, 1788], [1789, 1793], [1794, 1805], [1806, 1813], [1814, 1817], [1818, 1824], [1824, 1825], [1826, 1829], [1829, 1830], [1831, 1834], [1835, 1839], [1840, 1851], [1851, 1852], [1853, 1855], [1856, 1858], [1859, 1868], [1869, 1872], [1873, 1877], [1878, 1884], [1884, 1885], [1886, 1888], [1889, 1893], [1894, 1896], [1897, 1900], [1901, 1905], [1906, 1910], [1911, 1915], [1916, 1919], [1920, 1926], [1927, 1929], [1930, 1940], [1940, 1941], [1942, 1946], [1947, 1949], [1950, 1954], [1955, 1962], [1963, 1965], [1966, 1970], [1971, 1972], [1973, 1977], [1978, 1980], [1981, 1985], [1986, 1996], [1997, 2005], [2006, 2018], [2019, 2021], [2022, 2026], [2027, 2033], [2033, 2034], [2035, 2038], [2039, 2044], [2045, 2048], [2049, 2052], [2053, 2056], [2057, 2065], [2066, 2070], [2071, 2075], [2076, 2077], [2077, 2089], [2090, 2095], [2095, 2097], [2098, 2101], [2102, 2106], [2107, 2113], [2114, 2116], [2117, 2123], [2124, 2130], [2131, 2135], [2136, 2143], [2144, 2149], [2150, 2152], [2153, 2162], [2163, 2165], [2166, 2170], [2171, 2175], [2176, 2178], [2179, 2185], [2186, 2188], [2189, 2192], [2193, 2203], [2204, 2214], [2214, 2215], [2216, 2218], [2219, 2225], [2226, 2231], [2231, 2232], [2233, 2237], [2238, 2242], [2243, 2251], [2252, 2254], [2255, 2265], [2265, 2266], [2267, 2270], [2271, 2274], [2275, 2278], [2279, 2287], [2288, 2290], [2291, 2296], [2297, 2300], [2301, 2311], [2312, 2325], [2325, 2326], [2327, 2336], [2336, 2337], [2338, 2342], [2343, 2350], [2351, 2356], [2357, 2359], [2360, 2363], [2364, 2370], [2371, 2376], [2377, 2380], [2381, 2387], [2388, 2390], [2391, 2392], [2393, 2396], [2397, 2403], [2404, 2407], [2408, 2414], [2415, 2421], [2422, 2424], [2425, 2432], [2432, 2433], [2436, 2439], [2440, 2448], [2449, 2454], [2455, 2458], [2459, 2463], [2464, 2472], [2473, 2475], [2476, 2481], [2481, 2483], [2484, 2487], [2488, 2491], [2492, 2498], [2499, 2510], [2511, 2514], [2515, 2520], [2521, 2523], [2524, 2531], [2532, 2533], [2533, 2534], [2535, 2540], [2541, 2549], [2550, 2558], [2558, 2559], [2560, 2568], [2568, 2569], [2570, 2577], [2578, 2586], [2587, 2590], [2591, 2599], [2600, 2610], [2611, 2614], [2615, 2620], [2621, 2626], [2627, 2629], [2630, 2634], [2635, 2642], [2643, 2651], [2652, 2654], [2655, 2658], [2659, 2666], [2667, 2673], [2674, 2675], [2676, 2683], [2683, 2684], [2686, 2688], [2689, 2692], [2693, 2701], [2702, 2706], [2707, 2709], [2710, 2718], [2718, 2719], [2720, 2721], [2722, 2728], [2729, 2734], [2735, 2739], [2740, 2749], [2750, 2752], [2753, 2758], [2759, 2767], [2768, 2770], [2771, 2776], [2777, 2779], [2780, 2785], [2786, 2793], [2793, 2794], [2795, 2798], [2799, 2805], [2806, 2811], [2812, 2816], [2817, 2822], [2823, 2824], [2825, 2832], [2833, 2840], [2841, 2849], [2850, 2854], [2855, 2857], [2858, 2866], [2867, 2868], [2869, 2876], [2877, 2888], [2889, 2893], [2894, 2899], [2900, 2910], [2911, 2916], [2917, 2920], [2921, 2925], [2926, 2932], [2933, 2935], [2936, 2939], [2940, 2948], [2949, 2952], [2952, 2953], [2953, 2955], [2956, 2966], [2967, 2975], [2975, 2976], [2977, 2984], [2985, 2988], [2989, 2994], [2995, 3002], [3003, 3004], [3005, 3012], [3013, 3016], [3017, 3024], [3025, 3027], [3028, 3031], [3032, 3040], [3041, 3048], [3049, 3056], [3057, 3064], [3064, 3065], [3066, 3070], [3071, 3075], [3076, 3080], [3081, 3083], [3084, 3096], [3097, 3108], [3109, 3112], [3113, 3122], [3123, 3131], [3132, 3139], [3139, 3140], [3141, 3146], [3147, 3149], [3150, 3152], [3153, 3160], [3161, 3163], [3164, 3165], [3166, 3174], [3175, 3182], [3183, 3187], [3188, 3196], [3197, 3202], [3203, 3205], [3206, 3212], [3213, 3215], [3216, 3224], [3224, 3225], [3226, 3227], [3228, 3230], [3231, 3235], [3236, 3241], [3242, 3244], [3245, 3248], [3249, 3259], [3259, 3260], [3261, 3267], [3268, 3269], [3269, 3270], [3271, 3275], [3276, 3283], [3284, 3286], [3287, 3290], [3291, 3298], [3299, 3306], [3306, 3307], [3308, 3310], [3311, 3312], [3313, 3317], [3318, 3324], [3325, 3327], [3328, 3331], [3332, 3335], [3336, 3342], [3343, 3346], [3347, 3354], [3354, 3355], [3356, 3358], [3359, 3363], [3364, 3370], [3371, 3375], [3376, 3378], [3379, 3380], [3381, 3386], [3387, 3391], [3391, 3392], [3393, 3398], [3398, 3399], [3400, 3403], [3404, 3408], [3409, 3413], [3414, 3416], [3417, 3427], [3428, 3430], [3431, 3439], [3440, 3441], [3442, 3451], [3452, 3461], [3462, 3466], [3467, 3473], [3474, 3477], [3478, 3485], [3486, 3490], [3491, 3494], [3495, 3502], [3502, 3503], [3504, 3510], [3511, 3512], [3512, 3513], [3514, 3522], [3523, 3526], [3527, 3532], [3533, 3538], [3539, 3549], [3550, 3552], [3553, 3556], [3557, 3560], [3561, 3564], [3565, 3569], [3570, 3573], [3574, 3581], [3582, 3587], [3587, 3588], [3589, 3592], [3593, 3599], [3600, 3605], [3606, 3610], [3611, 3619], [3620, 3628], [3629, 3631], [3632, 3638], [3639, 3643], [3644, 3647], [3648, 3656], [3657, 3662], [3663, 3668], [3669, 3679], [3680, 3684], [3685, 3687], [3688, 3697], [3698, 3703], [3703, 3704], [3705, 3714], [3714, 3715], [3716, 3730], [3731, 3732], [3733, 3736], [3737, 3743], [3744, 3749], [3750, 3752], [3753, 3756], [3757, 3762], [3763, 3768], [3769, 3773], [3774, 3775], [3776, 3779], [3780, 3784], [3785, 3788], [3789, 3795], [3796, 3801], [3802, 3804], [3805, 3808], [3809, 3817], [3818, 3824], [3825, 3831], [3832, 3838], [3839, 3843], [3844, 3851], [3852, 3858], [3858, 3859], [3859, 3862], [3863, 3864], [3865, 3871], [3872, 3876], [3876, 3877], [3877, 3879], [3880, 3883], [3884, 3890], [3891, 3895], [3896, 3898], [3899, 3905], [3906, 3909], [3910, 3919], [3920, 3926], [3926, 3927], [3928, 3931], [3932, 3939], [3940, 3943], [3944, 3950], [3951, 3955], [3956, 3957], [3958, 3969], [3970, 3971], [3971, 3974], [3975, 3986], [3986, 3988], [3989, 3994], [3995, 4002], [4003, 4005], [4006, 4011], [4012, 4022], [4022, 4023], [4024, 4027], [4028, 4030], [4031, 4033], [4034, 4037], [4038, 4043], [4044, 4049], [4050, 4052], [4053, 4057], [4058, 4065], [4066, 4068], [4069, 4072], [4073, 4075], [4076, 4078], [4079, 4082], [4083, 4091], [4092, 4097], [4097, 4098], [4099, 4103], [4104, 4112], [4113, 4122], [4123, 4127], [4127, 4128], [4129, 4132], [4133, 4137], [4138, 4142], [4143, 4152], [4153, 4161], [4162, 4164], [4165, 4166], [4166, 4174], [4174, 4175], [4175, 4178], [4178, 4179], [4180, 4185], [4186, 4190], [4191, 4199], [4200, 4203], [4204, 4212], [4213, 4220], [4221, 4223], [4224, 4225], [4226, 4235], [4236, 4242], [4243, 4244], [4244, 4248], [4249, 4254], [4255, 4257], [4258, 4262], [4263, 4269], [4270, 4274], [4275, 4282], [4283, 4287], [4288, 4294], [4295, 4296], [4297, 4302], [4303, 4307], [4307, 4309], [4310, 4323], [4323, 4324], [4325, 4327], [4328, 4331], [4332, 4334], [4335, 4340], [4341, 4346], [4347, 4352], [4352, 4353], [4354, 4356], [4357, 4364], [4365, 4367], [4368, 4372], [4373, 4379], [4380, 4387], [4388, 4390], [4391, 4398], [4398, 4399], [4400, 4404], [4405, 4413], [4414, 4418], [4419, 4422], [4423, 4429], [4430, 4435], [4435, 4437], [4438, 4445], [4446, 4449], [4450, 4452], [4453, 4455], [4456, 4457], [4458, 4474], [4475, 4482], [4483, 4488], [4489, 4493], [4494, 4498], [4499, 4505], [4506, 4512], [4513, 4515], [4516, 4525], [4526, 4529], [4530, 4534], [4535, 4541], [4542, 4546], [4547, 4552], [4553, 4559], [4560, 4568], [4569, 4573], [4574, 4581], [4582, 4588], [4589, 4590], [4590, 4591], [4592, 4596], [4597, 4599], [4600, 4611], [4611, 4612], [4613, 4618], [4619, 4623], [4624, 4632], [4633, 4636], [4637, 4646], [4647, 4652], [4653, 4658], [4659, 4660], [4661, 4664], [4665, 4673], [4674, 4676], [4677, 4680], [4681, 4686], [4687, 4692], [4693, 4697], [4698, 4700], [4701, 4704], [4705, 4714], [4715, 4717], [4718, 4722], [4723, 4731], [4731, 4732], [4734, 4742], [4743, 4749], [4750, 4755], [4756, 4762], [4763, 4774], [4775, 4777], [4778, 4786], [4787, 4796], [4797, 4801], [4802, 4809], [4809, 4810], [4810, 4812], [4813, 4822], [4822, 4824], [4824, 4837], [4837, 4839], [4839, 4842], [4843, 4846], [4847, 4851], [4852, 4859], [4860, 4863], [4864, 4875], [4876, 4885], [4885, 4888], [4888, 4890], [4891, 4904], [4904, 4907], [4907, 4913], [4913, 4914], [4914, 4917], [4918, 4927], [4927, 4928], [4928, 4931], [4932, 4942], [4942, 4944], [4944, 4958], [4958, 4960], [4960, 4963], [4964, 4967], [4968, 4976], [4977, 4979], [4980, 4991], [4992, 4993], [4994, 4997], [4998, 5002], [5003, 5010], [5011, 5014], [5015, 5019], [5020, 5029], [5029, 5032], [5032, 5043], [5043, 5046], [5046, 5058], [5058, 5061], [5061, 5064], [5065, 5080], [5080, 5085], [5085, 5091], [5091, 5092], [5092, 5095], [5096, 5113], [5113, 5114], [5114, 5117], [5118, 5135], [5135, 5137], [5137, 5140], [5141, 5145], [5146, 5147], [5148, 5151], [5152, 5154], [5155, 5158], [5159, 5163], [5164, 5171], [5172, 5175], [5176, 5180], [5182, 5191], [5191, 5194], [5194, 5195], [5196, 5207], [5207, 5210], [5210, 5212], [5214, 5224], [5224, 5227], [5227, 5235], [5235, 5236], [5236, 5239], [5241, 5243], [5244, 5248], [5249, 5259], [5260, 5262], [5263, 5268], [5269, 5271], [5272, 5279], [5280, 5287], [5288, 5295], [5296, 5300], [5301, 5303], [5303, 5304], [5305, 5309], [5309, 5310], [5311, 5314], [5315, 5323], [5324, 5326], [5326, 5327], [5328, 5332], [5332, 5333], [5334, 5338], [5339, 5342], [5343, 5352], [5353, 5365], [5366, 5370], [5371, 5383], [5384, 5385], [5385, 5391], [5392, 5394], [5395, 5403], [5403, 5405], [5407, 5410], [5411, 5419], [5420, 5423], [5424, 5433], [5434, 5439], [5440, 5446], [5447, 5450], [5451, 5455], [5456, 5460], [5461, 5463], [5464, 5468], [5469, 5477], [5478, 5488], [5489, 5495], [5496, 5501], [5501, 5502], [5504, 5509], [5510, 5518], [5519, 5522], [5523, 5525], [5526, 5528], [5529, 5532], [5533, 5537], [5538, 5539], [5540, 5542], [5543, 5546], [5547, 5551], [5552, 5558], [5559, 5572], [5572, 5575], [5575, 5579], [5580, 5582], [5583, 5586], [5587, 5591], [5592, 5593], [5594, 5596], [5597, 5600], [5601, 5605], [5606, 5612], [5613, 5626], [5626, 5629], [5629, 5633], [5634, 5636], [5637, 5640], [5641, 5645], [5646, 5647], [5648, 5650], [5651, 5654], [5655, 5659], [5660, 5666], [5667, 5682], [5682, 5685], [5685, 5689], [5690, 5692], [5693, 5696], [5697, 5701], [5702, 5703], [5704, 5706], [5707, 5710], [5711, 5715], [5716, 5722], [5723, 5738], [5738, 5741], [5741, 5745], [5749, 5758], [5759, 5767], [5768, 5770], [5771, 5774], [5775, 5783], [5784, 5791], [5792, 5798], [5799, 5800], [5800, 5801], [5802, 5811], [5812, 5816], [5817, 5824], [5825, 5831], [5832, 5835], [5836, 5844], [5844, 5845], [5846, 5848], [5849, 5854], [5855, 5864], [5865, 5873], [5874, 5876], [5877, 5880], [5881, 5885], [5886, 5893], [5894, 5895], [5896, 5899], [5900, 5902], [5903, 5908], [5909, 5916], [5917, 5920], [5921, 5925], [5926, 5930], [5931, 5940], [5941, 5945], [5946, 5947], [5947, 5954], [5955, 5957], [5958, 5961], [5962, 5968], [5969, 5974], [5974, 5976], [5977, 5982], [5983, 5996], [5997, 6000], [6001, 6008], [6008, 6009], [6010, 6012], [6013, 6016], [6017, 6020], [6021, 6030], [6031, 6033], [6034, 6037], [6038, 6041], [6042, 6045], [6046, 6052], [6053, 6058], [6059, 6061], [6062, 6066], [6067, 6070], [6071, 6080], [6081, 6091], [6092, 6098], [6099, 6109], [6110, 6122], [6123, 6125], [6126, 6131], [6132, 6134], [6135, 6140], [6141, 6150], [6150, 6151], [6152, 6155], [6156, 6165], [6166, 6172], [6173, 6183], [6184, 6187], [6188, 6198], [6199, 6201], [6202, 6205], [6206, 6213], [6214, 6224], [6225, 6229], [6230, 6233], [6234, 6245], [6246, 6248], [6249, 6252], [6253, 6260], [6260, 6261], [6263, 6269], [6270, 6271], [6271, 6272], [6273, 6276], [6277, 6286], [6287, 6291], [6292, 6294], [6295, 6297], [6298, 6301], [6302, 6311], [6312, 6316], [6317, 6327], [6328, 6331], [6332, 6340], [6340, 6341], [6342, 6345], [6346, 6355], [6356, 6365], [6366, 6372], [6373, 6376], [6377, 6387], [6388, 6393], [6394, 6398], [6399, 6400], [6401, 6406], [6407, 6414], [6415, 6421], [6422, 6426], [6427, 6428], [6429, 6447], [6448, 6453], [6454, 6455], [6455, 6457], [6457, 6459], [6459, 6460], [6461, 6464], [6465, 6476], [6477, 6483], [6484, 6491], [6491, 6492], [6493, 6495], [6496, 6499], [6500, 6502], [6503, 6506], [6507, 6516], [6517, 6526], [6527, 6532], [6532, 6533], [6534, 6535], [6535, 6536], [6536, 6567], [6567, 6568], [6568, 6596], [6597, 6600], [6601, 6610], [6611, 6616], [6617, 6620], [6621, 6627], [6628, 6633], [6634, 6638], [6639, 6643], [6644, 6649], [6650, 6661], [6662, 6664], [6665, 6669], [6670, 6689], [6690, 6695], [6695, 6696], [6697, 6699], [6700, 6705], [6706, 6712], [6712, 6713], [6714, 6717], [6718, 6723], [6724, 6730], [6731, 6734], [6735, 6744], [6745, 6748], [6749, 6753], [6754, 6764], [6764, 6765], [6766, 6773], [6773, 6774], [6775, 6782], [6783, 6785], [6786, 6791], [6792, 6797], [6798, 6807], [6808, 6810], [6811, 6818], [6819, 6827], [6828, 6832], [6833, 6837], [6838, 6840], [6841, 6845], [6846, 6849], [6850, 6860], [6861, 6864], [6865, 6871], [6872, 6874], [6875, 6884], [6884, 6885], [6886, 6888], [6889, 6894], [6895, 6897], [6898, 6901], [6902, 6908], [6909, 6914], [6914, 6915], [6919, 6925], [6926, 6927], [6927, 6928], [6929, 6932], [6933, 6943], [6944, 6949], [6950, 6951], [6951, 6958], [6959, 6964], [6965, 6973], [6974, 6978], [6979, 6984], [6985, 6992], [6992, 6993], [6994, 7001], [7002, 7011], [7012, 7017], [7018, 7026], [7027, 7030], [7031, 7040], [7041, 7046], [7046, 7047], [7048, 7051], [7052, 7061], [7062, 7068], [7069, 7078], [7079, 7082], [7083, 7086], [7087, 7091], [7092, 7102], [7103, 7104], [7104, 7110], [7111, 7112], [7113, 7115], [7116, 7119], [7120, 7126], [7127, 7132], [7132, 7134], [7136, 7138], [7139, 7143], [7144, 7151], [7152, 7156], [7157, 7159], [7160, 7164], [7165, 7170], [7170, 7171], [7172, 7176], [7177, 7185], [7186, 7193], [7194, 7195], [7196, 7200], [7201, 7206], [7207, 7214], [7215, 7219], [7220, 7225], [7226, 7229], [7230, 7239], [7240, 7245], [7246, 7249], [7250, 7254], [7255, 7264], [7265, 7269], [7270, 7273], [7274, 7281], [7281, 7282], [7283, 7287], [7288, 7292], [7293, 7300], [7301, 7306], [7307, 7309], [7310, 7314], [7315, 7317], [7318, 7319], [7320, 7328], [7329, 7338], [7339, 7346], [7347, 7356], [7356, 7357], [7358, 7371], [7371, 7372], [7373, 7376], [7377, 7381], [7382, 7385], [7386, 7388], [7389, 7391], [7392, 7399], [7400, 7403], [7404, 7408], [7409, 7413], [7414, 7422], [7423, 7427], [7428, 7431], [7432, 7443], [7444, 7447], [7448, 7454], [7455, 7457], [7458, 7465], [7465, 7466], [7467, 7471], [7472, 7474], [7475, 7477], [7478, 7486], [7487, 7496], [7497, 7500], [7501, 7510], [7511, 7520], [7521, 7523], [7524, 7527], [7528, 7538], [7538, 7539], [7541, 7547], [7548, 7549], [7549, 7550], [7551, 7555], [7556, 7561], [7562, 7569], [7570, 7572], [7573, 7582], [7583, 7586], [7587, 7590], [7591, 7600], [7601, 7609], [7609, 7610], [7611, 7613], [7614, 7617], [7618, 7621], [7622, 7625], [7626, 7640], [7641, 7643], [7644, 7648], [7649, 7656], [7657, 7660], [7660, 7661], [7662, 7668], [7669, 7670], [7670, 7671], [7672, 7682], [7683, 7690], [7691, 7699], [7700, 7702], [7703, 7705], [7706, 7709], [7710, 7713], [7714, 7716], [7717, 7720], [7721, 7727], [7728, 7733], [7733, 7734], [7735, 7738], [7739, 7749], [7750, 7754], [7755, 7757], [7758, 7762], [7763, 7769], [7770, 7778], [7779, 7781], [7782, 7785], [7786, 7792], [7793, 7796], [7797, 7804], [7805, 7809], [7809, 7810], [7811, 7817], [7818, 7825], [7826, 7829], [7830, 7835], [7836, 7839], [7840, 7849], [7850, 7853], [7854, 7861], [7862, 7868], [7869, 7870], [7871, 7881], [7882, 7893], [7894, 7898], [7899, 7901], [7902, 7907], [7908, 7910], [7911, 7918], [7919, 7927], [7927, 7928], [7929, 7938], [7939, 7942], [7943, 7947], [7948, 7958], [7958, 7959], [7960, 7963], [7964, 7968], [7969, 7971], [7972, 7978], [7979, 7982], [7983, 7992], [7993, 8002], [8003, 8005], [8006, 8012], [8012, 8013], [8017, 8023], [8024, 8025], [8025, 8026], [8027, 8031], [8032, 8033], [8034, 8037], [8038, 8042], [8043, 8051], [8051, 8052], [8053, 8058], [8059, 8060], [8061, 8064], [8065, 8068], [8069, 8076], [8077, 8081], [8082, 8085], [8086, 8095], [8095, 8097], [8098, 8104], [8105, 8108], [8109, 8112], [8113, 8119], [8120, 8125], [8126, 8135], [8136, 8142], [8143, 8146], [8147, 8151], [8152, 8158], [8159, 8161], [8162, 8165], [8166, 8175], [8176, 8182], [8183, 8185], [8186, 8196], [8197, 8201], [8201, 8202], [8203, 8210], [8211, 8213], [8214, 8217], [8218, 8220], [8221, 8222], [8223, 8226], [8227, 8231], [8231, 8232], [8233, 8244], [8244, 8245], [8246, 8248], [8249, 8253], [8254, 8258], [8259, 8267], [8268, 8278], [8279, 8283], [8284, 8289], [8290, 8294], [8295, 8297], [8298, 8308], [8308, 8309], [8310, 8314], [8314, 8315], [8316, 8319], [8320, 8323], [8323, 8324], [8325, 8329], [8329, 8330], [8331, 8335], [8336, 8340], [8341, 8347], [8347, 8348], [8349, 8352], [8353, 8358], [8359, 8365], [8366, 8369], [8370, 8379], [8380, 8384], [8385, 8391], [8392, 8401], [8402, 8412], [8413, 8418], [8418, 8419], [8420, 8422], [8423, 8427], [8428, 8437], [8438, 8441], [8442, 8450], [8451, 8459], [8460, 8462], [8463, 8470], [8471, 8482], [8483, 8486], [8487, 8496], [8497, 8505], [8505, 8506], [8507, 8513], [8514, 8516], [8516, 8517], [8518, 8526], [8527, 8535], [8536, 8541], [8542, 8545], [8546, 8555], [8556, 8561], [8562, 8568], [8569, 8571], [8572, 8579], [8580, 8583], [8584, 8594], [8595, 8599], [8600, 8601], [8601, 8603], [8604, 8608], [8609, 8613], [8614, 8616], [8617, 8620], [8621, 8625], [8625, 8626], [8627, 8630], [8631, 8638], [8639, 8647], [8647, 8648], [8648, 8653], [8654, 8657], [8658, 8660], [8661, 8668], [8669, 8670], [8670, 8673], [8674, 8682], [8683, 8690], [8691, 8698], [8699, 8707], [8707, 8709], [8710, 8714], [8714, 8715], [8716, 8718], [8719, 8724], [8725, 8729], [8730, 8736], [8737, 8741], [8742, 8744], [8745, 8751], [8752, 8755], [8756, 8762], [8763, 8766], [8767, 8774], [8775, 8779], [8779, 8780], [8782, 8785], [8786, 8791], [8792, 8797], [8798, 8802], [8803, 8805], [8806, 8812], [8813, 8817], [8818, 8821], [8822, 8826], [8827, 8829], [8830, 8831], [8832, 8841], [8842, 8849], [8850, 8852], [8853, 8854], [8855, 8869], [8870, 8876], [8877, 8878], [8878, 8880], [8881, 8885], [8886, 8890], [8890, 8891], [8892, 8899], [8900, 8903], [8904, 8914], [8915, 8918], [8919, 8929], [8930, 8932], [8933, 8939], [8940, 8946], [8946, 8948], [8949, 8955], [8956, 8958], [8958, 8959], [8960, 8963], [8964, 8973], [8974, 8979], [8980, 8986], [8987, 8990], [8991, 8994], [8995, 8999], [9000, 9003], [9004, 9014], [9015, 9016], [9016, 9020], [9021, 9030], [9031, 9046], [9047, 9050], [9051, 9061], [9062, 9064], [9065, 9068], [9069, 9070], [9070, 9088], [9088, 9089], [9090, 9092], [9093, 9097], [9098, 9101], [9102, 9105], [9106, 9111], [9112, 9117], [9117, 9118], [9118, 9119], [9120, 9124], [9125, 9127], [9128, 9131], [9132, 9144], [9145, 9147], [9148, 9162], [9163, 9165], [9166, 9171], [9172, 9174], [9175, 9179], [9180, 9183], [9184, 9193], [9194, 9197], [9198, 9206], [9207, 9210], [9211, 9220], [9220, 9221], [9222, 9226], [9227, 9232], [9233, 9237], [9238, 9245], [9246, 9251], [9252, 9257], [9258, 9267], [9268, 9271], [9272, 9278], [9279, 9288], [9289, 9291], [9292, 9300], [9301, 9310], [9310, 9311], [9312, 9316], [9317, 9320], [9321, 9330], [9331, 9333], [9334, 9340], [9341, 9343], [9344, 9347], [9348, 9358], [9358, 9359], [9360, 9363], [9364, 9367], [9368, 9373], [9374, 9376], [9377, 9380], [9381, 9392], [9393, 9398], [9399, 9404], [9405, 9406], [9406, 9423], [9423, 9425], [9426, 9437], [9438, 9452], [9453, 9455], [9456, 9459], [9460, 9467], [9468, 9470], [9471, 9481], [9482, 9484], [9485, 9492], [9493, 9504], [9504, 9505], [9506, 9509], [9510, 9516], [9517, 9520], [9521, 9525], [9526, 9533], [9534, 9535], [9536, 9539], [9540, 9546], [9547, 9551], [9552, 9557], [9558, 9565], [9566, 9569], [9570, 9571], [9571, 9575], [9576, 9579], [9580, 9590], [9591, 9596], [9596, 9597], [9598, 9602], [9603, 9607], [9608, 9614], [9615, 9619], [9620, 9624], [9624, 9625], [9627, 9633], [9634, 9636], [9636, 9637], [9638, 9641], [9642, 9648], [9649, 9657], [9658, 9661], [9662, 9669], [9670, 9673], [9674, 9684], [9685, 9694], [9695, 9698], [9699, 9704], [9705, 9711], [9712, 9715], [9716, 9720], [9721, 9727], [9728, 9731], [9732, 9735], [9736, 9738], [9739, 9742], [9743, 9752], [9753, 9759], [9760, 9762], [9763, 9767], [9768, 9770], [9771, 9775], [9776, 9778], [9779, 9788], [9789, 9792], [9793, 9804], [9804, 9805], [9806, 9811], [9812, 9814], [9814, 9817], [9818, 9822], [9823, 9825], [9826, 9829], [9830, 9837], [9838, 9844], [9845, 9849], [9850, 9858], [9859, 9862], [9863, 9872], [9873, 9877], [9878, 9888], [9888, 9889], [9890, 9896], [9897, 9899], [9899, 9900], [9901, 9902], [9902, 9905], [9906, 9910], [9911, 9922], [9923, 9937], [9938, 9943], [9944, 9945], [9946, 9954], [9955, 9958], [9959, 9962], [9963, 9967], [9968, 9976], [9977, 9980], [9981, 9990], [9991, 9995], [9996, 10006], [10006, 10007], [10009, 10015], [10016, 10018], [10018, 10019], [10020, 10028], [10029, 10032], [10033, 10036], [10037, 10048], [10049, 10063], [10064, 10067], [10068, 10078], [10079, 10088], [10089, 10092], [10093, 10096], [10097, 10101], [10102, 10103], [10103, 10105], [10106, 10109], [10110, 10115], [10116, 10120], [10121, 10125], [10126, 10130], [10131, 10133], [10134, 10137], [10138, 10145], [10145, 10146], [10147, 10155], [10156, 10159], [10160, 10169], [10170, 10180], [10180, 10181], [10182, 10185], [10186, 10191], [10192, 10201], [10202, 10203], [10203, 10211], [10212, 10214], [10215, 10217], [10218, 10222], [10223, 10230], [10230, 10232], [10233, 10235], [10236, 10245], [10246, 10256], [10257, 10266], [10267, 10268], [10268, 10276], [10277, 10279], [10280, 10282], [10283, 10286], [10287, 10291], [10292, 10299], [10299, 10300], [10301, 10304], [10305, 10311], [10312, 10321], [10321, 10322], [10323, 10325], [10326, 10335], [10336, 10343], [10343, 10344], [10345, 10348], [10349, 10359], [10360, 10369], [10370, 10373], [10374, 10379], [10380, 10384], [10385, 10390], [10390, 10391], [10392, 10397], [10397, 10398], [10399, 10401], [10402, 10410], [10411, 10414], [10415, 10421], [10422, 10431], [10432, 10435], [10436, 10439], [10440, 10447], [10447, 10448], [10449, 10453], [10454, 10456], [10457, 10465], [10466, 10470], [10470, 10471], [10472, 10475], [10476, 10483], [10483, 10484], [10485, 10487], [10488, 10497], [10498, 10501], [10502, 10511], [10512, 10514], [10515, 10518], [10519, 10528], [10529, 10535], [10536, 10545], [10545, 10546], [10547, 10553], [10554, 10556], [10556, 10557], [10558, 10568], [10569, 10578], [10579, 10588], [10589, 10593], [10594, 10597], [10598, 10608], [10609, 10618], [10619, 10625], [10626, 10630], [10631, 10642], [10643, 10651], [10652, 10655], [10656, 10669], [10670, 10679], [10680, 10682], [10683, 10692], [10693, 10696], [10697, 10698], [10699, 10707], [10708, 10710], [10711, 10714], [10715, 10717], [10718, 10722], [10723, 10732], [10733, 10738], [10738, 10739], [10740, 10744], [10745, 10758], [10759, 10764], [10765, 10773], [10774, 10776], [10777, 10780], [10781, 10787], [10788, 10797], [10798, 10801], [10802, 10805], [10806, 10811], [10812, 10819], [10819, 10820], [10821, 10826], [10827, 10830], [10831, 10840], [10841, 10844], [10845, 10850], [10851, 10857], [10858, 10861], [10862, 10865], [10865, 10866], [10868, 10874], [10875, 10877], [10877, 10878], [10879, 10892], [10893, 10896], [10897, 10900], [10901, 10907], [10908, 10918], [10919, 10924], [10925, 10927], [10928, 10932], [10932, 10933], [10934, 10936], [10937, 10940], [10941, 10949], [10950, 10953], [10954, 10967], [10968, 10974], [10975, 10978], [10979, 10982], [10983, 10987], [10987, 10988], [10990, 10996], [10997, 10999], [10999, 11000], [11001, 11014], [11015, 11024], [11025, 11030], [11031, 11035], [11036, 11049], [11050, 11053], [11054, 11061], [11062, 11070], [11071, 11075], [11076, 11080], [11081, 11086], [11087, 11093], [11094, 11096], [11096, 11097], [11098, 11101], [11102, 11110], [11111, 11113], [11114, 11119], [11120, 11123], [11124, 11131], [11132, 11142], [11143, 11146], [11147, 11148], [11148, 11151], [11152, 11165], [11166, 11173], [11174, 11181], [11182, 11189], [11189, 11191], [11192, 11196], [11196, 11197], [11198, 11201], [11202, 11211], [11212, 11220], [11221, 11224], [11225, 11228], [11229, 11234], [11235, 11247], [11247, 11248], [11249, 11259], [11260, 11263], [11264, 11274], [11274, 11275], [11276, 11278], [11279, 11287], [11288, 11291], [11292, 11297], [11298, 11309], [11310, 11314], [11315, 11318], [11319, 11326], [11327, 11329], [11330, 11333], [11334, 11343], [11344, 11351], [11352, 11355], [11356, 11359], [11360, 11366], [11367, 11371], [11372, 11375], [11376, 11380], [11381, 11383], [11384, 11387], [11388, 11395], [11395, 11396], [11397, 11401], [11402, 11406], [11407, 11409], [11410, 11414], [11415, 11417], [11418, 11421], [11422, 11426], [11427, 11432], [11432, 11433], [11434, 11437], [11438, 11444], [11445, 11454], [11454, 11455], [11456, 11459], [11460, 11466], [11467, 11476], [11477, 11480], [11481, 11488], [11489, 11491], [11492, 11495], [11496, 11502], [11503, 11512], [11513, 11515], [11516, 11518], [11519, 11525], [11526, 11529], [11530, 11539], [11540, 11547], [11548, 11554], [11555, 11558], [11559, 11568], [11569, 11576], [11577, 11584], [11585, 11586], [11586, 11592], [11592, 11594], [11596, 11598], [11599, 11602], [11603, 11609], [11610, 11613], [11614, 11621], [11622, 11631], [11632, 11636], [11637, 11642], [11643, 11649], [11649, 11650], [11651, 11665], [11665, 11666], [11667, 11676], [11676, 11677], [11678, 11681], [11682, 11692], [11692, 11693], [11694, 11708], [11709, 11713], [11714, 11719], [11720, 11722], [11723, 11734], [11735, 11738], [11739, 11746], [11747, 11750], [11751, 11759], [11760, 11764], [11765, 11769], [11770, 11774], [11775, 11777], [11778, 11782], [11783, 11789], [11790, 11793], [11794, 11803], [11804, 11807], [11808, 11818], [11819, 11825], [11825, 11826], [11828, 11834], [11835, 11837], [11837, 11838], [11839, 11849], [11850, 11853], [11854, 11858], [11859, 11862], [11863, 11872], [11873, 11876], [11877, 11887], [11888, 11894], [11895, 11897], [11898, 11903], [11904, 11916], [11916, 11917], [11918, 11921], [11922, 11928], [11929, 11934], [11935, 11940], [11941, 11944], [11945, 11954], [11955, 11962], [11963, 11970], [11971, 11974], [11975, 11982], [11983, 11987], [11988, 11997], [11998, 12000], [12001, 12004], [12005, 12018], [12019, 12028], [12028, 12029], [12030, 12034], [12034, 12035], [12036, 12038], [12039, 12045], [12046, 12049], [12050, 12052], [12053, 12060], [12061, 12063], [12064, 12067], [12068, 12075], [12076, 12078], [12079, 12086], [12087, 12090], [12091, 12096], [12097, 12101], [12102, 12105], [12106, 12109], [12110, 12115], [12116, 12121], [12122, 12131], [12132, 12134], [12135, 12138], [12139, 12146], [12147, 12159], [12160, 12164], [12165, 12172], [12172, 12173], [12174, 12177], [12178, 12184], [12185, 12191], [12192, 12195], [12196, 12200], [12201, 12210], [12211, 12213], [12214, 12219], [12220, 12222], [12223, 12227], [12228, 12231], [12232, 12236], [12237, 12244], [12245, 12247], [12248, 12251], [12252, 12259], [12260, 12270], [12271, 12274], [12275, 12278], [12279, 12299], [12300, 12305], [12306, 12310], [12311, 12313], [12314, 12318], [12319, 12324], [12324, 12325], [12326, 12333], [12333, 12334], [12335, 12337], [12338, 12349], [12350, 12355], [12356, 12359], [12360, 12374], [12375, 12383], [12384, 12389], [12390, 12391], [12392, 12406], [12407, 12411], [12412, 12417], [12418, 12419], [12419, 12429], [12430, 12432], [12433, 12436], [12437, 12441], [12441, 12443], [12444, 12453], [12454, 12458], [12459, 12464], [12465, 12467], [12468, 12474], [12475, 12490], [12490, 12491], [12492, 12498], [12499, 12501], [12501, 12502], [12503, 12506], [12507, 12513], [12514, 12524], [12525, 12528], [12529, 12536], [12537, 12539], [12540, 12544], [12545, 12548], [12549, 12554], [12555, 12564], [12565, 12567], [12567, 12568], [12569, 12571], [12572, 12576], [12577, 12579], [12580, 12582], [12583, 12590], [12591, 12594], [12595, 12597], [12598, 12605], [12606, 12609], [12610, 12614], [12615, 12622], [12623, 12632], [12633, 12635], [12636, 12639], [12640, 12647], [12648, 12660], [12661, 12665], [12666, 12673], [12673, 12674], [12675, 12681], [12682, 12684], [12684, 12685], [12686, 12692], [12693, 12700], [12701, 12711], [12712, 12715], [12716, 12721], [12722, 12728], [12729, 12734], [12735, 12738], [12739, 12742], [12743, 12746], [12747, 12749], [12750, 12754], [12755, 12763], [12764, 12769], [12770, 12774], [12775, 12779], [12780, 12787], [12787, 12788], [12789, 12792], [12793, 12799], [12800, 12806], [12807, 12810], [12811, 12814], [12815, 12817], [12818, 12825], [12826, 12828], [12829, 12832], [12833, 12837], [12838, 12845], [12846, 12849], [12850, 12854], [12855, 12862], [12863, 12865], [12866, 12869], [12870, 12878], [12879, 12887], [12888, 12897], [12898, 12900], [12901, 12904], [12905, 12925], [12925, 12926], [12927, 12937], [12938, 12941], [12942, 12947], [12948, 12953], [12954, 12956], [12957, 12968], [12969, 12972], [12973, 12979], [12980, 12983], [12984, 12990], [12991, 12998], [12999, 13004], [13005, 13008], [13009, 13019], [13020, 13025], [13026, 13028], [13029, 13032], [13033, 13038], [13039, 13047], [13048, 13050], [13050, 13051], [13052, 13058], [13059, 13061], [13061, 13062], [13063, 13066], [13067, 13073], [13074, 13077], [13078, 13084], [13085, 13093], [13094, 13102], [13103, 13120], [13121, 13125], [13126, 13142], [13142, 13143], [13144, 13156], [13157, 13160], [13161, 13175], [13176, 13185], [13186, 13188], [13189, 13193], [13194, 13195], [13195, 13205], [13205, 13206], [13207, 13217], [13218, 13221], [13222, 13232], [13233, 13245], [13245, 13247], [13248, 13255], [13256, 13260], [13261, 13264], [13265, 13268], [13269, 13271], [13272, 13275], [13276, 13279], [13280, 13282], [13282, 13283], [13284, 13288], [13289, 13293], [13294, 13302], [13303, 13306], [13307, 13313], [13314, 13317], [13318, 13325], [13325, 13326], [13327, 13346], [13347, 13356], [13357, 13360], [13361, 13366], [13367, 13374], [13375, 13378], [13379, 13387], [13388, 13393], [13394, 13398], [13399, 13402], [13403, 13406], [13407, 13414], [13415, 13418], [13418, 13419], [13420, 13427], [13428, 13432], [13433, 13437], [13438, 13443], [13444, 13446], [13447, 13450], [13451, 13461], [13462, 13467], [13467, 13468], [13469, 13472], [13473, 13476], [13477, 13482], [13483, 13485], [13486, 13489], [13490, 13495], [13496, 13501], [13501, 13502], [13503, 13505], [13506, 13514], [13515, 13517], [13518, 13524], [13525, 13528], [13529, 13535], [13536, 13543], [13544, 13547], [13548, 13558], [13559, 13565], [13565, 13566], [13567, 13570], [13571, 13577], [13578, 13585], [13586, 13594], [13595, 13597], [13598, 13607], [13608, 13610], [13611, 13616], [13617, 13620], [13621, 13630], [13631, 13638], [13638, 13639], [13640, 13646], [13647, 13650], [13651, 13654], [13655, 13659], [13660, 13665], [13666, 13671], [13672, 13674], [13675, 13680], [13681, 13684], [13685, 13693], [13694, 13696], [13696, 13697], [13698, 13704], [13705, 13708], [13709, 13717], [13718, 13720], [13721, 13728], [13729, 13733], [13734, 13740], [13740, 13741], [13742, 13747], [13748, 13753], [13754, 13761], [13762, 13764], [13765, 13770], [13771, 13777], [13778, 13786], [13787, 13791], [13792, 13796], [13797, 13808], [13809, 13812], [13813, 13817], [13818, 13821], [13822, 13831], [13832, 13835], [13835, 13836], [13837, 13844], [13844, 13845], [13846, 13849], [13850, 13857], [13858, 13863], [13864, 13866], [13867, 13870], [13871, 13876], [13877, 13882], [13883, 13885], [13886, 13889], [13890, 13895], [13896, 13904], [13905, 13907], [13908, 13912], [13913, 13916], [13917, 13925], [13926, 13938], [13939, 13948], [13948, 13949], [13950, 13960], [13961, 13963], [13964, 13976], [13977, 13982], [13982, 13983], [13984, 13992], [13993, 13995], [13996, 13997], [13998, 14004], [14005, 14014], [14015, 14022], [14022, 14023], [14024, 14033], [14034, 14048], [14049, 14054], [14055, 14062], [14063, 14070], [14071, 14077], [14078, 14085], [14086, 14091], [14092, 14095], [14096, 14108], [14109, 14110], [14111, 14123], [14124, 14133], [14134, 14136], [14137, 14146], [14147, 14154], [14154, 14155], [14156, 14160], [14161, 14163], [14164, 14165], [14166, 14172], [14172, 14174], [14175, 14182], [14182, 14183], [14184, 14196], [14197, 14199], [14200, 14201], [14202, 14207], [14208, 14219], [14220, 14224], [14225, 14226], [14227, 14234], [14235, 14246], [14247, 14251], [14252, 14257], [14258, 14262], [14263, 14269], [14270, 14277], [14278, 14280], [14281, 14296], [14297, 14304], [14305, 14316], [14317, 14320], [14321, 14323], [14324, 14327], [14328, 14330], [14331, 14338], [14339, 14347], [14348, 14350], [14351, 14353], [14354, 14359], [14360, 14367], [14368, 14369], [14370, 14372], [14373, 14375], [14376, 14384], [14385, 14387], [14388, 14392], [14393, 14402], [14402, 14403], [14404, 14414], [14415, 14418], [14419, 14425], [14426, 14431], [14432, 14434], [14435, 14443], [14444, 14452], [14453, 14461], [14462, 14465], [14466, 14472], [14473, 14479], [14480, 14482], [14483, 14490], [14490, 14491], [14492, 14501], [14502, 14506], [14507, 14511], [14512, 14519], [14520, 14526], [14527, 14533], [14534, 14541], [14541, 14542], [14543, 14544], [14545, 14555], [14556, 14560], [14561, 14567], [14568, 14575], [14576, 14582], [14583, 14591], [14592, 14600], [14601, 14605], [14606, 14614], [14615, 14621], [14622, 14626], [14627, 14630], [14631, 14635], [14636, 14638], [14639, 14645], [14645, 14646], [14649, 14653], [14654, 14657], [14658, 14664], [14665, 14669], [14670, 14672], [14673, 14676], [14677, 14681], [14682, 14686], [14686, 14687], [14689, 14693], [14694, 14700], [14701, 14710], [14711, 14775], [14776, 14785], [14785, 14786], [14786, 14789], [14790, 14854], [14855, 14863], [14863, 14866], [14866, 14867], [14867, 14870], [14871, 14935], [14936, 14943], [14943, 14944], [14944, 14947], [14948, 15012], [15013, 15017], [15017, 15018], [15018, 15021], [15022, 15086], [15090, 15094], [15095, 15099], [15100, 15104], [15105, 15121], [15122, 15123], [15130, 15135], [15135, 15136], [15153, 15164], [15165, 15166], [15167, 15168], [15168, 15175], [15176, 15184], [15185, 15192], [15192, 15193], [15210, 15216], [15217, 15218], [15219, 15220], [15220, 15229], [15230, 15234], [15234, 15235], [15252, 15261], [15262, 15263], [15264, 15265], [15265, 15270], [15270, 15273], [15273, 15277], [15277, 15278], [15278, 15287], [15287, 15288], [15288, 15291], [15291, 15292], [15292, 15351], [15351, 15352], [15359, 15367], [15367, 15368], [15385, 15401], [15402, 15403], [15404, 15405], [15405, 15407], [15408, 15410], [15411, 15413], [15414, 15416], [15417, 15419], [15420, 15422], [15423, 15425], [15426, 15428], [15429, 15431], [15432, 15434], [15435, 15437], [15438, 15440], [15441, 15443], [15444, 15446], [15447, 15449], [15450, 15452], [15453, 15455], [15456, 15458], [15459, 15461], [15462, 15464], [15465, 15467], [15468, 15470], [15471, 15473], [15474, 15476], [15477, 15479], [15480, 15482], [15483, 15485], [15486, 15488], [15489, 15491], [15492, 15494], [15495, 15497], [15498, 15500], [15501, 15503], [15504, 15506], [15507, 15509], [15509, 15510], [15521, 15535], [15536, 15537], [15538, 15539], [15539, 15551], [15551, 15552], [15564, 15578], [15579, 15580], [15581, 15582], [15582, 15594], [15594, 15595], [15602, 15612], [15612, 15613], [15622, 15639], [15640, 15643], [15644, 15647], [15648, 15650], [15651, 15652], [15652, 15665], [15665, 15667], [15668, 15669], [15672, 15677], [15678, 15685], [15686, 15692], [15692, 15693], [15693, 15696], [15696, 15711], [15711, 15713], [15713, 15727], [15727, 15729], [15729, 15741], [15741, 15743], [15743, 15749], [15749, 15750], [15750, 15757], [15757, 15758], [15758, 15761], [15761, 15774], [15774, 15776], [15776, 15789], [15789, 15791], [15791, 15807], [15807, 15809], [15809, 15830], [15830, 15832], [15832, 15847], [15847, 15849], [15849, 15864], [15864, 15866], [15866, 15882], [15882, 15884], [15884, 15891], [15891, 15892], [15892, 15906], [15906, 15908], [15908, 15915], [15915, 15916], [15916, 15931], [15931, 15933], [15933, 15940], [15940, 15941], [15941, 15956], [15956, 15958], [15958, 15975], [15975, 15977], [15977, 15997], [15997, 15999], [15999, 16014], [16014, 16016], [16016, 16031], [16031, 16033], [16033, 16048], [16048, 16050], [16050, 16058], [16058, 16060], [16060, 16078], [16078, 16080], [16080, 16099], [16099, 16101], [16101, 16116], [16116, 16118], [16118, 16135], [16135, 16137], [16137, 16153], [16153, 16155], [16155, 16171], [16171, 16173], [16173, 16189], [16189, 16191], [16191, 16201], [16201, 16203], [16203, 16216], [16216, 16218], [16218, 16234], [16234, 16236], [16236, 16248], [16248, 16250], [16250, 16264], [16264, 16266], [16266, 16279], [16279, 16281], [16281, 16294], [16294, 16296], [16296, 16320], [16320, 16322], [16322, 16338], [16338, 16340], [16340, 16358], [16358, 16360], [16360, 16379], [16379, 16381], [16381, 16394], [16394, 16396], [16396, 16413], [16413, 16415], [16415, 16431], [16431, 16433], [16433, 16449], [16449, 16451], [16451, 16466], [16466, 16468], [16468, 16482], [16482, 16484], [16484, 16498], [16498, 16500], [16500, 16512], [16512, 16514], [16514, 16526], [16526, 16528], [16528, 16548], [16548, 16550], [16550, 16566], [16566, 16568], [16568, 16585], [16585, 16587], [16587, 16598], [16598, 16600], [16600, 16615], [16615, 16617], [16617, 16632], [16632, 16634], [16634, 16646], [16646, 16648], [16648, 16661], [16661, 16663], [16663, 16677], [16677, 16679], [16679, 16692], [16692, 16694], [16694, 16704], [16704, 16705], [16705, 16708], [16708, 16718], [16718, 16722], [16722, 16725], [16725, 16740], [16740, 16742], [16742, 16760], [16760, 16762], [16762, 16782], [16782, 16784], [16784, 16804], [16804, 16806], [16806, 16826], [16826, 16828], [16828, 16843], [16843, 16845], [16845, 16860], [16860, 16862], [16862, 16878], [16878, 16880], [16880, 16897], [16897, 16899], [16899, 16917], [16917, 16919], [16919, 16937], [16937, 16939], [16939, 16944], [16945, 16948], [16948, 16949], [16949, 16961], [16961, 16963], [16963, 16971], [16971, 16972], [16972, 16985], [16985, 16987], [16987, 17002], [17002, 17004], [17004, 17015], [17015, 17017], [17017, 17020], [17021, 17027], [17028, 20548], [20551, 20558], [20559, 20565], [20566, 20572], [20573, 20580], [20581, 20837], [20838, 20846], [20847, 24239], [24240, 24247], [24248, 25016], [25017, 25023], [25024, 25408], [25409, 25420], [25421, 25613], [25614, 25627], [25628, 25820], [25821, 25831], [25832, 25839], [25840, 25844], [25845, 25909], [25910, 25919], [25920, 25984]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 25985, "jlasky", "content", "human gold"]]}, {"type": "Embedded Payloads (T1027.009)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[8136, 8232], [3462, 3503], [8349, 8419]]}, {"type": "Web Protocols (T1071.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3989, 4023]]}, {"type": "Match Legitimate Name or Location (T1036.005)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6312, 6533], [6697, 6764]]}, {"type": "Registry Run Keys / Startup Folder (T1547.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[9938, 9962], [9806, 9844], [10020, 10063]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[10064, 10088], [10345, 10546], [10558, 10593], [10594, 10618], [11102, 11146], [11330, 11351], [11526, 11547], [11941, 11970]]}, {"type": "Obfuscated Files or Information (T1027)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[10233, 10266], [10323, 10343], [10821, 10866]]}, {"type": "Malicious File (T1204.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[3400, 3461], [7392, 7539]]}, {"type": "Process Injection (T1055)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[11503, 11594]]}, {"type": "Portable Executable Injection (T1055.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[12503, 12567], [12569, 12674], [12789, 12925], [12980, 13051], [13886, 13907]]}, {"type": "Indicator Removal from Tools (T1027.005)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[13571, 13741]]}], "version": 2}