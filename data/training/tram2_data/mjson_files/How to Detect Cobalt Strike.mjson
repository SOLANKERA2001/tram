{"signal": "title: How to Detect Cobalt Strike\nurl: https://www.intezer.com/blog/malware-analysis/cobalt-strike-detect-this-persistent-threat/\n\nCobalt Strike is a penetration testing tool created by Raphael Mudge in 2012. To this day, it remains extremely popular in red team activities and used for malicious purposes by threat actors. Cobalt Strike is popular due to its range of deployment options, ease of use, ability to avoid detection by security products, and the number of capabilities it has. It is for these reasons that threat actors also like Cobalt Strike. Since Cobalt Strike is widely used by a range of actors, its lack of exclusivity makes attribution harder. Companies still struggle to detect Cobalt Strike also due to the various defensive techniques it has. This blog explains Cobalt Strike and practical steps to take if you believe that you are being targeted by Cobalt Strike or already compromised. We will demonstrate some real world examples of Cobalt Strike delivery and steps to detect each.\nWhat is Cobalt Strike?\nCobalt Strike is marketed as “Software for Adversary Simulations and Red Team Operations.” It is a popular platform that allows users to emulate advanced threats, perform reconnaissance, hide communications, escalate privileges, move laterally across the network, and deploy additional payloads. The main payload of Cobalt Strike is called “Beacon.” The Beacon payload is used to model advanced APT malware, and can do the following: \nReceive commands (either passively or from an interactive console)\nEgress communications over HTTP, HTTPS, and DNS\nLaunch PowerShell\nExecute binaries\nModify and query the Windows registry\nInject malicious code into legitimate processes\nLog keystrokes\nTake screenshots\nSet up proxies\nEscalate privileges\nBypass UAC\nDump password hashes\nScan ports among other abilities\nThis tool is mainly used in red team operations for government agencies and private enterprises, but it’s also a popular tool leveraged by cybercrime and APT groups in cracked versions. It is evident why Cobalt Strike is used by organizations and threat actors alike because of the extensive suite of capabilities it possesses, and also due to its ability to bypass defenses. It also comes with the feature to generate reporting in which the attacking team or threat actor can continuously study and improve their campaigns.\nWhy is it difficult to detect Cobalt Strike?\nCobalt Strike is difficult to detect because of its several defense techniques. Cobalt Strike payloads are usually shellcode encrypted with a rolling XOR key. This makes static analysis difficult to conduct. This, combined with the ability to configure many parts of the payload, makes hash-based detection almost impossible. Cobalt Strike stagers are designed to be loaded and executed only in-memory. This opens up a ton of possibilities for how this shellcode is shipped, making signature-based detection on the delivery method a cat and mouse game. Depending on how the code is delivered, the code can be injected into other legitimate running processes, bypassing defenses that do not scan legitimate processes or code in-memory.\nHow has Cobalt Strike been deployed?\nCobalt Strike has many different ways for deployment. This flexibility has helped attackers find many unconventional and creative ways to infect victims with a payload. For an in-depth technical analysis of Cobalt Strike’s deployment options and how they differ, check out Avast’s blog or this Cisco Talos white paper. Let’s take a look at some real world examples of how Cobalt Strike is being used in the wild. We will cover the following:\nMacro-Laden Microsoft Office files\nSupply Chain Attack\nLiving off the Land (LotL)\nExecutables (EXE) files\n\nMacro-Laden Microsoft Office Files\nAn example of a Cobalt Strike payload being delivered to victims via Microsoft Excel spreadsheets demonstrates that this tool is also used in mass phishing campaigns, not just targeted APT attacks. The attack starts by sending potential victims a Microsoft OneDrive link from which an Excel (.xls) file is downloaded. OneDrive URLs sent to victimsUsing cloud storage links to deliver malicious files is a well-known strategy. It leverages the good reputation of cloud provider domains such as Microsoft, Amazon, and Google to bypass domain reputation-based security controls. This link delivers an Excel file pretending to be an Apple Store invoice requesting the target “enable content to view receipt.”Spreadsheet lure masquerading as an Apple Store receiptUpon enablement of macros, the spreadsheet will fetch and execute the payload in-memory.\nHow to Detect?\nThis can be difficult to detect, as there are multiple degrees of separation before the Cobalt Strike payload is executed. Detection first requires dynamic analysis in order to reach the Cobalt Strike stage. When this stage is reached, the best ways to detect the running Cobalt Strike code are through static signatures or genetic code analysis. When it comes to static signatures, it can be difficult to isolate the exact area in-memory that you should run the signatures over. One way this can be achieved is running the file through debugging tools and manually dumping memory to perform signature analysis. This can be extremely time consuming and requires a high degree of technical knowledge. Another possible way is to use a sandbox and download memory dumps from a finished analysis in order to run static analysis tools. This requires slightly less technical knowledge but it still can be time consuming. We suggest taking the suspicious document and uploading it to Intezer Analyze to find out if Cobalt Strike is hidden in-memory.Intezer Analyze result for Cobalt Strike payload\nSupply Chain Attack\nOne of the biggest cybersecurity stories of 2020 was the SolarWinds supply chain attack that compromised high-profile entities around the world. This attack was done by an APT group known as NOBELIUM (UNC2452) leveraging the “Orion” business software to distribute malware to private and public organizations. Among the deployed malware was a Cobalt Strike loader dubbed TEARDROP by FireEye. The variant was named Raindrop by Symantec. The TEARDROP dropper is a memory-only DLL that runs as a service spawning a thread that pulls the Cobalt Strike payload from a fake JPG file. The Raindrop variant is built from a modified version of 7-ZIP source code. It uses a different custom packer than TEARDROP, also leveraging steganography to locate the start of the encoded payload. Once the encoded payload has been located, it extracts, decrypts, and decompresses the data to be executed as shellcode.\nHow to Detect?\nIt can often be difficult to detect if your organization has been the victim of a supply chain attack. It can be especially hard to collect forensic evidence for an attack when it could be mixed in with the code of legitimate and large files. Due to the nature of supply chain attacks, there are often a large number of machines in an organization infected at one time. An action you can take is to run Intezer’s live endpoint scanner across all machines in the organization. This will give you immediate visibility over all running code and quickly identify infected machines by detecting any traces of malicious code found in-memory. An example of a machine with Raindrop loading Cobalt Strike is shown in the endpoint scan below.Intezer Analyze endpoint scan result for Raindrop loading and executing a fileless Cobalt Strike payload\nLiving off the Land (LotL)\nLiving off the Land (LotL) is the attack process of using legitimate and signed tools, usually provided within the operating system, to execute malware. This is a powerful tactic as it can result in unauthorized code being executed within the memory space of a trusted process, evading malware defenses by flying under the radar. This type of tactic also makes incident response difficult, since analysts can’t just filter out known legitimate processes during triage. All processes must be inspected in order to find that one needle in the haystack. One popular tool used for LotL operations is the Microsoft.NET framework utility called MSBuild. MSBuild is the build platform used for Microsoft and Visual Studio. Visual Studio relies on MSBuild to build projects for testing and releases. Attackers are able to pass MSBuild.exe, a project (.proj) file, to build and execute. The payload, usually shellcode, is injected into another process. This attack is effective for attackers as many sandboxing solutions are not able to handle project files and struggle with fileless malware. This technique was observed by Cisco Talos researchers in 2020 to deploy Cobalt Strike.Project file codeAs shown above, the project file has an encoded and compressed payload. This payload is decrypted, decompressed, and then copied into memory. The shellcode is then executed in a new thread.\nHow to Detect?\nAn endpoint with a system injected with Cobalt Strike via MSBuild is shown below. Note the process tree at the bottom indicating the “fileless code.”Intezer Analyze endpoint scan of a Cobalt Strike-infected system via LotL technique\nExecutables (EXE) Files\nThere is an acronym in the United States Armed Forces called “KISS.” KISS stands for “Keep it simple, stupid!” Sometimes simple is better, and another way for Cobalt Strike to be deployed is in a simple Windows EXE form. This requires either social engineering tactics to get the target to execute the malware or another program/script to execute the file. This process involves creation of a thread that sets up a named pipe for privilege escalation. Once the shellcode is written to the named pipe, it is decrypted and executed in a separate thread.\nHow to Detect?\nAn example of one of these payloads is shown in the analysis below. Notice how the Cobalt Strike code is only shown when it is executed and found in-memory.Cobalt Strike found via memory analysis\nHow can Cobalt Strike be detected and remediated?\nDue to the many ways Cobalt Strike is deployed, detection can be hard. The use of shellcode, encoding, compression, obfuscated strings, process injection, hashing algorithms, domain fronting, different communication channels, and dynamically loaded libraries all give malware and network defenses a run for their money.\nStatic Analysis\nStatic analysis involves examining the file using various techniques without actually having to execute the file itself. Static analysis can involve hashing the file and finding intel on it, taking a look at the strings to see if there are functionality or network indicators, or checking imports and running signatures such as YARA for the file. Although useful, static analysis on its own is probably not sufficient to detect Cobalt Strike.Using hash-based identification of Cobalt Strike is insufficient, since each payload will be encrypted with different keys and each configuration will uniquely change the hash value. It is trivial to generate a new payload for each new target. Checking strings may be insufficient also. Strings for pipe names are dynamically generated and incorporate random numbers, meaning they can change every time the malware is executed. Encrypted payloads will also obfuscate useful strings from static analysis. API Hashing algorithms employed by Cobalt Strike hide imports from static analysis techniques. Signature-based detection is great for detecting malware, but due to the versatility of Cobalt Strike’s deployment using multiple stages and encrypted/obfuscated payloads, an analyst may only be able to detect that a file is going to load and execute a payload in-memory. Without dynamic analysis, they won’t be able to detect exactly what that payload will be.\nDynamic Analysis\nDynamic analysis is the process of executing the suspect file in order to analyze its behavior and how it affects the environment it runs in. Dynamic analysis can open up new areas to explore as one can follow the malware through each stage of its deployment and functionality. Dynamic analysis can get the malware to unpack, decode, or download additional stages. These new stages are then subject to further dynamic analysis as well as the previously mentioned static analysis techniques. Dynamic analysis does not have many limitations, although some malware includes functionality to detect if it is being observed or running inside a sandboxed environment. There is also the possibility that during dynamic analysis, areas of malicious code may not be intentionally executed, and thus not detected in the behavior. The best way to detect malicious code is via genetic code analysis which is done automatically for you in Intezer Analyze.\nCombination of Several Techniques\nThe best way to detect Cobalt Strike code is through a combination of dynamic, static, and genetic analysis. Let’s take a suspicious looking document from an unknown entity as an example. Before opening the document, we submit it to Intezer Analyze and get the verdict, as shown below.Intezer Analyze result showing in-memory Cobalt Strike codeThe document drops and executes Cobalt Strike in the memory space of “rundll32.exe.” Signatures are leveraged to show capabilities and file characteristics. Under the “TTPs” tab the user can see the techniques/capabilities employed by the malicious document. TTPs section showing capabilities detected during executionThe document displays interesting techniques such as macros with auto-execution, network activity with a unique user agent, office process starting martian subprocess, and process injection. You can also dive deeper into capabilities specific to the injected Cobalt Strike process.The “IoCs” tab in Intezer Analyze shows indicators that can help you pivot and search in your environment during investigations to map out the scope of an attack. IoCs provide you with file hashes and network indicators such as URLs, and IP addresses being contacted through irregular ports. IoCs tab showing file and network indicatorsThe “Behavior” tab shows a more in-depth analysis of the file’s behavior, where you can see the process tree, network activity, screenshots and file/registry activity. Behavior tab showing observed behavior during sandbox execution\nThe Only Abused Pen Testing Tool?\nCobalt Strike is not the only penetration testing or legitimate tool that has been co-opted and abused by threat actors. In the past, tools such as Pafish (Paranoid Fish) have been used by Iranian actors in their tooling for virtual machine (VM) detection. The “Sysinternals” suite has been used extensively by threat actors. Most notably, PsExec has been used in high-profile attacks such as the 2017 NotPetya global ransomware outbreak. More recently, legitimate and penetration testing tools for the cloud have been used by threat actors. The threat actor TeamTNT has used Weave Scope, a trusted tool which gives the user full access to their cloud environment, and is integrated with Docker, Kubernetes, the Distributed Cloud Operating System (DC/OS), and AWS Elastic Compute Cloud (EC2). The attacker installs this tool in order to map the cloud environment of their victim and execute system commands without needing to deploy malicious code on the server. The same group has also been documented using the penetration testing tool Break Out The Box (BOTB) for cloud and containerized environments.\nGet Started for Free\nWith Intezer Analyze, you can analyze any suspicious files that you encounter, including non-executable files such as Microsoft Office documents, scripts, archives, and more. Stay on top of analyzing and classifying Cobalt Strike and other threats. Get started for free and start with 50 file uploads per month.The post How to Detect Cobalt Strike appeared first on Intezer.\n", "metadata": {"phasesDone": ["zone", "token", "content"]}, "asets": [{"type": "zone", "hasID": false, "hasSpan": true, "attrs": [{"name": "region_type", "type": "string", "aggregation": null}], "annots": [[0, 15756, "body"]]}, {"type": "lex", "hasID": false, "hasSpan": true, "attrs": [], "annots": [[0, 5], [5, 6], [7, 10], [11, 13], [14, 20], [21, 27], [28, 34], [35, 38], [38, 39], [40, 45], [45, 48], [48, 51], [51, 52], [52, 59], [59, 60], [60, 63], [63, 64], [64, 68], [68, 69], [69, 85], [85, 86], [86, 129], [129, 130], [132, 138], [139, 145], [146, 148], [149, 150], [151, 162], [163, 170], [171, 175], [176, 183], [184, 186], [187, 194], [195, 200], [201, 203], [204, 208], [208, 209], [210, 212], [213, 217], [218, 221], [221, 222], [223, 225], [226, 233], [234, 243], [244, 251], [252, 254], [255, 258], [259, 263], [264, 274], [275, 278], [279, 283], [284, 287], [288, 297], [298, 306], [307, 309], [310, 316], [317, 323], [323, 324], [325, 331], [332, 338], [339, 341], [342, 349], [350, 353], [354, 356], [357, 360], [361, 366], [367, 369], [370, 380], [381, 388], [388, 389], [390, 394], [395, 397], [398, 401], [401, 402], [403, 410], [411, 413], [414, 419], [420, 429], [430, 432], [433, 441], [442, 450], [450, 451], [452, 455], [456, 459], [460, 466], [467, 469], [470, 482], [483, 485], [486, 489], [489, 490], [491, 493], [494, 496], [497, 500], [501, 506], [507, 514], [515, 519], [520, 533], [534, 538], [539, 543], [544, 550], [551, 557], [557, 558], [559, 564], [565, 571], [572, 581], [582, 588], [589, 596], [597, 598], [599, 604], [605, 607], [608, 614], [614, 615], [615, 619], [620, 624], [625, 627], [628, 639], [640, 645], [646, 657], [658, 664], [664, 665], [665, 681], [682, 690], [691, 693], [694, 700], [701, 707], [708, 714], [715, 719], [720, 723], [724, 726], [727, 730], [731, 738], [739, 748], [749, 759], [760, 762], [763, 766], [766, 767], [768, 772], [773, 777], [778, 786], [787, 793], [794, 800], [801, 804], [805, 814], [815, 820], [821, 823], [824, 828], [829, 831], [832, 835], [836, 843], [844, 848], [849, 852], [853, 856], [857, 862], [863, 871], [872, 874], [875, 881], [882, 888], [889, 891], [892, 899], [900, 911], [911, 912], [913, 915], [916, 920], [921, 932], [933, 937], [938, 942], [943, 948], [949, 957], [958, 960], [961, 967], [968, 974], [975, 983], [984, 987], [988, 993], [994, 996], [997, 1003], [1004, 1008], [1008, 1009], [1010, 1014], [1015, 1017], [1018, 1024], [1025, 1031], [1031, 1032], [1033, 1046], [1047, 1049], [1050, 1061], [1062, 1071], [1072, 1075], [1076, 1085], [1086, 1101], [1102, 1105], [1106, 1110], [1111, 1121], [1121, 1122], [1122, 1123], [1124, 1126], [1127, 1129], [1130, 1131], [1132, 1139], [1140, 1148], [1149, 1153], [1154, 1160], [1161, 1166], [1167, 1186], [1187, 1194], [1194, 1195], [1196, 1203], [1204, 1218], [1218, 1219], [1220, 1224], [1225, 1239], [1239, 1240], [1241, 1249], [1250, 1260], [1260, 1261], [1262, 1266], [1267, 1276], [1277, 1283], [1284, 1287], [1288, 1295], [1295, 1296], [1297, 1300], [1301, 1307], [1308, 1318], [1319, 1327], [1327, 1328], [1329, 1332], [1333, 1337], [1338, 1345], [1346, 1348], [1349, 1355], [1356, 1362], [1363, 1365], [1366, 1372], [1373, 1380], [1380, 1381], [1381, 1382], [1383, 1386], [1387, 1401], [1402, 1404], [1405, 1409], [1410, 1412], [1413, 1427], [1428, 1431], [1432, 1439], [1439, 1440], [1441, 1444], [1445, 1448], [1449, 1451], [1452, 1455], [1456, 1465], [1465, 1466], [1468, 1475], [1476, 1484], [1485, 1486], [1486, 1492], [1493, 1502], [1503, 1505], [1506, 1510], [1511, 1513], [1514, 1525], [1526, 1533], [1533, 1534], [1535, 1541], [1542, 1556], [1557, 1561], [1562, 1566], [1566, 1567], [1568, 1573], [1573, 1574], [1575, 1578], [1579, 1582], [1583, 1589], [1590, 1600], [1601, 1608], [1609, 1617], [1618, 1624], [1625, 1628], [1629, 1634], [1635, 1638], [1639, 1646], [1647, 1655], [1656, 1662], [1663, 1672], [1673, 1677], [1678, 1682], [1683, 1693], [1694, 1703], [1704, 1707], [1708, 1718], [1719, 1723], [1724, 1735], [1736, 1739], [1740, 1742], [1743, 1750], [1751, 1759], [1760, 1770], [1771, 1777], [1778, 1781], [1782, 1786], [1787, 1795], [1796, 1802], [1803, 1807], [1808, 1813], [1814, 1819], [1820, 1825], [1826, 1835], [1836, 1840], [1841, 1845], [1846, 1848], [1849, 1855], [1856, 1860], [1861, 1863], [1864, 1867], [1868, 1872], [1873, 1883], [1884, 1887], [1888, 1898], [1899, 1907], [1908, 1911], [1912, 1919], [1920, 1931], [1931, 1932], [1933, 1936], [1937, 1941], [1942, 1946], [1947, 1948], [1949, 1956], [1957, 1961], [1962, 1971], [1972, 1974], [1975, 1985], [1986, 1989], [1990, 1993], [1994, 2000], [2001, 2003], [2004, 2011], [2012, 2020], [2020, 2021], [2022, 2024], [2025, 2027], [2028, 2035], [2036, 2039], [2040, 2046], [2047, 2053], [2054, 2056], [2057, 2061], [2062, 2064], [2065, 2078], [2079, 2082], [2083, 2089], [2090, 2096], [2097, 2102], [2103, 2110], [2111, 2113], [2114, 2117], [2118, 2127], [2128, 2133], [2134, 2136], [2137, 2149], [2150, 2152], [2153, 2162], [2162, 2163], [2164, 2167], [2168, 2172], [2173, 2176], [2177, 2179], [2180, 2183], [2184, 2191], [2192, 2194], [2195, 2201], [2202, 2210], [2210, 2211], [2212, 2214], [2215, 2219], [2220, 2225], [2226, 2230], [2231, 2234], [2235, 2242], [2243, 2245], [2246, 2254], [2255, 2267], [2268, 2273], [2274, 2277], [2278, 2287], [2288, 2292], [2293, 2295], [2296, 2302], [2303, 2308], [2309, 2312], [2313, 2325], [2326, 2331], [2332, 2335], [2336, 2343], [2344, 2349], [2350, 2359], [2359, 2360], [2361, 2364], [2365, 2367], [2368, 2370], [2371, 2380], [2381, 2383], [2384, 2390], [2391, 2397], [2398, 2404], [2404, 2405], [2406, 2412], [2413, 2419], [2420, 2422], [2423, 2432], [2433, 2435], [2436, 2442], [2443, 2450], [2451, 2453], [2454, 2457], [2458, 2465], [2466, 2473], [2474, 2484], [2484, 2485], [2486, 2492], [2493, 2499], [2500, 2508], [2509, 2512], [2513, 2520], [2521, 2530], [2531, 2540], [2541, 2545], [2546, 2547], [2548, 2555], [2556, 2559], [2560, 2563], [2563, 2564], [2565, 2569], [2570, 2575], [2576, 2582], [2583, 2591], [2592, 2601], [2602, 2604], [2605, 2612], [2612, 2613], [2614, 2618], [2618, 2619], [2620, 2628], [2629, 2633], [2634, 2637], [2638, 2645], [2646, 2648], [2649, 2658], [2659, 2663], [2664, 2669], [2670, 2672], [2673, 2676], [2677, 2684], [2684, 2685], [2686, 2691], [2692, 2702], [2703, 2712], [2713, 2719], [2720, 2730], [2730, 2731], [2732, 2738], [2739, 2745], [2746, 2753], [2754, 2757], [2758, 2766], [2767, 2769], [2770, 2772], [2773, 2779], [2780, 2783], [2784, 2792], [2793, 2797], [2798, 2807], [2807, 2808], [2809, 2813], [2814, 2819], [2820, 2822], [2823, 2824], [2825, 2828], [2829, 2831], [2832, 2845], [2846, 2849], [2850, 2853], [2854, 2858], [2859, 2868], [2869, 2871], [2872, 2879], [2879, 2880], [2881, 2887], [2888, 2903], [2904, 2913], [2914, 2916], [2917, 2920], [2921, 2929], [2930, 2936], [2937, 2938], [2939, 2942], [2943, 2946], [2947, 2957], [2957, 2958], [2959, 2968], [2969, 2971], [2972, 2975], [2976, 2979], [2980, 2984], [2985, 2987], [2988, 2997], [2997, 2998], [2999, 3002], [3003, 3007], [3008, 3011], [3012, 3014], [3015, 3023], [3024, 3028], [3029, 3034], [3035, 3045], [3046, 3053], [3054, 3063], [3063, 3064], [3065, 3074], [3075, 3083], [3084, 3088], [3089, 3091], [3092, 3095], [3096, 3100], [3101, 3111], [3112, 3121], [3122, 3124], [3125, 3129], [3130, 3139], [3139, 3140], [3141, 3144], [3145, 3148], [3149, 3155], [3156, 3162], [3163, 3167], [3168, 3176], [3176, 3177], [3178, 3184], [3185, 3191], [3192, 3195], [3196, 3200], [3201, 3210], [3211, 3215], [3216, 3219], [3220, 3230], [3230, 3231], [3232, 3236], [3237, 3248], [3249, 3252], [3253, 3259], [3260, 3269], [3270, 3274], [3275, 3279], [3280, 3294], [3295, 3298], [3299, 3307], [3308, 3312], [3313, 3315], [3316, 3322], [3323, 3330], [3331, 3335], [3336, 3337], [3338, 3345], [3345, 3346], [3347, 3350], [3351, 3353], [3354, 3362], [3363, 3372], [3373, 3381], [3382, 3384], [3385, 3391], [3392, 3400], [3401, 3411], [3412, 3419], [3420, 3423], [3424, 3427], [3428, 3432], [3433, 3439], [3439, 3440], [3441, 3446], [3447, 3450], [3451, 3458], [3459, 3466], [3467, 3471], [3472, 3477], [3478, 3483], [3484, 3489], [3490, 3495], [3495, 3496], [3497, 3502], [3503, 3507], [3508, 3509], [3510, 3514], [3515, 3517], [3518, 3522], [3523, 3527], [3528, 3533], [3534, 3542], [3543, 3545], [3546, 3549], [3550, 3556], [3557, 3563], [3564, 3566], [3567, 3572], [3573, 3577], [3578, 3580], [3581, 3584], [3585, 3589], [3589, 3590], [3591, 3593], [3594, 3598], [3599, 3604], [3605, 3608], [3609, 3618], [3618, 3619], [3620, 3631], [3632, 3641], [3642, 3648], [3649, 3654], [3655, 3661], [3662, 3667], [3668, 3674], [3675, 3681], [3682, 3685], [3686, 3689], [3690, 3694], [3695, 3696], [3696, 3700], [3700, 3701], [3702, 3713], [3714, 3715], [3715, 3718], [3718, 3719], [3720, 3725], [3727, 3738], [3739, 3755], [3756, 3761], [3762, 3764], [3765, 3775], [3776, 3777], [3778, 3784], [3785, 3791], [3792, 3799], [3800, 3805], [3806, 3815], [3816, 3818], [3819, 3826], [3827, 3830], [3831, 3840], [3841, 3846], [3847, 3859], [3860, 3872], [3873, 3877], [3878, 3882], [3883, 3887], [3888, 3890], [3891, 3895], [3896, 3900], [3901, 3903], [3904, 3908], [3909, 3917], [3918, 3927], [3927, 3928], [3929, 3932], [3933, 3937], [3938, 3946], [3947, 3950], [3951, 3958], [3958, 3959], [3960, 3963], [3964, 3970], [3971, 3977], [3978, 3980], [3981, 3988], [3989, 3998], [3999, 4006], [4007, 4008], [4009, 4018], [4019, 4027], [4028, 4032], [4033, 4037], [4038, 4043], [4044, 4046], [4047, 4052], [4053, 4055], [4055, 4058], [4058, 4059], [4060, 4064], [4065, 4067], [4068, 4078], [4078, 4079], [4080, 4088], [4089, 4093], [4094, 4098], [4099, 4101], [4102, 4114], [4115, 4120], [4121, 4128], [4129, 4134], [4135, 4137], [4138, 4145], [4146, 4155], [4156, 4161], [4162, 4164], [4165, 4166], [4167, 4177], [4178, 4186], [4186, 4187], [4188, 4190], [4191, 4200], [4201, 4204], [4205, 4209], [4210, 4220], [4221, 4223], [4224, 4229], [4230, 4238], [4239, 4246], [4247, 4251], [4252, 4254], [4255, 4264], [4264, 4265], [4266, 4272], [4272, 4273], [4274, 4277], [4278, 4284], [4285, 4287], [4288, 4294], [4295, 4301], [4302, 4318], [4319, 4327], [4328, 4336], [4336, 4337], [4338, 4342], [4343, 4347], [4348, 4356], [4357, 4359], [4360, 4365], [4366, 4370], [4371, 4381], [4382, 4384], [4385, 4387], [4388, 4390], [4391, 4396], [4397, 4402], [4403, 4410], [4411, 4421], [4422, 4425], [4426, 4432], [4433, 4440], [4441, 4448], [4449, 4451], [4452, 4456], [4457, 4464], [4464, 4465], [4465, 4477], [4478, 4482], [4483, 4495], [4496, 4498], [4499, 4501], [4502, 4507], [4508, 4513], [4514, 4525], [4526, 4536], [4537, 4539], [4540, 4546], [4546, 4547], [4548, 4551], [4552, 4563], [4564, 4568], [4569, 4574], [4575, 4578], [4579, 4586], [4587, 4590], [4591, 4598], [4599, 4608], [4608, 4609], [4610, 4613], [4614, 4616], [4617, 4623], [4623, 4624], [4625, 4629], [4630, 4633], [4634, 4636], [4637, 4646], [4647, 4649], [4650, 4656], [4656, 4657], [4658, 4660], [4661, 4666], [4667, 4670], [4671, 4679], [4680, 4687], [4688, 4690], [4691, 4701], [4702, 4708], [4709, 4712], [4713, 4719], [4720, 4726], [4727, 4734], [4735, 4737], [4738, 4746], [4746, 4747], [4748, 4757], [4758, 4763], [4764, 4772], [4773, 4780], [4781, 4789], [4790, 4792], [4793, 4798], [4799, 4801], [4802, 4807], [4808, 4811], [4812, 4818], [4819, 4825], [4826, 4831], [4831, 4832], [4833, 4837], [4838, 4842], [4843, 4848], [4849, 4851], [4852, 4859], [4859, 4860], [4861, 4864], [4865, 4869], [4870, 4874], [4875, 4877], [4878, 4884], [4885, 4888], [4889, 4896], [4897, 4903], [4904, 4910], [4911, 4915], [4916, 4919], [4920, 4927], [4928, 4934], [4935, 4945], [4946, 4948], [4949, 4956], [4957, 4961], [4962, 4970], [4970, 4971], [4972, 4976], [4977, 4979], [4980, 4985], [4986, 4988], [4989, 4995], [4996, 5006], [5006, 5007], [5008, 5010], [5011, 5014], [5015, 5017], [5018, 5027], [5028, 5030], [5031, 5038], [5039, 5042], [5043, 5048], [5049, 5053], [5054, 5063], [5064, 5068], [5069, 5072], [5073, 5079], [5080, 5083], [5084, 5087], [5088, 5098], [5099, 5103], [5103, 5104], [5105, 5108], [5109, 5112], [5113, 5117], [5118, 5121], [5122, 5124], [5125, 5133], [5134, 5136], [5137, 5144], [5145, 5148], [5149, 5153], [5154, 5161], [5162, 5171], [5172, 5177], [5178, 5181], [5182, 5190], [5191, 5198], [5199, 5205], [5206, 5216], [5217, 5226], [5227, 5235], [5235, 5236], [5236, 5241], [5242, 5245], [5246, 5248], [5249, 5258], [5259, 5263], [5264, 5273], [5274, 5277], [5278, 5286], [5287, 5288], [5289, 5293], [5294, 5300], [5301, 5303], [5304, 5313], [5314, 5323], [5323, 5324], [5325, 5332], [5333, 5341], [5342, 5345], [5346, 5348], [5349, 5351], [5352, 5355], [5356, 5357], [5358, 5365], [5366, 5369], [5370, 5378], [5379, 5385], [5386, 5391], [5392, 5396], [5397, 5398], [5399, 5407], [5408, 5416], [5417, 5419], [5420, 5425], [5426, 5428], [5429, 5432], [5433, 5439], [5440, 5448], [5449, 5454], [5454, 5455], [5456, 5460], [5461, 5469], [5470, 5478], [5479, 5483], [5484, 5493], [5494, 5503], [5504, 5507], [5508, 5510], [5511, 5516], [5517, 5520], [5521, 5523], [5524, 5528], [5529, 5538], [5538, 5539], [5540, 5542], [5543, 5550], [5551, 5557], [5558, 5561], [5562, 5572], [5573, 5581], [5582, 5585], [5586, 5595], [5596, 5598], [5599, 5601], [5602, 5609], [5610, 5620], [5621, 5625], [5626, 5629], [5630, 5632], [5633, 5639], [5640, 5646], [5647, 5649], [5650, 5656], [5657, 5666], [5666, 5667], [5667, 5674], [5675, 5682], [5683, 5689], [5690, 5700], [5701, 5707], [5708, 5715], [5716, 5735], [5736, 5739], [5740, 5742], [5743, 5746], [5747, 5754], [5755, 5768], [5769, 5776], [5777, 5779], [5780, 5784], [5785, 5788], [5789, 5792], [5793, 5803], [5804, 5810], [5811, 5816], [5817, 5823], [5824, 5828], [5829, 5840], [5841, 5853], [5854, 5862], [5863, 5869], [5870, 5873], [5874, 5879], [5879, 5880], [5881, 5885], [5886, 5892], [5893, 5896], [5897, 5901], [5902, 5904], [5905, 5907], [5908, 5911], [5912, 5917], [5918, 5923], [5924, 5926], [5927, 5935], [5936, 5937], [5937, 5944], [5944, 5945], [5946, 5956], [5957, 5960], [5961, 5968], [5969, 5977], [5978, 5986], [5987, 5989], [5990, 6000], [6001, 6008], [6009, 6011], [6012, 6019], [6020, 6023], [6024, 6030], [6031, 6044], [6044, 6045], [6046, 6051], [6052, 6055], [6056, 6064], [6065, 6072], [6073, 6076], [6077, 6078], [6079, 6085], [6086, 6092], [6093, 6099], [6100, 6106], [6107, 6115], [6116, 6118], [6119, 6126], [6126, 6127], [6128, 6131], [6132, 6139], [6140, 6143], [6144, 6149], [6150, 6158], [6159, 6161], [6162, 6170], [6170, 6171], [6172, 6175], [6176, 6184], [6185, 6192], [6193, 6195], [6196, 6197], [6198, 6209], [6210, 6213], [6214, 6218], [6219, 6223], [6224, 6226], [6227, 6228], [6229, 6236], [6237, 6245], [6246, 6247], [6248, 6254], [6255, 6259], [6260, 6265], [6266, 6269], [6270, 6276], [6277, 6283], [6284, 6291], [6292, 6296], [6297, 6298], [6299, 6303], [6304, 6307], [6308, 6312], [6312, 6313], [6314, 6317], [6318, 6334], [6335, 6337], [6338, 6343], [6344, 6348], [6349, 6350], [6351, 6359], [6360, 6367], [6368, 6370], [6371, 6372], [6372, 6376], [6377, 6383], [6384, 6388], [6388, 6389], [6390, 6392], [6393, 6397], [6398, 6399], [6400, 6409], [6410, 6416], [6417, 6423], [6424, 6428], [6429, 6437], [6437, 6438], [6439, 6443], [6444, 6454], [6455, 6468], [6469, 6471], [6472, 6478], [6479, 6482], [6483, 6488], [6489, 6491], [6492, 6495], [6496, 6503], [6504, 6511], [6511, 6512], [6513, 6517], [6518, 6521], [6522, 6529], [6530, 6537], [6538, 6541], [6542, 6546], [6547, 6554], [6554, 6555], [6556, 6558], [6559, 6567], [6567, 6568], [6569, 6577], [6577, 6578], [6579, 6582], [6583, 6595], [6596, 6599], [6600, 6604], [6605, 6607], [6608, 6610], [6611, 6619], [6620, 6622], [6623, 6632], [6632, 6633], [6634, 6637], [6638, 6640], [6641, 6647], [6647, 6648], [6649, 6651], [6652, 6655], [6656, 6661], [6662, 6664], [6665, 6674], [6675, 6677], [6678, 6684], [6685, 6687], [6688, 6692], [6693, 6705], [6706, 6709], [6710, 6714], [6715, 6718], [6719, 6725], [6726, 6728], [6729, 6730], [6731, 6737], [6738, 6743], [6744, 6750], [6750, 6751], [6752, 6754], [6755, 6758], [6759, 6761], [6762, 6772], [6773, 6777], [6778, 6780], [6781, 6788], [6789, 6797], [6798, 6806], [6807, 6810], [6811, 6813], [6814, 6820], [6821, 6825], [6826, 6828], [6829, 6834], [6835, 6837], [6838, 6843], [6844, 6846], [6847, 6851], [6852, 6855], [6856, 6860], [6861, 6863], [6864, 6874], [6875, 6878], [6879, 6884], [6885, 6890], [6890, 6891], [6892, 6895], [6896, 6898], [6899, 6902], [6903, 6909], [6910, 6912], [6913, 6919], [6920, 6925], [6926, 6933], [6933, 6934], [6935, 6940], [6941, 6944], [6945, 6950], [6951, 6952], [6953, 6958], [6959, 6965], [6966, 6968], [6969, 6977], [6978, 6980], [6981, 6983], [6984, 6996], [6997, 7005], [7006, 7008], [7009, 7012], [7013, 7017], [7017, 7018], [7019, 7021], [7022, 7028], [7029, 7032], [7033, 7036], [7037, 7041], [7042, 7044], [7045, 7047], [7048, 7051], [7052, 7061], [7062, 7066], [7067, 7075], [7076, 7090], [7091, 7094], [7095, 7103], [7104, 7106], [7107, 7110], [7111, 7123], [7123, 7124], [7125, 7129], [7130, 7134], [7135, 7139], [7140, 7143], [7144, 7153], [7154, 7164], [7165, 7169], [7170, 7173], [7174, 7181], [7182, 7186], [7187, 7190], [7191, 7198], [7199, 7207], [7208, 7216], [7217, 7225], [7226, 7228], [7229, 7238], [7239, 7242], [7243, 7249], [7250, 7252], [7253, 7262], [7263, 7267], [7268, 7273], [7274, 7283], [7283, 7284], [7285, 7287], [7288, 7295], [7296, 7298], [7299, 7300], [7301, 7308], [7309, 7313], [7314, 7322], [7323, 7330], [7331, 7337], [7338, 7344], [7345, 7347], [7348, 7353], [7354, 7356], [7357, 7360], [7361, 7369], [7370, 7374], [7375, 7380], [7380, 7381], [7381, 7388], [7389, 7396], [7397, 7405], [7406, 7410], [7411, 7417], [7418, 7421], [7422, 7430], [7431, 7438], [7439, 7442], [7443, 7452], [7453, 7454], [7455, 7463], [7464, 7470], [7471, 7477], [7478, 7485], [7486, 7492], [7493, 7496], [7497, 7500], [7501, 7505], [7506, 7507], [7507, 7511], [7511, 7512], [7513, 7519], [7520, 7523], [7524, 7527], [7528, 7532], [7533, 7534], [7534, 7538], [7538, 7539], [7540, 7542], [7543, 7546], [7547, 7553], [7554, 7561], [7562, 7564], [7565, 7570], [7571, 7581], [7582, 7585], [7586, 7592], [7593, 7598], [7598, 7599], [7600, 7607], [7608, 7616], [7617, 7623], [7624, 7627], [7628, 7637], [7638, 7644], [7644, 7645], [7646, 7648], [7649, 7656], [7657, 7664], [7664, 7665], [7666, 7670], [7671, 7673], [7674, 7675], [7676, 7684], [7685, 7691], [7692, 7694], [7695, 7697], [7698, 7701], [7702, 7708], [7709, 7711], [7712, 7724], [7725, 7729], [7730, 7735], [7736, 7744], [7745, 7751], [7752, 7755], [7756, 7762], [7763, 7768], [7769, 7771], [7772, 7773], [7774, 7781], [7782, 7789], [7789, 7790], [7791, 7798], [7799, 7806], [7807, 7815], [7816, 7818], [7819, 7825], [7826, 7831], [7832, 7835], [7836, 7841], [7841, 7842], [7843, 7847], [7848, 7852], [7853, 7855], [7856, 7862], [7863, 7867], [7868, 7873], [7874, 7882], [7883, 7891], [7892, 7901], [7901, 7902], [7903, 7908], [7909, 7917], [7918, 7923], [7924, 7928], [7929, 7935], [7936, 7939], [7940, 7945], [7946, 7956], [7957, 7966], [7967, 7973], [7974, 7980], [7980, 7981], [7982, 7985], [7986, 7995], [7996, 8000], [8001, 8003], [8004, 8013], [8014, 8016], [8017, 8022], [8023, 8025], [8026, 8030], [8031, 8035], [8036, 8039], [8040, 8046], [8047, 8049], [8050, 8053], [8054, 8062], [8062, 8063], [8064, 8067], [8068, 8075], [8076, 8080], [8081, 8085], [8086, 8089], [8090, 8094], [8095, 8105], [8106, 8108], [8109, 8112], [8113, 8122], [8122, 8123], [8123, 8126], [8127, 8136], [8137, 8144], [8145, 8151], [8152, 8159], [8159, 8160], [8161, 8168], [8169, 8171], [8172, 8175], [8176, 8181], [8182, 8190], [8191, 8195], [8196, 8199], [8200, 8209], [8210, 8213], [8214, 8220], [8221, 8227], [8227, 8228], [8229, 8235], [8236, 8242], [8243, 8249], [8250, 8252], [8253, 8260], [8261, 8263], [8264, 8269], [8270, 8278], [8279, 8282], [8283, 8290], [8291, 8294], [8295, 8303], [8303, 8304], [8305, 8314], [8315, 8318], [8319, 8323], [8324, 8326], [8327, 8331], [8332, 8339], [8339, 8340], [8340, 8343], [8343, 8344], [8345, 8346], [8347, 8354], [8355, 8357], [8357, 8361], [8361, 8362], [8363, 8367], [8367, 8368], [8369, 8371], [8372, 8377], [8378, 8381], [8382, 8389], [8389, 8390], [8391, 8394], [8395, 8402], [8402, 8403], [8404, 8411], [8412, 8421], [8421, 8422], [8423, 8425], [8426, 8434], [8435, 8439], [8440, 8447], [8448, 8455], [8455, 8456], [8457, 8461], [8462, 8468], [8469, 8471], [8472, 8481], [8482, 8485], [8486, 8495], [8496, 8498], [8499, 8514], [8515, 8524], [8525, 8528], [8529, 8532], [8533, 8537], [8538, 8540], [8541, 8547], [8548, 8555], [8556, 8561], [8562, 8565], [8566, 8574], [8575, 8579], [8580, 8588], [8589, 8596], [8596, 8597], [8598, 8602], [8603, 8612], [8613, 8616], [8617, 8625], [8626, 8628], [8629, 8634], [8635, 8640], [8641, 8652], [8653, 8655], [8656, 8663], [8664, 8670], [8671, 8677], [8678, 8684], [8684, 8685], [8685, 8692], [8693, 8697], [8698, 8704], [8705, 8710], [8711, 8716], [8716, 8717], [8718, 8721], [8722, 8729], [8730, 8734], [8735, 8738], [8739, 8741], [8742, 8749], [8750, 8753], [8754, 8764], [8765, 8772], [8772, 8773], [8774, 8778], [8779, 8786], [8787, 8789], [8790, 8799], [8799, 8800], [8801, 8813], [8813, 8814], [8815, 8818], [8819, 8823], [8824, 8830], [8831, 8835], [8836, 8842], [8842, 8843], [8844, 8847], [8848, 8857], [8858, 8860], [8861, 8865], [8866, 8874], [8875, 8877], [8878, 8879], [8880, 8883], [8884, 8890], [8890, 8891], [8892, 8895], [8896, 8898], [8899, 8905], [8905, 8906], [8907, 8909], [8910, 8918], [8919, 8923], [8924, 8925], [8926, 8932], [8933, 8941], [8942, 8946], [8947, 8953], [8954, 8960], [8961, 8964], [8965, 8972], [8973, 8975], [8976, 8981], [8982, 8987], [8987, 8988], [8989, 8993], [8994, 8997], [8998, 9005], [9006, 9010], [9011, 9013], [9014, 9017], [9018, 9024], [9025, 9035], [9036, 9039], [9040, 9049], [9050, 9054], [9054, 9055], [9055, 9063], [9064, 9071], [9072, 9080], [9081, 9085], [9086, 9088], [9089, 9090], [9091, 9097], [9098, 9113], [9114, 9120], [9121, 9124], [9125, 9129], [9130, 9139], [9140, 9151], [9152, 9153], [9153, 9156], [9156, 9157], [9158, 9163], [9164, 9169], [9170, 9172], [9173, 9175], [9176, 9183], [9184, 9186], [9187, 9190], [9191, 9197], [9198, 9204], [9205, 9210], [9211, 9217], [9218, 9224], [9225, 9230], [9230, 9231], [9231, 9232], [9233, 9237], [9238, 9244], [9245, 9248], [9249, 9254], [9255, 9257], [9258, 9264], [9264, 9265], [9266, 9272], [9272, 9273], [9273, 9274], [9275, 9284], [9285, 9291], [9292, 9294], [9295, 9301], [9301, 9302], [9303, 9306], [9307, 9314], [9315, 9318], [9319, 9322], [9323, 9329], [9330, 9336], [9337, 9339], [9340, 9342], [9343, 9351], [9352, 9354], [9355, 9357], [9358, 9359], [9360, 9366], [9367, 9374], [9375, 9378], [9379, 9383], [9383, 9384], [9385, 9389], [9390, 9398], [9399, 9405], [9406, 9412], [9413, 9424], [9425, 9432], [9433, 9435], [9436, 9439], [9440, 9443], [9444, 9450], [9451, 9453], [9454, 9461], [9462, 9465], [9466, 9473], [9474, 9476], [9477, 9484], [9485, 9492], [9492, 9493], [9493, 9499], [9500, 9502], [9503, 9510], [9511, 9514], [9515, 9519], [9519, 9520], [9521, 9525], [9526, 9533], [9534, 9542], [9543, 9551], [9552, 9554], [9555, 9556], [9557, 9563], [9564, 9568], [9569, 9573], [9574, 9576], [9577, 9578], [9579, 9584], [9585, 9589], [9590, 9593], [9594, 9603], [9604, 9614], [9614, 9615], [9616, 9620], [9621, 9624], [9625, 9634], [9635, 9637], [9638, 9645], [9646, 9648], [9649, 9652], [9653, 9658], [9659, 9663], [9663, 9664], [9665, 9667], [9668, 9670], [9671, 9680], [9681, 9684], [9685, 9693], [9694, 9696], [9697, 9698], [9699, 9707], [9708, 9714], [9714, 9715], [9716, 9719], [9720, 9722], [9723, 9729], [9729, 9730], [9731, 9733], [9734, 9741], [9742, 9744], [9745, 9748], [9749, 9751], [9752, 9757], [9758, 9766], [9767, 9769], [9770, 9775], [9776, 9778], [9779, 9782], [9783, 9797], [9797, 9798], [9799, 9805], [9806, 9809], [9810, 9813], [9814, 9820], [9821, 9827], [9828, 9832], [9833, 9835], [9836, 9840], [9841, 9846], [9847, 9851], [9852, 9854], [9855, 9857], [9858, 9866], [9867, 9870], [9871, 9876], [9877, 9886], [9886, 9887], [9887, 9893], [9894, 9900], [9901, 9906], [9907, 9910], [9911, 9917], [9918, 9926], [9927, 9930], [9931, 9934], [9935, 9941], [9942, 9948], [9949, 9951], [9952, 9960], [9961, 9964], [9965, 9975], [9975, 9976], [9977, 9980], [9981, 9983], [9984, 9987], [9988, 9992], [9993, 9997], [9998, 10004], [10005, 10011], [10012, 10014], [10015, 10023], [10023, 10024], [10025, 10034], [10035, 10038], [10039, 10041], [10042, 10046], [10046, 10047], [10048, 10051], [10052, 10055], [10056, 10058], [10059, 10068], [10068, 10069], [10070, 10078], [10078, 10079], [10080, 10091], [10091, 10092], [10093, 10103], [10104, 10111], [10111, 10112], [10113, 10120], [10121, 10130], [10130, 10131], [10132, 10139], [10140, 10150], [10150, 10151], [10152, 10158], [10159, 10167], [10167, 10168], [10169, 10178], [10179, 10192], [10193, 10201], [10201, 10202], [10203, 10206], [10207, 10218], [10219, 10225], [10226, 10235], [10236, 10239], [10240, 10244], [10245, 10252], [10253, 10256], [10257, 10264], [10265, 10273], [10274, 10275], [10276, 10279], [10280, 10283], [10284, 10289], [10290, 10295], [10295, 10296], [10297, 10303], [10304, 10312], [10313, 10319], [10320, 10328], [10329, 10337], [10338, 10347], [10348, 10351], [10352, 10356], [10357, 10362], [10363, 10370], [10371, 10381], [10382, 10389], [10390, 10398], [10399, 10405], [10406, 10408], [10409, 10416], [10417, 10420], [10421, 10425], [10426, 10432], [10432, 10433], [10434, 10440], [10441, 10449], [10450, 10453], [10454, 10461], [10462, 10469], [10470, 10473], [10474, 10478], [10479, 10482], [10483, 10490], [10491, 10496], [10497, 10499], [10500, 10502], [10502, 10503], [10504, 10510], [10511, 10512], [10513, 10517], [10518, 10520], [10521, 10524], [10525, 10532], [10533, 10535], [10536, 10539], [10540, 10542], [10543, 10548], [10549, 10552], [10553, 10566], [10567, 10569], [10570, 10577], [10578, 10588], [10588, 10589], [10590, 10592], [10593, 10601], [10602, 10609], [10610, 10613], [10614, 10621], [10622, 10632], [10633, 10637], [10638, 10640], [10641, 10645], [10646, 10653], [10654, 10658], [10658, 10659], [10660, 10668], [10669, 10675], [10675, 10676], [10677, 10683], [10684, 10692], [10693, 10695], [10696, 10699], [10700, 10703], [10704, 10706], [10707, 10715], [10716, 10719], [10720, 10730], [10731, 10733], [10734, 10740], [10741, 10747], [10748, 10754], [10754, 10755], [10755, 10760], [10761, 10771], [10772, 10786], [10787, 10789], [10790, 10796], [10797, 10803], [10804, 10806], [10807, 10819], [10819, 10820], [10821, 10826], [10827, 10831], [10832, 10839], [10840, 10844], [10845, 10847], [10848, 10857], [10858, 10862], [10863, 10872], [10873, 10877], [10878, 10881], [10882, 10886], [10887, 10900], [10901, 10905], [10906, 10914], [10915, 10921], [10922, 10925], [10926, 10930], [10931, 10936], [10936, 10937], [10938, 10940], [10941, 10943], [10944, 10951], [10952, 10954], [10955, 10963], [10964, 10965], [10966, 10969], [10970, 10977], [10978, 10981], [10982, 10986], [10987, 10990], [10991, 10997], [10997, 10998], [10999, 11007], [11008, 11015], [11016, 11019], [11020, 11022], [11023, 11035], [11036, 11040], [11040, 11041], [11042, 11049], [11050, 11053], [11054, 11058], [11059, 11064], [11065, 11068], [11069, 11080], [11081, 11090], [11091, 11094], [11095, 11106], [11107, 11113], [11114, 11121], [11121, 11122], [11123, 11130], [11131, 11135], [11136, 11139], [11140, 11146], [11147, 11152], [11153, 11157], [11158, 11161], [11162, 11169], [11170, 11172], [11173, 11181], [11181, 11182], [11183, 11192], [11193, 11201], [11202, 11206], [11207, 11211], [11212, 11221], [11222, 11228], [11229, 11236], [11237, 11241], [11242, 11248], [11249, 11257], [11257, 11258], [11259, 11262], [11263, 11281], [11282, 11290], [11291, 11293], [11294, 11300], [11301, 11307], [11308, 11312], [11313, 11320], [11321, 11325], [11326, 11332], [11333, 11341], [11342, 11352], [11352, 11353], [11354, 11369], [11370, 11379], [11380, 11382], [11383, 11388], [11389, 11392], [11393, 11402], [11403, 11410], [11410, 11411], [11412, 11415], [11416, 11419], [11420, 11422], [11423, 11426], [11427, 11438], [11439, 11441], [11442, 11448], [11449, 11457], [11458, 11468], [11469, 11474], [11475, 11483], [11484, 11490], [11491, 11494], [11495, 11504], [11504, 11505], [11505, 11515], [11516, 11524], [11524, 11525], [11526, 11528], [11529, 11536], [11537, 11540], [11541, 11545], [11546, 11548], [11549, 11553], [11554, 11556], [11557, 11563], [11564, 11568], [11569, 11570], [11571, 11575], [11576, 11578], [11579, 11584], [11585, 11587], [11588, 11592], [11593, 11596], [11597, 11604], [11605, 11606], [11607, 11614], [11615, 11624], [11624, 11625], [11626, 11633], [11634, 11641], [11642, 11650], [11650, 11651], [11652, 11662], [11663, 11665], [11666, 11670], [11671, 11673], [11674, 11680], [11681, 11688], [11689, 11693], [11694, 11698], [11699, 11706], [11707, 11711], [11712, 11714], [11714, 11715], [11716, 11723], [11724, 11732], [11733, 11740], [11741, 11749], [11750, 11752], [11753, 11756], [11757, 11764], [11765, 11767], [11768, 11777], [11778, 11781], [11782, 11789], [11790, 11794], [11795, 11797], [11798, 11803], [11804, 11806], [11807, 11814], [11815, 11818], [11819, 11827], [11828, 11831], [11832, 11835], [11836, 11838], [11839, 11846], [11847, 11850], [11851, 11862], [11863, 11865], [11866, 11870], [11871, 11873], [11873, 11874], [11875, 11882], [11883, 11891], [11892, 11895], [11896, 11900], [11901, 11903], [11904, 11907], [11908, 11913], [11914, 11916], [11917, 11924], [11925, 11927], [11928, 11931], [11932, 11935], [11936, 11942], [11943, 11946], [11947, 11954], [11955, 11962], [11963, 11967], [11968, 11973], [11974, 11976], [11977, 11980], [11981, 11991], [11992, 11995], [11996, 12009], [12009, 12010], [12011, 12018], [12019, 12027], [12028, 12031], [12032, 12035], [12036, 12039], [12040, 12047], [12048, 12050], [12051, 12057], [12057, 12058], [12059, 12065], [12065, 12066], [12067, 12069], [12070, 12078], [12079, 12089], [12090, 12096], [12096, 12097], [12098, 12103], [12104, 12107], [12108, 12114], [12115, 12118], [12119, 12123], [12124, 12131], [12132, 12134], [12135, 12142], [12143, 12150], [12151, 12159], [12160, 12162], [12163, 12167], [12168, 12170], [12171, 12174], [12175, 12185], [12186, 12195], [12196, 12202], [12203, 12211], [12212, 12222], [12222, 12223], [12224, 12231], [12232, 12240], [12241, 12245], [12246, 12249], [12250, 12254], [12255, 12259], [12260, 12271], [12271, 12272], [12273, 12281], [12282, 12286], [12287, 12294], [12295, 12303], [12304, 12317], [12318, 12320], [12321, 12327], [12328, 12330], [12331, 12333], [12334, 12336], [12337, 12342], [12343, 12351], [12352, 12354], [12355, 12362], [12363, 12369], [12370, 12371], [12372, 12381], [12382, 12393], [12393, 12394], [12395, 12400], [12401, 12403], [12404, 12408], [12409, 12412], [12413, 12424], [12425, 12429], [12430, 12436], [12437, 12444], [12445, 12453], [12453, 12454], [12455, 12460], [12461, 12463], [12464, 12473], [12474, 12478], [12479, 12482], [12483, 12486], [12487, 12489], [12490, 12503], [12504, 12512], [12512, 12513], [12514, 12517], [12518, 12522], [12523, 12526], [12527, 12535], [12536, 12538], [12539, 12542], [12543, 12551], [12551, 12552], [12553, 12556], [12557, 12561], [12562, 12565], [12566, 12568], [12569, 12575], [12576, 12585], [12586, 12590], [12591, 12593], [12594, 12597], [12598, 12605], [12606, 12610], [12611, 12625], [12626, 12628], [12629, 12633], [12634, 12647], [12648, 12651], [12652, 12655], [12656, 12658], [12659, 12666], [12667, 12674], [12674, 12675], [12676, 12687], [12688, 12690], [12691, 12698], [12699, 12709], [12710, 12713], [12714, 12718], [12719, 12722], [12723, 12725], [12726, 12732], [12733, 12739], [12740, 12746], [12747, 12751], [12752, 12754], [12755, 12762], [12763, 12764], [12765, 12776], [12777, 12779], [12780, 12787], [12787, 12788], [12789, 12795], [12795, 12796], [12797, 12800], [12801, 12808], [12809, 12817], [12817, 12818], [12819, 12824], [12825, 12829], [12830, 12831], [12832, 12842], [12843, 12850], [12851, 12859], [12860, 12864], [12865, 12867], [12868, 12875], [12876, 12882], [12883, 12885], [12886, 12888], [12889, 12896], [12896, 12897], [12898, 12904], [12905, 12912], [12913, 12916], [12917, 12925], [12925, 12926], [12927, 12929], [12930, 12936], [12937, 12939], [12940, 12942], [12943, 12950], [12951, 12958], [12959, 12962], [12963, 12966], [12967, 12970], [12971, 12978], [12978, 12979], [12980, 12982], [12983, 12988], [12989, 12994], [12994, 12995], [12995, 13002], [13003, 13010], [13011, 13025], [13026, 13035], [13035, 13042], [13043, 13049], [13050, 13057], [13058, 13066], [13067, 13072], [13073, 13076], [13077, 13085], [13086, 13092], [13093, 13099], [13100, 13102], [13103, 13106], [13107, 13113], [13114, 13119], [13120, 13122], [13123, 13132], [13132, 13133], [13133, 13136], [13136, 13137], [13137, 13138], [13139, 13149], [13150, 13153], [13154, 13163], [13164, 13166], [13167, 13171], [13172, 13188], [13189, 13193], [13194, 13209], [13209, 13210], [13211, 13216], [13217, 13220], [13221, 13227], [13228, 13231], [13232, 13235], [13236, 13240], [13241, 13244], [13245, 13248], [13249, 13252], [13253, 13263], [13263, 13264], [13264, 13276], [13277, 13285], [13286, 13288], [13289, 13292], [13293, 13302], [13303, 13311], [13311, 13312], [13313, 13333], [13334, 13346], [13347, 13355], [13356, 13362], [13363, 13375], [13376, 13384], [13385, 13393], [13394, 13405], [13406, 13416], [13417, 13421], [13422, 13424], [13425, 13431], [13432, 13436], [13437, 13451], [13451, 13452], [13453, 13460], [13461, 13469], [13470, 13474], [13475, 13476], [13477, 13483], [13484, 13488], [13489, 13494], [13494, 13495], [13496, 13502], [13503, 13510], [13511, 13519], [13520, 13538], [13538, 13539], [13540, 13543], [13544, 13551], [13552, 13561], [13561, 13562], [13563, 13566], [13567, 13570], [13571, 13575], [13576, 13580], [13581, 13587], [13588, 13592], [13593, 13605], [13606, 13614], [13615, 13617], [13618, 13621], [13622, 13630], [13631, 13637], [13638, 13644], [13645, 13652], [13652, 13653], [13653, 13656], [13657, 13663], [13664, 13667], [13668, 13670], [13671, 13678], [13679, 13686], [13687, 13692], [13693, 13703], [13704, 13708], [13709, 13712], [13713, 13717], [13718, 13721], [13722, 13731], [13732, 13738], [13739, 13741], [13742, 13746], [13747, 13765], [13766, 13780], [13781, 13783], [13784, 13787], [13788, 13791], [13792, 13795], [13796, 13801], [13802, 13804], [13805, 13807], [13808, 13814], [13814, 13815], [13816, 13820], [13821, 13828], [13829, 13832], [13833, 13837], [13838, 13842], [13843, 13849], [13850, 13853], [13854, 13861], [13862, 13872], [13873, 13877], [13878, 13880], [13881, 13885], [13885, 13886], [13887, 13890], [13891, 13893], [13894, 13903], [13904, 13909], [13910, 13919], [13920, 13927], [13928, 13937], [13938, 13943], [13943, 13944], [13945, 13961], [13962, 13966], [13967, 13970], [13971, 13978], [13979, 13992], [13993, 14003], [14004, 14007], [14008, 14013], [14014, 14015], [14016, 14020], [14021, 14029], [14030, 14038], [14039, 14041], [14042, 14045], [14046, 14052], [14053, 14061], [14061, 14062], [14063, 14068], [14069, 14072], [14073, 14076], [14077, 14080], [14081, 14084], [14085, 14092], [14093, 14097], [14097, 14098], [14099, 14106], [14107, 14115], [14115, 14116], [14117, 14128], [14129, 14132], [14133, 14137], [14137, 14138], [14138, 14146], [14147, 14155], [14155, 14156], [14157, 14177], [14178, 14186], [14187, 14195], [14196, 14202], [14203, 14210], [14211, 14220], [14221, 14224], [14225, 14229], [14230, 14236], [14237, 14240], [14241, 14248], [14249, 14253], [14253, 14254], [14255, 14261], [14262, 14268], [14269, 14271], [14272, 14275], [14276, 14279], [14280, 14296], [14297, 14304], [14305, 14307], [14308, 14318], [14319, 14323], [14324, 14328], [14329, 14332], [14333, 14337], [14338, 14346], [14347, 14350], [14351, 14357], [14358, 14360], [14361, 14367], [14368, 14374], [14374, 14375], [14376, 14378], [14379, 14382], [14383, 14387], [14387, 14388], [14389, 14394], [14395, 14399], [14400, 14402], [14403, 14410], [14410, 14411], [14411, 14419], [14420, 14424], [14424, 14425], [14426, 14430], [14431, 14435], [14436, 14440], [14441, 14451], [14452, 14458], [14459, 14461], [14462, 14467], [14468, 14475], [14476, 14479], [14480, 14487], [14488, 14495], [14496, 14497], [14497, 14499], [14499, 14500], [14501, 14510], [14510, 14511], [14512, 14515], [14516, 14530], [14531, 14536], [14537, 14540], [14541, 14545], [14546, 14550], [14551, 14562], [14563, 14565], [14566, 14572], [14573, 14579], [14579, 14580], [14581, 14585], [14586, 14593], [14593, 14594], [14595, 14605], [14606, 14610], [14611, 14615], [14616, 14618], [14619, 14631], [14632, 14639], [14640, 14644], [14645, 14647], [14648, 14651], [14652, 14656], [14657, 14672], [14673, 14683], [14684, 14692], [14692, 14693], [14694, 14698], [14699, 14707], [14707, 14708], [14709, 14719], [14720, 14723], [14724, 14735], [14736, 14743], [14744, 14749], [14750, 14753], [14754, 14757], [14758, 14763], [14764, 14768], [14769, 14773], [14774, 14778], [14779, 14781], [14782, 14788], [14789, 14795], [14795, 14796], [14797, 14800], [14801, 14807], [14808, 14813], [14814, 14821], [14822, 14825], [14826, 14836], [14837, 14842], [14842, 14843], [14844, 14845], [14846, 14853], [14854, 14858], [14859, 14864], [14865, 14870], [14871, 14874], [14875, 14879], [14880, 14884], [14885, 14891], [14892, 14894], [14895, 14900], [14901, 14906], [14907, 14918], [14918, 14919], [14920, 14923], [14924, 14926], [14927, 14937], [14938, 14942], [14943, 14949], [14949, 14950], [14951, 14961], [14961, 14962], [14963, 14966], [14967, 14978], [14979, 14984], [14985, 14994], [14995, 15001], [15002, 15003], [15003, 15005], [15005, 15006], [15006, 15008], [15008, 15010], [15011, 15014], [15015, 15018], [15019, 15026], [15027, 15034], [15035, 15040], [15041, 15042], [15042, 15045], [15045, 15047], [15048, 15051], [15052, 15060], [15061, 15069], [15070, 15074], [15075, 15079], [15080, 15082], [15083, 15088], [15089, 15091], [15092, 15095], [15096, 15099], [15100, 15105], [15106, 15117], [15118, 15120], [15121, 15126], [15127, 15133], [15134, 15137], [15138, 15145], [15146, 15152], [15153, 15161], [15162, 15169], [15170, 15177], [15178, 15180], [15181, 15187], [15188, 15197], [15198, 15202], [15203, 15205], [15206, 15209], [15210, 15216], [15216, 15217], [15218, 15221], [15222, 15226], [15227, 15232], [15233, 15236], [15237, 15241], [15242, 15246], [15247, 15263], [15264, 15267], [15268, 15279], [15280, 15287], [15288, 15292], [15293, 15298], [15299, 15302], [15303, 15306], [15307, 15311], [15311, 15312], [15312, 15316], [15316, 15317], [15318, 15321], [15322, 15327], [15328, 15331], [15332, 15345], [15346, 15358], [15358, 15359], [15360, 15363], [15364, 15371], [15372, 15375], [15376, 15380], [15381, 15385], [15386, 15393], [15394, 15401], [15401, 15402], [15403, 15406], [15407, 15410], [15411, 15418], [15419, 15422], [15423, 15433], [15434, 15439], [15440, 15444], [15445, 15448], [15449, 15458], [15458, 15459], [15460, 15469], [15470, 15484], [15485, 15490], [15491, 15495], [15496, 15498], [15499, 15508], [15509, 15515], [15516, 15525], [15525, 15526], [15527, 15534], [15534, 15535], [15536, 15544], [15544, 15545], [15546, 15549], [15550, 15554], [15554, 15555], [15556, 15560], [15561, 15563], [15564, 15567], [15568, 15570], [15571, 15580], [15581, 15584], [15585, 15596], [15597, 15603], [15604, 15610], [15611, 15614], [15615, 15620], [15621, 15628], [15628, 15629], [15630, 15633], [15634, 15645], [15646, 15650], [15651, 15654], [15655, 15660], [15661, 15665], [15666, 15668], [15669, 15673], [15674, 15681], [15682, 15685], [15686, 15691], [15691, 15692], [15692, 15695], [15696, 15700], [15701, 15704], [15705, 15707], [15708, 15714], [15715, 15721], [15722, 15728], [15729, 15737], [15738, 15743], [15744, 15746], [15747, 15754], [15754, 15755]]}, {"type": "SEGMENT", "hasID": false, "hasSpan": true, "attrs": [{"name": "annotator", "type": "string", "aggregation": null}, {"name": "set", "type": "string", "aggregation": null}, {"name": "status", "type": "string", "aggregation": null}], "annots": [[0, 15756, "jlasky", "content", "human gold"]]}, {"type": "Modify Registry (T1112)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1618, 1655]]}, {"type": "Query Registry (T1012)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1629, 1655]]}, {"type": "Keylogging (T1056.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1704, 1718]]}, {"type": "Bypass User Account Control (T1548.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1771, 1781]]}, {"type": "Web Protocols (T1071.001)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1535, 1573]]}, {"type": "Screen Capture (T1113)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1719, 1735]]}, {"type": "Proxy (T1090)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[1736, 1750]]}, {"type": "Obfuscated Files or Information (T1027)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2500, 2564], [6513, 6554], [8718, 8772], [10048, 10111], [10821, 10937], [11183, 11258], [11469, 11524]]}, {"type": "Process Injection (T1055)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[2999, 3063], [8391, 8456], [8844, 8891], [8907, 8941], [10113, 10130], [13540, 13561], [1656, 1703]]}, {"type": "Windows Service (T1543.003)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6193, 6236]]}, {"type": "Steganography (T1027.003)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6255, 6313], [6439, 6511]]}, {"type": "Software Packing (T1027.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6390, 6423], [12036, 12057]]}, {"type": "Deobfuscate/Decode Files or Information (T1140)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[6554, 6633], [8774, 8842], [9665, 9693], [12059, 12065]]}, {"type": "Domain Fronting (T1090.004)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[10152, 10167]]}, {"type": "Ingress Tool Transfer (T1105)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[12067, 12097]]}, {"type": "Rundll32 (T1218.011)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[13067, 13138]]}, {"type": "Malicious File (T1204.002)", "hasID": false, "hasSpan": true, "attrs": [{"name": "comment", "type": "string", "aggregation": null}], "annots": [[9385, 9520]]}], "version": 2}